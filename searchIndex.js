export default {
  "index": {
    "title": "CSS",
    "path": "index",
    "content": "\n\nimport {Box, Flex, Heading, Link, Text} from '@primer/components'\nimport {\n  PrimerCSSAnimation,\n  MetaPackageBox,\n  PrimerPackageBox,\n  PrimitivesOverview,\n  StylesOverview\n} from '../../docs/landing'\nimport {CONTENT_MAX_WIDTH} from '../../docs/constants'\nimport {name, version} from '../../package.json'\nimport {bundles} from '../../dist/meta.json'\n\nexport const Hero = () => (\n  <Box bg=\"black\">\n    <Box maxWidth={CONTENT_MAX_WIDTH} p={6} mx=\"auto\" mb={3}>\n      <Box mt={4} mb={4}>\n        <Heading color=\"blue.4\" fontSize={7} pb={3} m={0}>\n          Primer CSS\n        </Heading>\n        <Text is=\"div\" color=\"blue.2\" fontSize={2} mb={4}>\n          v{version}\n        </Text>\n        <Box is={PrimerCSSAnimation} mb={6} />\n      </Box>\n    </Box>\n  </Box>\n)\n\n# Introduction\n\nOur goal is to create a system that enables us to build consistent user experiences with ease, yet with enough flexibility to support the broad spectrum of GitHub websites. This goal is embedded in our design and code decisions. Our approach to CSS is influenced by Object Oriented CSS principles, functional CSS, and BEM architecture.\n\n## Highly reusable, flexible styles\n\nStyles can be mixed and matched to achieve many different layouts, independent of their location. These styles fall into three categories:\n\n<StylesOverview m={6} />\n\n## Systematically designed for GitHub\n\nPrimer is built upon systems that form the foundation of our styles such as spacing, typography, and color. This systematic approach helps ensure our styles are consistent and interoperable with each other.\n\n<PrimitivesOverview />\n\n## Primer packages\n\nEach component or group of styles is packaged up and distributed via npm. Primer includes 23 packages that are grouped into useful meta-packages for easy install. Each package and meta-package is independently versioned and distributed via npm, so it's easy to include all or part of Primer within your own project.\n\n<PrimerPackageBox meta={bundles.primer} count={Object.keys(bundles).length - 1} mb={4} />\n\n<Flex justifyContent=\"space-around\" mb={6}>\n  <MetaPackageBox title=\"Core\" meta={bundles.core} width={1/3}>\n    The core bundle contains styles that are shared between GitHub product and marketing websites.\n  </MetaPackageBox>\n  <MetaPackageBox title=\"Product\" meta={bundles.product} width={1/3}>\n    The product bundle contains styles that are used on GitHub product websites.\n  </MetaPackageBox>\n  <MetaPackageBox title=\"Marketing\" meta={bundles.marketing} width={1/3}>\n    The marketing bundle contains styles that are used on GitHub marketing websites.\n  </MetaPackageBox>\n</Flex>\n\n\n<div class=\"bg-gray py-6\">\n  <div class=\"d-flex flex-wrap flex-md-nowrap px-6 gutter-lg\">\n    <div class=\"col-12 col-md-9 pr-0 pr-lg-2\">\n      <h3 class=\"f3 text-normal m-0\">Use Primer in your project</h3>\n      <p class=\"my-3\">Pick and choose what you need. Install the entire Primer bundle or individual packages via npm.</p>\n      <a href=\"/css/getting-started\" class=\"btn btn-outline\">Installation instructions</a>\n    </div>\n  </div>\n</div>\n"
  },
  "status-key": {
    "title": "Status key",
    "path": "status-key",
    "content": "\nimport StatusLabel from '../../docs/StatusLabel'\n\nPrimer is constantly evolving and we have many styles to refactor and bring up to standard. The status of each package is shown with it's corresponding documentation so you can be confident which styles are safe to use.\n\n| Label | Description |\n| :----- | :--- |\n| <StatusLabel id=\"stable\" status=\"Stable\" /> | These styles are safe to use in production and there are currently no planned updates. If you find a problem with these styles please [open and issue](https://github.com/github/design-systems/issues). |\n| <StatusLabel id=\"new-release\" status=\"New release\" /> | These are newly shipped styles that are safe to use in production. While these styles will have been thoroughly tested before being shipped you may find room for improvements in the documentation, and it's possible you may find the occasional bug. Like all the code we ship, the best test is when lots of people start using it. We'll link to a corresponding feedback issue for new releases so you can comment if you find any problems or have questions. |\n| <StatusLabel id=\"experimental\" status=\"Experimental\" /> | These styles are a work in progress that are safe to use, but haven't been battle-tested yet. That means they may go through more significant changes in the near future. You can use these styles and help us test out these styles while we're working on, them as long as you are prepared for changes (though we'll handle updates as much as possible for you). We will have a corresponding issue for experimental styles where you can let us know you're using them, and can leave feedback or ask questions. |\n| <StatusLabel id=\"in-review\" status=\"In review\" /> | This means we are actively reviewing these styles with a view to refactor or deprecate them. They are still safe to use in production but if you are considering using them on a new feature it would be good to talk to us so we can make sure that our review doesn't disrupt your work. All styles in review will have a corresponding issue explaining why they are in review and will link to any relevant pull requests. |\n| <StatusLabel id=\"deprecated\" status=\"Deprecated\" /> | These styles are in the process of being removed and should no longer be used in production. The design systems team are responsible for updating existing views that currently use these styles, however you can help us by replacing deprecated classes from views that you are working on (if you have the time). You will get a lint error telling you to replace these styles if you attempt to add new instances. Please contact us if this causes you a problem. |\n"
  },
  "components/alerts": {
    "title": "Alerts",
    "path": "components/alerts",
    "content": "\n\nFlash messages, or alerts, inform users of successful or pending actions. Use them sparingly. Don't show more than one at a time.\n\n## Default\n\nFlash messages start off looking decently neutral—they're just light blue rounded rectangles.\n\n```html\n<div class=\"flash\">\n  Flash message goes here.\n</div>\n```\n\nYou can put multiple paragraphs of text in a flash message—the last paragraph's bottom `margin` will be automatically override.\n\n```html\n<div class=\"flash\">\n  <p>This is a longer flash message in it's own paragraph. It ends up looking something like this. If we keep adding more text, it'll eventually wrap to a new line.</p>\n  <p>And this is another paragraph.</p>\n</div>\n```\n\nShould the need arise, you can quickly space out your flash message from surrounding content with a `.flash-messages` wrapper. *Note the extra top and bottom margin in the example below.*\n\n```html\n<div class=\"flash-messages\">\n  <div class=\"flash\">\n    Flash message goes here.\n  </div>\n</div>\n```\n\n## Variations\n\nAdd `.flash-warn`, `.flash-error`, or `.flash-success` to the flash message to make it yellow, red, or green, respectively.\n\n```html\n<div class=\"flash flash-warn\">\n  Flash message goes here.\n</div>\n```\n\n```html\n<div class=\"flash flash-error\">\n  Flash message goes here.\n</div>\n```\n\n```html\n<div class=\"flash flash-success\">\n  Flash message goes here.\n</div>\n```\n\n## With icon\n\nAdd an icon to the left of the flash message to give it some funky fresh attention.\n\n```erb\n<div class=\"flash\">\n  <%= octicon \"alert\" %>\n  Flash message with an icon goes here.\n</div>\n```\n\n## With dismiss\n\nAdd a JavaScript enabled (via Crema) dismiss (close) icon on the right of any flash message.\n\n```erb\n<div class=\"flash\">\n  <button class=\"flash-close js-flash-close\" type=\"button\"><%= octicon \"x\", :\"aria-label\" => \"Close\" %></button>\n  Dismissable flash message goes here.\n</div>\n```\n\n## With action button\n\nA flash message with an action button.\n\n```html\n<div class=\"flash\">\n  <button type=\"submit\" class=\"btn btn-sm primary flash-action\">Complete action</button>\n  Flash message with action here.\n</div>\n```\n\n## Full width flash\n\nA flash message that is full width and removes border and border radius.\n\n```html\n<div class=\"flash flash-full\">\n  <div class=\"container\">\n    Full width flash message.\n  </div>\n</div>\n```\n\n"
  },
  "components/avatars": {
    "title": "Avatars",
    "path": "components/avatars",
    "content": "\n\nAvatars are images that users can set as their profile picture. On GitHub, they're always going to be rounded squares. They can be custom photos, uploaded by users, or generated as Identicons as a placeholder.\n\n{:toc}\n\n## Basic example\n\nAdd `.avatar` to any `<img>` element to make it an avatar. This resets some key styles for alignment, address a Firefox image placeholder bug, and rounds the corners.\n\nBe sure to set `width` and `height` attributes for maximum browser performance.\n\n```html\n<img class=\"avatar\" alt=\"jonrohan\" src=\"https://github.com/jonrohan.png?v=3&s=144\" width=\"72\" height=\"72\">\n```\n\n### Small avatars\n\nWe occasionally use smaller avatars. Anything less than `48px` wide should include the `.avatar-small` modifier class to reset the `border-radius` to a more appropriate level.\n\n```html\n<img class=\"avatar avatar-small\" alt=\"jonrohan\" src=\"https://github.com/jonrohan.png?v=3&s=64\" width=\"32\" height=\"32\">\n```\n\n### Parent-child avatars\n\nWhen you need a larger parent avatar, and a smaller child one, overlaid slightly, use the parent-child classes.\n\n```html\n<div class=\"avatar-parent-child float-left\">\n  <img class=\"avatar\" alt=\"jonrohan\" src=\"https://github.com/jonrohan.png?v=3&s=96\" width=\"48\" height=\"48\">\n  <img class=\"avatar avatar-child\" alt=\"josh\" src=\"https://github.com/josh.png?v=3&s=40\" width=\"20\" height=\"20\">\n</div>\n```\n\n### Avatar stack\n\nStacked avatars can be used to show multiple collaborators or participants when there is limited space available. When you hover over the stack, the avatars will reveal themselves.\n\n```html\n<div class=\"AvatarStack AvatarStack--three-plus\">\n  <div class=\"AvatarStack-body tooltipped tooltipped-se tooltipped-align-left-1\" aria-label=\"octocat, octocat, and octocat\">\n    <img class=\"avatar\" height=\"20\" alt=\"@octocat\" src=\"https://user-images.githubusercontent.com/334891/29999089-2837c968-9009-11e7-92c1-6a7540a594d5.png\" width=\"20\">\n    <img class=\"avatar\" height=\"20\" alt=\"@octocat\" src=\"https://user-images.githubusercontent.com/334891/29999089-2837c968-9009-11e7-92c1-6a7540a594d5.png\" width=\"20\">\n    <img class=\"avatar\" height=\"20\" alt=\"@octocat\" src=\"https://user-images.githubusercontent.com/334891/29999089-2837c968-9009-11e7-92c1-6a7540a594d5.png\" width=\"20\">\n  </div>\n</div>\n```\n\nBased on the number of avatars in the stack, add these modifier classes:\n- `AvatarStack--two` for 2 avatars.\n- `AvatarStack--three-plus` for 3 or more avatars.\n\nIf you have more than three avatars, add a div with the classes `avatar avatar-more` as the third avatar in the stack, as such:\n\n```html\n<div class=\"AvatarStack AvatarStack--three-plus\">\n  <div class=\"AvatarStack-body tooltipped tooltipped-se tooltipped-align-left-1\" aria-label=\"octocat, octocat, octocat, octocat, and octocat\">\n    <img class=\"avatar\" height=\"20\" alt=\"@octocat\" src=\"https://user-images.githubusercontent.com/334891/29999089-2837c968-9009-11e7-92c1-6a7540a594d5.png\" width=\"20\">\n    <img class=\"avatar\" height=\"20\" alt=\"@octocat\" src=\"https://user-images.githubusercontent.com/334891/29999089-2837c968-9009-11e7-92c1-6a7540a594d5.png\" width=\"20\">\n    <div class=\"avatar avatar-more\"></div>\n    <img class=\"avatar\" height=\"20\" alt=\"@octocat\" src=\"https://user-images.githubusercontent.com/334891/29999089-2837c968-9009-11e7-92c1-6a7540a594d5.png\" width=\"20\">\n    <img class=\"avatar\" height=\"20\" alt=\"@octocat\" src=\"https://user-images.githubusercontent.com/334891/29999089-2837c968-9009-11e7-92c1-6a7540a594d5.png\" width=\"20\">\n    <img class=\"avatar\" height=\"20\" alt=\"@octocat\" src=\"https://user-images.githubusercontent.com/334891/29999089-2837c968-9009-11e7-92c1-6a7540a594d5.png\" width=\"20\">\n  </div>\n</div>\n```\n\nYou can also link individual avatars. To do this shift the `avatar` class over to the anchor:\n\n```html\n<div class=\"AvatarStack AvatarStack--two\">\n  <div class=\"AvatarStack-body tooltipped tooltipped-se tooltipped-align-left-1\" aria-label=\"octocat and octocat\">\n    <a href=\"#\" class=\"avatar\">\n      <img height=\"20\" alt=\"@octocat\" src=\"https://user-images.githubusercontent.com/334891/29999089-2837c968-9009-11e7-92c1-6a7540a594d5.png\" width=\"20\">\n    </a>\n    <a href=\"#\" class=\"avatar\">\n      <img height=\"20\" alt=\"@octocat\" src=\"https://user-images.githubusercontent.com/334891/29999089-2837c968-9009-11e7-92c1-6a7540a594d5.png\" width=\"20\">\n    </a>\n  </div>\n</div>\n```\n\nUse `AvatarStack--right` to right-align the avatar stack. Remember to switch the alignment of tooltips when making this change.\n\n```html\n<div class=\"AvatarStack AvatarStack--three-plus AvatarStack--right\">\n  <div class=\"AvatarStack-body tooltipped tooltipped-sw tooltipped-align-right-1\" aria-label=\"octocat, octocat, and octocat\">\n    <img class=\"avatar\" height=\"20\" alt=\"@octocat\" src=\"https://user-images.githubusercontent.com/334891/29999089-2837c968-9009-11e7-92c1-6a7540a594d5.png\" width=\"20\">\n    <img class=\"avatar\" height=\"20\" alt=\"@octocat\" src=\"https://user-images.githubusercontent.com/334891/29999089-2837c968-9009-11e7-92c1-6a7540a594d5.png\" width=\"20\">\n    <img class=\"avatar\" height=\"20\" alt=\"@octocat\" src=\"https://user-images.githubusercontent.com/334891/29999089-2837c968-9009-11e7-92c1-6a7540a594d5.png\" width=\"20\">\n  </div>\n</div>\n```\n\n## Circle Badge\n\n`.CircleBadge` allows for the display of badge-like icons or logos. They are used mostly with Octicons or partner integration icons.\n\n`.CircleBadge` should have an `aria-label`, `title` (for a link), or an `alt` (for child `img` elements) attribute specified if there is no text-based alternative to describe it. If there is a text-based alternative or the icon has no semantic value, `aria-hidden=\"true\"` or an empty `alt` attribute may be used.\n\n### Small\n\n```erb\n<a class=\"CircleBadge CircleBadge--small float-left mr-2\" href=\"#small\" title=\"Travis CI\">\n  <img src=\"https://github.com/travis-ci.png\"  class=\"CircleBadge-icon\" alt=\"\">\n</a>\n<a class=\"CircleBadge CircleBadge--small bg-yellow\" title=\"Zap this!\" href=\"#small\">\n  <%= octicon \"zap\",  :class => \"CircleBadge-icon text-white\" %>\n</a>\n```\n\n### Medium\n\n```html\n<div class=\"CircleBadge CircleBadge--medium bg-gray-dark\">\n    <img src=\"https://github.com/travis-ci.png\"  alt=\"Travis CI\" class=\"CircleBadge-icon\">\n</div>\n```\n\n### Large\n\n```html\n<div class=\"CircleBadge CircleBadge--large\">\n  <img src=\"https://github.com/travis-ci.png\"  alt=\"Travis CI\" class=\"CircleBadge-icon\">\n</div>\n```\n\n### Dashed connection\n\nFor specific cases where two badges or more need to be shown as related or connected (such as integrations or specific product workflows), a `DashedConnection` class was created. Use utility classes to ensure badges are spaced correctly.\n\n```erb\n<div class=\"DashedConnection\">\n  <ul class=\"d-flex list-style-none flex-justify-between\" aria-label=\"A sample GitHub workflow\">\n    <li class=\"CircleBadge CircleBadge--small\" aria-label=\"GitHub\">\n      <%= octicon \"mark-github\", :class => \"width-full height-full\" %>\n    </li>\n\n    <li class=\"CircleBadge CircleBadge--small\" aria-label=\"Slack\">\n        <img src=\"https://github.com/slackhq.png\"  alt=\"\" class=\"CircleBadge-icon\">\n    </li>\n\n    <li class=\"CircleBadge CircleBadge--small\" aria-label=\"Travis CI\">\n        <img src=\"https://github.com/travis-ci.png\"  alt=\"\" class=\"CircleBadge-icon\">\n    </li>\n  </ul>\n</div>\n```\n\n"
  },
  "components/blankslate": {
    "title": "Blankslate",
    "path": "components/blankslate",
    "content": "\n\nBlankslates are for when there is a lack of content within a page or section. Use them as placeholders to tell users why something isn't there. Be sure to provide an action to add content as well.\n\n#### Basic example\n\nWrap some content in the outer `.blankslate` wrapper to give it the blankslate appearance.\n\n```html\n<div class=\"blankslate\">\n  <h3>This is a blank slate</h3>\n  <p>Use it to provide information when no dynamic content exists.</p>\n</div>\n```\n\n#### With Octicons\n\nWhen it helps the message, include (relevant) icons in your blank slate. Add `.blankslate-icon` to any `.mega-octicon`s as the first elements in the blankslate, like so.\n\n```erb\n<div class=\"blankslate\">\n  <%= octicon \"git-commit\", :height => 32, :class => \"blankslate-icon\" %>\n  <%= octicon \"tag\", :height => 32, :class => \"blankslate-icon\" %>\n  <%= octicon \"git-branch\", :height => 32, :class => \"blankslate-icon\" %>\n  <h3>This is a blank slate</h3>\n  <p>Use it to provide information when no dynamic content exists.</p>\n</div>\n```\n\n#### Variations\n\nAdd an additional optional class to the `.blankslate` to change its appearance.\n\n##### Narrow\n\nNarrows the blankslate container to not occupy the entire available width.\n\n```html\n<div class=\"blankslate blankslate-narrow\">\n  <h3>This is a blank slate</h3>\n  <p>Use it to provide information when no dynamic content exists.</p>\n</div>\n```\n\n##### Capped\n\nRemoves the `border-radius` on the top corners.\n\n```html\n<div class=\"blankslate blankslate-capped\">\n  <h3>This is a blank slate</h3>\n  <p>Use it to provide information when no dynamic content exists.</p>\n</div>\n```\n\n##### Spacious\n\nSignificantly increases the vertical padding.\n\n```html\n<div class=\"blankslate blankslate-spacious\">\n  <h3>This is a blank slate</h3>\n  <p>Use it to provide information when no dynamic content exists.</p>\n</div>\n```\n\n##### Large\n\nIncreases the size of the text in the blankslate\n\n```html\n<div class=\"blankslate blankslate-large\">\n  <h3>This is a blank slate</h3>\n  <p>Use it to provide information when no dynamic content exists.</p>\n</div>\n```\n\n##### No background\n\nRemoves the `background-color` and `border`.\n\n```html\n<div class=\"blankslate blankslate-clean-background\">\n  <h3>This is a blank slate</h3>\n  <p>Use it to provide information when no dynamic content exists.</p>\n</div>\n```\n"
  },
  "components/box-overlay": {
    "title": "Box overlay",
    "path": "components/box-overlay",
    "keywords": [
      "box",
      "overlay"
    ],
    "content": "\nimport DetailsDialog from '../../../docs/DetailsDialog'\n\n## Box overlays\nUse the `Box--overlay` with the `<details>` and [`<details-dialog>`](https://github.com/github/details-dialog), and add the `details-overlay-dark` utility if you wish to apply a dark transparent background.\n\nBox overlays come in three widths. The default `Box--overlay` is 440px wide, `Box-overlay--narrow` is 320px wide, and `Box-overlay--wide` is 640px wide.\n\n**Note:** `position: fixed` has been disabled in this example\n\n```erb\n<details class=\"details-reset details-overlay details-overlay-dark\">\n  <summary class=\"btn\" aria-haspopup=\"dialog\">Open dialog</summary>\n  <details-dialog class=\"Box Box--overlay d-flex flex-column anim-fade-in fast\">\n    <div class=\"Box-header\">\n      <button class=\"Box-btn-octicon btn-octicon float-right\" type=\"button\" aria-label=\"Close dialog\" data-close-dialog>\n        <%= octicon \"x\" %>\n      </button>\n      <h3 class=\"Box-title\">Box title</h3>\n    </div>\n    <div class=\"overflow-auto\">\n      <div class=\"Box-body overflow-auto\">\n        <p>\n          The quick brown fox jumps over the lazy dog and feels as if he were in the seventh heaven of typography together with Hermann Zapf, the most famous artist of the...\n        </p>\n      </div>\n      <ul>\n        <li class=\"Box-row\">\n          <img class=\"avatar v-align-middle mr-2\" src=\"https://avatars.githubusercontent.com/broccolini?s=48\" alt=\"broccolini\" width=\"24\" height=\"24\">\n          @broccolini\n        </li>\n        <li class=\"Box-row border-bottom\">\n          <img class=\"avatar v-align-middle mr-2\" src=\"https://avatars.githubusercontent.com/jonrohan?s=48\" alt=\"jonrohan\" width=\"24\" height=\"24\">\n          @jonrohan\n        </li>\n        <li class=\"Box-row border-bottom\">\n          <img class=\"avatar v-align-middle mr-2\" src=\"https://avatars.githubusercontent.com/shawnbot?s=48\" alt=\"shawnbot\" width=\"24\" height=\"24\">\n          @shawnbot\n        </li>\n      </ul>\n    </div>\n    <div class=\"Box-footer\">\n      <button type=\"button\" class=\"btn btn-block\" data-close-dialog>Okidoki</button>\n    </div>\n  </details-dialog>\n</details>\n```\n\nIn github.com there is a shared dialog partial. You will only have to pass in the modal content:\n\n```erb\n<%= render layout: \"shared/details_dialog\", locals: {\n  button_text: \"Delete account\",\n  title: \"Are you sure you want to delete this account?\",\n  button_class: \"btn btn-danger\"\n} do %>\n  <div class=\"Box-body overflow-auto\">\n    <p>\n      This action is irreversible.\n    </p>\n    <button type=\"button\" class=\"btn btn-block btn-danger mt-2\" data-close-dialog>\n      Delete\n    </button>\n  </div>\n<% end %>\n```\n\n[ARIA attributes]: https://www.w3.org/TR/html-aria/#allowed-aria-roles-states-and-properties\n"
  },
  "components/boxed-groups": {
    "title": "Boxed groups",
    "path": "components/boxed-groups",
    "content": "\nThe `boxed-group` styles have been deprecated. Please use the [Box component](/css/components/box) instead.\n"
  },
  "components/branch-name": {
    "title": "Branch name",
    "path": "components/branch-name",
    "content": "\n\nBranch names can be a link name or not:\n\n```html title=\"Branch name\"\n<span class=\"branch-name\">a_new_feature_branch</span>\n```\n\n```html title=\"Branch name with link\"\n<a href=\"#url\" class=\"branch-name\">a_new_feature_branch</a>\n```\n\nYou may also include an octicon before the branch name text:\n\n```erb title=\"Branch name with icon\"\n<span class=\"branch-name\">\n  <%= octicon(\"git-branch\", width:16, height:16) %>\n  a_new_feature_branch\n</span>\n```\n\n"
  },
  "components/buttons": {
    "title": "Buttons",
    "path": "components/buttons",
    "content": "\n\nButtons are used for **actions**, like in forms, while textual hyperlinks are used for **destinations**, or moving from one page to another.\n\n{:toc}\n\n## Default button\n\nUse the standard—yet classy—`.btn` for form actions and primary page actions. These are used extensively around the site.\n\nWhen using a `<button>` element, **always specify a `type`**. When using a `<a>` element, **always add `role=\"button\"` for accessibility**.\n\n```html\n<button class=\"btn\" type=\"button\">Button button</button>\n<a class=\"btn\" href=\"#url\" role=\"button\">Link button</a>\n```\n\nYou can find them in two sizes: the default `.btn` and the smaller `.btn-sm`.\n\n```html\n<button class=\"btn\" type=\"button\">Button</button>\n<button class=\"btn btn-sm\" type=\"button\">Small button</button>\n```\n\n## Primary button\n\nPrimary buttons are green and are used to indicate the *primary* action on a page. When you need your buttons to stand out, use `.btn.btn-primary`. You can use it with both button sizes—just add `.btn-primary`.\n\n```html\n<button class=\"btn btn-primary\" type=\"button\">Primary button</button>\n<button class=\"btn btn-sm btn-primary\" type=\"button\">Small primary button</button>\n```\n\n## Danger button\n\nDanger buttons are red. They help reiterate that the intended action is important or potentially dangerous (e.g., deleting a repo or transferring ownership). Similar to the primary buttons, just add `.btn-danger`.\n\n```html\n<button class=\"btn btn-danger\" type=\"button\">Danger button</button>\n<button class=\"btn btn-sm btn-danger\" type=\"button\">Small danger button</button>\n```\n\n## Outline button\n\nOutline buttons downplay an action as they appear like boxy links. Just add `.btn-outline` and go.\n\n```html\n<button class=\"btn btn-outline\" type=\"button\">Outline button</button>\n<button class=\"btn btn-sm btn-outline\" type=\"button\">Outline button</button>\n```\n\n## Large button\nUse `.btn-large` to increase the padding and border radius of a button. This is useful for prominent calls to action in hero sections.\n\n[Type scale utilities](https://styleguide.github.com/primer/utilities/typography/#type-scale-utilities) can be used to alter the font-size if needed. Padding is applied in em's so that it scales proportionally with the font-size.\n\n```html\n<p>\n  <a class=\"btn btn-large btn-purple\" href=\"#url\" role=\"button\">Large link button</a>\n  <button class=\"btn btn-large\" type=\"button\">Large button button</button>\n</p>\n\n```\n\nUse `.btn-large` with a type scale utility to transform the text to a bigger size.\n\n```html\n<p class=\"f3\">\n  <a class=\"btn btn-large btn-purple\" href=\"#url\" role=\"button\">Large link button</a>\n  <button class=\"btn btn-large btn-outline-blue\" type=\"button\">Large button button</button>\n</p>\n```\n\n## Disabled state\n\nDisable `<button>` elements with the boolean `disabled` attribute and `<a>` elements with the `.disabled` class.\n\n```html\n<button class=\"btn\" type=\"button\" disabled>Disabled button</button>\n<a class=\"btn disabled\" href=\"#url\" role=\"button\">Disabled button</a>\n```\n\nSimilar styles are applied to primary, danger, and outline buttons:\n\n```html\n<button class=\"btn btn-primary\" type=\"button\" disabled>Disabled button</button>\n<a class=\"btn btn-primary disabled\" href=\"#url\" role=\"button\">Disabled button</a>\n```\n\n```html\n<button class=\"btn btn-danger\" type=\"button\" disabled>Disabled button</button>\n<a class=\"btn btn-danger disabled\" href=\"#url\" role=\"button\">Disabled button</a>\n```\n\n```html\n<button class=\"btn btn-outline\" type=\"button\" disabled>Disabled button</button>\n<a class=\"btn btn-outline disabled\" href=\"#url\" role=\"button\">Disabled button</a>\n```\n\n## Block button\n\nMake any button full-width by adding `.btn-block`. It adds `width: 100%;`, changes the `display` from `inline-block` to `block`, and centers the button text.\n\n```html\n<p><button class=\"btn btn-block\" type=\"button\">Block button</button></p>\n<p><button class=\"btn btn-sm btn-block\" type=\"button\">Small block button</button></p>\n```\n\n## Link button\n\nCreate a button that looks like a link with `.btn-link`. Rather than using an `<a>` to trigger JS, this style on a `<button>` should be used for better accessibility.\n\n**The `.btn-link` class is not designed to be used with `.btn`; the overlapping styles are not compatible.**\n\n```html\n<p><button class=\"btn-link\" type=\"button\">Link button</button></p>\n```\n\n## Button with counts\n\nYou can easily append a count to a **small button**. Add the `.with-count` class to the `.btn-sm` and then add the `.social-count` after the button.\n\n**Be sure to clear the float added by the additional class.**\n\n```erb\n<div class=\"clearfix\">\n  <a class=\"btn btn-sm btn-with-count\" href=\"#url\" role=\"button\">\n    <%= octicon \"eye\" %>\n    Watch\n  </a>\n  <a class=\"social-count\" href=\"#url\">6</a>\n</div>\n```\n\nYou can also use the [counter](./labels#counters) component within buttons:\n\n```html\n<button class=\"btn\" type=\"button\">\n  Button\n  <span class=\"Counter\">12</span>\n</button>\n\n<button class=\"btn btn-primary\" type=\"button\">\n  Button\n  <span class=\"Counter\">12</span>\n</button>\n\n<button class=\"btn btn-danger\" type=\"button\">\n  Button\n  <span class=\"Counter\">12</span>\n</button>\n\n<button class=\"btn btn-outline\" type=\"button\">\n  Button\n  <span class=\"Counter\">12</span>\n</button>\n```\n\n## Button groups\n\nHave a hankering for a series of buttons that are attached to one another? Wrap them in a `.BtnGroup` and the buttons will be rounded and spaced automatically.\n\n```html\n<div class=\"BtnGroup mr-2\">\n  <button class=\"btn BtnGroup-item\" type=\"button\">Button</button>\n  <button class=\"btn BtnGroup-item\" type=\"button\">Button</button>\n  <button class=\"btn BtnGroup-item\" type=\"button\">Button</button>\n</div>\n\n<div class=\"BtnGroup mr-2\">\n  <button class=\"btn BtnGroup-item btn-outline\" type=\"button\">Button</button>\n  <button class=\"btn BtnGroup-item btn-outline\" type=\"button\">Button</button>\n  <button class=\"btn BtnGroup-item btn-outline\" type=\"button\">Button</button>\n</div>\n\n<div class=\"BtnGroup\">\n  <button class=\"btn BtnGroup-item btn-sm\" type=\"button\">Button</button>\n  <button class=\"btn BtnGroup-item btn-sm\" type=\"button\">Button</button>\n  <button class=\"btn BtnGroup-item btn-sm\" type=\"button\">Button</button>\n</div>\n```\n\nAdd `.BtnGroup-parent` to parent elements, like `<form>`s or `<details>`s, within `.BtnGroup`s for proper spacing and rounded corners.\n\n```html\n<div class=\"BtnGroup\">\n  <button class=\"btn BtnGroup-item\" type=\"button\">Button</button>\n  <form class=\"BtnGroup-parent\">\n    <button class=\"btn BtnGroup-item\" type=\"button\">Button in a form</button>\n  </form>\n  <button class=\"btn BtnGroup-item\" type=\"button\">Button</button>\n  <button class=\"btn BtnGroup-item\" type=\"button\">Button</button>\n</div>\n```\n\n## Hidden text button\n\nUse `.hidden-text-expander` to indicate and toggle hidden text.\n\n```html\n<span class=\"hidden-text-expander\">\n  <button type=\"button\" class=\"ellipsis-expander\" aria-expanded=\"false\">&hellip;</button>\n</span>\n```\n\nYou can also make the expander appear inline by adding `.inline`.\n\n\n## Using button styles with the details summary element\n\nYou can add `.btn` and `.btn-*` classes to any\n[`<summary>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/summary)\nelement so that it gains the appearance of a button, and\nselected/active styles when the parent\n[`<details>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/details)\nelement is open.\n\n```html\n<details>\n  <summary class=\"btn btn-block btn-primary\">Toggle the content</summary>\n  <p class=\"mt-2\">\n    This content will be toggled.\n  </p>\n</details>\n```\n\n"
  },
  "components/breadcrumb": {
    "title": "Breadcrumbs",
    "path": "components/breadcrumb",
    "content": "\n\nBreadcrumbs are used to show taxonomical context on pages that are many levels deep in a site’s hierarchy. Breadcrumbs show and link to parent, grandparent, and sometimes great-grandparent pages. Breadcrumbs are most appropriate on pages that:\n\n- Are many levels deep on a site\n- Do not have a section-level navigation\n- May need the ability to quickly go back to the previous (parent) page\n\n#### Usage\n\n```html title=\"Breadcrumb\"\n<nav aria-label=\"Breadcrumb\">\n  <ol>\n    <li class=\"breadcrumb-item text-small\"><a href=\"https://github.com/business\">Business</a></li>\n    <li class=\"breadcrumb-item text-small\"><a href=\"https://github.com/business/customers\">Customers</a></li>\n    <li class=\"breadcrumb-item breadcrumb-item-selected text-small text-gray\" aria-current=\"page\">MailChimp</li>\n  </ol>\n</nav>\n```\n\n"
  },
  "components/dropdown": {
    "title": "Dropdown",
    "path": "components/dropdown",
    "content": "\nDropdowns are lightweight, JavaScript-powered context menus for housing navigation and actions. They're great for instances where you don't need the full power (and code) of the select menu.\n\n{:toc}\n\n## Basic examples\n\nDropdowns should be trigged by a `<button>`. **[Each dropdown menu requires a directional class](#alignment)**, much like our tooltips.\n\nUsing a GitHub button:\n\n```html\n<details class=\"dropdown details-reset details-overlay d-inline-block\">\n  <summary class=\"btn\" aria-haspopup=\"true\">\n    Dropdown\n    <div class=\"dropdown-caret\"></div>\n  </summary>\n\n  <ul class=\"dropdown-menu dropdown-menu-se\">\n    <li><a class=\"dropdown-item\" href=\"#url\">Dropdown item</a></li>\n    <li><a class=\"dropdown-item\" href=\"#url\">Dropdown item</a></li>\n    <li><a class=\"dropdown-item\" href=\"#url\">Dropdown item</a></li>\n  </ul>\n</details>\n```\n\nUsing a button customized with additional utilities:\n\n\n```html\n<details class=\"dropdown details-reset details-overlay d-inline-block\">\n  <summary class=\"text-gray p-2 d-inline\" aria-haspopup=\"true\">\n    Dropdown\n    <div class=\"dropdown-caret\"></div>\n  </summary>\n\n  <ul class=\"dropdown-menu dropdown-menu-se\">\n    <li><a class=\"dropdown-item\" href=\"#url\">Dropdown item</a></li>\n    <li><a class=\"dropdown-item\" href=\"#url\">Dropdown item</a></li>\n    <li><a class=\"dropdown-item\" href=\"#url\">Dropdown item</a></li>\n  </ul>\n</details>\n```\n\n## Options\n\n### Alignment\n\nAlign the direction of dropdown menus and their arrows with modifier classes.\n\n```html\n<details class=\"dropdown details-reset details-overlay d-inline-block\">\n  <summary class=\"btn\" aria-haspopup=\"true\">\n    .dropdown-ne\n    <div class=\"dropdown-caret\"></div>\n  </summary>\n\n  <ul class=\"dropdown-menu dropdown-menu-ne\">\n    <li><a class=\"dropdown-item\" href=\"#url\">Dropdown item</a></li>\n    <li><a class=\"dropdown-item\" href=\"#url\">Dropdown item</a></li>\n    <li><a class=\"dropdown-item\" href=\"#url\">Dropdown item</a></li>\n  </ul>\n</details>\n```\n\n```html\n<details class=\"dropdown details-reset details-overlay d-inline-block\">\n  <summary class=\"btn\" aria-haspopup=\"true\">\n    .dropdown-e\n    <div class=\"dropdown-caret\"></div>\n  </summary>\n\n  <ul class=\"dropdown-menu dropdown-menu-e\">\n    <li><a class=\"dropdown-item\" href=\"#url\">Dropdown item</a></li>\n    <li><a class=\"dropdown-item\" href=\"#url\">Dropdown item</a></li>\n    <li><a class=\"dropdown-item\" href=\"#url\">Dropdown item</a></li>\n  </ul>\n</details>\n```\n\n```html\n<details class=\"dropdown details-reset details-overlay d-inline-block\">\n  <summary class=\"btn\" aria-haspopup=\"true\">\n    .dropdown-se\n    <div class=\"dropdown-caret\"></div>\n  </summary>\n\n  <ul class=\"dropdown-menu dropdown-menu-se\">\n    <li><a class=\"dropdown-item\" href=\"#url\">Dropdown item</a></li>\n    <li><a class=\"dropdown-item\" href=\"#url\">Dropdown item</a></li>\n    <li><a class=\"dropdown-item\" href=\"#url\">Dropdown item</a></li>\n  </ul>\n</details>\n```\n\n```html\n<details class=\"dropdown details-reset details-overlay d-inline-block\">\n  <summary class=\"btn\" aria-haspopup=\"true\">\n    .dropdown-s\n    <div class=\"dropdown-caret\"></div>\n  </summary>\n\n  <ul class=\"dropdown-menu dropdown-menu-s\">\n    <li><a class=\"dropdown-item\" href=\"#url\">Dropdown item</a></li>\n    <li><a class=\"dropdown-item\" href=\"#url\">Dropdown item</a></li>\n    <li><a class=\"dropdown-item\" href=\"#url\">Dropdown item</a></li>\n  </ul>\n</details>\n```\n\n```html\n<details class=\"dropdown details-reset details-overlay d-inline-block\">\n  <summary class=\"btn\" aria-haspopup=\"true\">\n    .dropdown-sw\n    <div class=\"dropdown-caret\"></div>\n  </summary>\n\n  <ul class=\"dropdown-menu dropdown-menu-sw\">\n    <li><a class=\"dropdown-item\" href=\"#url\">Dropdown item</a></li>\n    <li><a class=\"dropdown-item\" href=\"#url\">Dropdown item</a></li>\n    <li><a class=\"dropdown-item\" href=\"#url\">Dropdown item</a></li>\n  </ul>\n</details>\n```\n\n```html\n<details class=\"dropdown details-reset details-overlay d-inline-block\">\n  <summary class=\"btn\" aria-haspopup=\"true\">\n    .dropdown-w\n    <div class=\"dropdown-caret\"></div>\n  </summary>\n\n  <ul class=\"dropdown-menu dropdown-menu-w\">\n    <li><a class=\"dropdown-item\" href=\"#url\">Dropdown item</a></li>\n    <li><a class=\"dropdown-item\" href=\"#url\">Dropdown item</a></li>\n    <li><a class=\"dropdown-item\" href=\"#url\">Dropdown item</a></li>\n  </ul>\n</details>\n```\n\n### Dividers\n\n```html\n<details class=\"dropdown details-reset details-overlay d-inline-block\">\n  <summary class=\"btn\" aria-haspopup=\"true\">\n    Dropdown\n    <div class=\"dropdown-caret\"></div>\n  </summary>\n\n  <ul class=\"dropdown-menu dropdown-menu-se\">\n    <li><a class=\"dropdown-item\" href=\"#url\">Dropdown item</a></li>\n    <li><a class=\"dropdown-item\" href=\"#url\">Dropdown item</a></li>\n    <li><a class=\"dropdown-item\" href=\"#url\">Dropdown item</a></li>\n    <li class=\"dropdown-divider\" role=\"separator\"></li>\n    <li><a class=\"dropdown-item\" href=\"#url\">Another item</a></li>\n    <li><a class=\"dropdown-item\" href=\"#url\">One more</a></li>\n  </ul>\n</details>\n```\n\n### Headers\n\n```html\n<details class=\"dropdown details-reset details-overlay d-inline-block\">\n  <summary class=\"btn\" aria-haspopup=\"true\">\n    Dropdown\n    <div class=\"dropdown-caret\"></div>\n  </summary>\n\n  <div class=\"dropdown-menu dropdown-menu-se\">\n    <div class=\"dropdown-header\">\n      Dropdown header\n    </div>\n    <ul>\n      <li><a class=\"dropdown-item\" href=\"#url\">Dropdown item</a></li>\n      <li><a class=\"dropdown-item\" href=\"#url\">Dropdown item</a></li>\n      <li><a class=\"dropdown-item\" href=\"#url\">Dropdown item</a></li>\n    </ul>\n  </div>\n</details>\n```\n"
  },
  "components/flash-banner": {
    "title": "Flash banner",
    "path": "components/flash-banner",
    "content": "\n**Needs documentation.**\n\nA banner rendered at the top of the page and a warning banner shown when you log in/out in another tab.\n"
  },
  "components/index": {
    "title": "Components",
    "path": "components/index",
    "content": "\nComponents make it easier to mark up a set of elements that are commonly grouped together with similar visual styles. Their base styles are shared and variants are added with modifier classes, so usually components are comprised of multiple classes. Most importantly, components should be highly reusable across the site, rather than built for specific pages or features. To achieve this:\n\n* **Separate structure and skin:** This means to define repeating visual features (like background and border styles) as separate “skins” that you can mix-and-match with your various components to achieve a large amount of visual variety without much code.\n* **Separate container and content:** Essentially, this means “rarely use location-dependent styles”. A component should look the same no matter where you put it.\n"
  },
  "components/labels": {
    "title": "Labels",
    "path": "components/labels",
    "content": "\n\nLabels add metatdata or indicate status of items and navigational elements. Three different types of labels are available: [Labels](#default-label-styles) for adding metadata, [States](#states) for indicating status, and [Counters](#counters) for showing the count for a number of items.\n\n\n{:toc}\n\n## Labels\n\nThe base label component styles the text, adds padding and rounded corners, and an inset box shadow. Labels come in various themes which apply colors and different border styles.\n\nGitHub also programmatically generates and applies a background color for labels on items such as issues and pull requests. Users are able to select any background color and the text color will adjust to work with light and dark background colors.\n\nThe base `Label` style does not apply a background color, here's an example using the `bg-blue` utility to apply a blue background:\n\n```html title=\"Label\"\n<span title=\"Label: default label\" class=\"Label bg-blue\">default label</span>\n```\n\n**Note:** Be sure to include a title attribute on labels, it's helpful for people using screen-readers to differentiate a label from other text. I.e. without the title attribute, the following example would read as _\"New select component design\"_, rather than identifying `design` as a label.\n\n```html title=\"Label without title\"\n<!-- Don't do this -->\n<a href=\"#url\">New select component</a><span class=\"Label bg-blue ml-1\">design</span>\n```\n\n### Label themes\n\nLabels come in a few different themes. Use a theme that helps communicate the content of the label, and ensure it's used consistently.\n\nUse `Label--gray` to create a label with a light gray background and gray text. This label is neutral in color and can be used in contexts where all you need to communicate is metadata, or whe you want a label to feel less prominent compared with labels with stronger colors.\n\n```html title=\"Label theme gray\"\n<span title=\"Label: gray label\" class=\"Label Label--gray\">gray label</span>\n```\n\nUse `Label--gray-darker` to create a label with a dark-gray background color. This label is also neutral in color, however, since it's background is darker it can stand out more compared to `Label--gray`.\n\n```html title=\"Label theme dark gray\"\n<span title=\"Label: dark gray label\" class=\"Label Label--gray-darker\">dark gray label</span>\n```\n\nUse `Label--orange` to communicate \"warning\". The orange background color is very close to red, so avoid using next to labels with a red background color since most people will find it hard to tell the difference.\n\n```html title=\"Label theme orange\"\n<span title=\"Label: orange label\" class=\"Label Label--orange\">orange label</span>\n```\n\nUse `Label--outline` to create a label with gray text, a gray border, and a transparent background. The outline reduces the contrast of this label in combination with filled labels. Use this in contexts where you need it to stand out less than other labels and communicate a neutral message.\n\n```html title=\"Label outline\"\n<span title=\"Label: outline label\" class=\"Label Label--outline\">outlined label</span>\n```\n\nUse `Label--outline-green` in combination with `Label--outline` to communicate a positive message.\n\n```html title=\"Label outline green\"\n<span title=\"Label: green outline label\" class=\"Label Label--outline Label--outline-green\">green outlined label</span>\n```\n\n\n## States\n\nUse state labels to inform users of an items status. States are large labels with bolded text. The default state has a gray background.\n\n```html title=\"State\"\n<span class=\"State\">Default</span>\n```\n\n### State themes\nStates come in a few variations that apply different colors. Use the state that best communicates the status or function.\n\n```erb title=\"State themes\"\n<span title=\"Status: open\" class=\"State State--green\"><%= octicon \"git-pull-request\" %> Open</span>\n<span title=\"Status: closed\" class=\"State State--red\"><%= octicon \"git-pull-request\" %> Closed</span>\n<span title=\"Status: merged\" class=\"State State--purple\"><%= octicon \"git-merge\" %> Merged</span>\n```\n\n**Note:** Similar to [labels](#labels), you should include the title attribute on states to differentiate them from other content.\n\n### Small states\nUse `State--small` for a state label with reduced padding a smaller font size. This is useful in denser areas of content.\n\n```erb title=\"Small states\"\n<span title=\"Status: open\" class=\"State State--green State--small\"><%= octicon \"issue-opened\" %> Open</span>\n<span title=\"Status: closed\" class=\"State State--red State--small\"><%= octicon \"issue-closed\" %> Closed</span>\n```\n\n## Counters\n\nUse the `Counter` component to add a count to navigational elements and buttons. Counters come in 3 variations: the default `Counter` with a light gray background, `Counter--gray` with a dark-gray background and inverse white text, and `Counter--gray-light` with a light-gray background and dark gray text. When a counter is empty, it's visibility will be hidden.\n\n```html title=\"Counter\"\n<span class=\"Counter\">16</span>\n<span class=\"Counter Counter--gray\">32</span>\n<span class=\"Counter Counter--gray-light\">64</span>\n```\n\nUse the `Counter` in navigation to indicate the number of items without the user having to click through or count the items, such as open issues in a GitHub repo. See more options in [navigation](./navigation).\n\n```html title=\"Counter in tabs\"\n<div class=\"tabnav\">\n  <nav class=\"tabnav-tabs\" aria-label=\"Foo bar\">\n    <a href=\"#url\" class=\"tabnav-tab selected\" aria-current=\"page\">Foo tab <span class=\"Counter\">23</a>\n    <a href=\"#url\" class=\"tabnav-tab\">Bar tab</a>\n  </nav>\n</div>\n```\n\nCounters can also be used in `Box` headers to indicate the number of items in a list. See more on the [box component](./box).\n\n```html title=\"Counter in Box headers\"\n<div class=\"Box\">\n  <div class=\"Box-header\">\n    <h3 class=\"Box-title\">\n      Box title\n      <span class=\"Counter Counter--gray\">3</span>\n    </h3>\n  </div>\n  <ul>\n    <li class=\"Box-row\">\n      Box row one\n    </li>\n    <li class=\"Box-row\">\n      Box row two\n    </li>\n    <li class=\"Box-row\">\n      Box row three\n    </li>\n  </ul>\n</div>\n```\n\n\n"
  },
  "components/marketing-buttons": {
    "title": "Marketing Buttons",
    "path": "components/marketing-buttons",
    "content": "\n\nMarketing buttons come in different colors and sizes, and are also available in a blue outlined version.\n\n## Colors and outlined\n\nMarketing buttons can be solid blue, outlined blue, solid green, or transparent.\n\nThe solid blue and solid green buttons have more visual emphasis than the blue outlined button, therefore they should be used sparingly and only for call to actions that need emphasis.\n\n```html\n<button class=\"btn-mktg mr-2\" type=\"button\">Learn more</button>\n<button class=\"btn-mktg btn-outline-mktg mr-2\" type=\"button\">Learn more</button>\n<button class=\"btn-mktg btn-primary-mktg mr-2\" type=\"button\">Sign up</button>\n<div class=\"bg-gray-dark\">\n  <button class=\"btn-mktg btn-transparent m-2\" type=\"button\">Learn more</button>\n</div>\n```\n\n## Sizes\n\nAvailable in two sizes, marketing buttons have a default size and a large size.\n\n```html\n<button class=\"btn-mktg mr-2\" type=\"button\">Learn more</button>\n<button class=\"btn-mktg btn-outline-mktg mr-2\" type=\"button\">Learn more</button>\n<button class=\"btn-mktg btn-primary-mktg mr-2\" type=\"button\">Sign up</button>\n<button class=\"btn-mktg btn-large-mktg mr-2\" type=\"button\">Learn more</button>\n<button class=\"btn-mktg btn-outline-mktg btn-large-mktg mr-2\" type=\"button\">Learn more</button>\n<button class=\"btn-mktg btn-primary-mktg btn-large-mktg mr-2\" type=\"button\">Sign up</button>\n```\n\n"
  },
  "components/markdown": {
    "title": "Markdown",
    "path": "components/markdown",
    "content": "\n\nText can be **bold**, _italic_, or ~~strikethrough~~. [Links](https://github.com) should be blue with no underlines (unless hovered over).\n\nThere should be whitespace between paragraphs. There should be whitespace between paragraphs. There should be whitespace between paragraphs. There should be whitespace between paragraphs.\n\nThere should be whitespace between paragraphs. There should be whitespace between paragraphs. There should be whitespace between paragraphs. There should be whitespace between paragraphs.\n\n> There should be no margin above this first sentence.\n>\n> Blockquotes should be a lighter gray with a gray border along the left side.\n>\n> There should be no margin below this final sentence.\n\n# Header 1\n\nThis is a normal paragraph following a header. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\n\n## Header 2\n\n> This is a blockquote following a header. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\n\n### Header 3\n\n```\nThis is a code block following a header.\n```\n\n#### Header 4\n\n* This is an unordered list following a header.\n* This is an unordered list following a header.\n* This is an unordered list following a header.\n\n##### Header 5\n\n1. This is an ordered list following a header.\n2. This is an ordered list following a header.\n3. This is an ordered list following a header.\n\n###### Header 6\n\n| What      | Follows         |\n|-----------|-----------------|\n| A table   | A header        |\n| A table   | A header        |\n| A table   | A header        |\n\n----------------\n\nThere's a horizontal rule above and below this.\n\n----------------\n\nHere is an unordered list:\n\n* Salt-n-Pepa\n* Bel Biv DeVoe\n* Kid 'N Play\n\nAnd an ordered list:\n\n1. Michael Jackson\n2. Michael Bolton\n3. Michael Bublé\n\nAnd an unordered task list:\n\n- [x] Create a sample markdown document\n- [x] Add task lists to it\n- [ ] Take a vacation\n\nAnd a \"mixed\" task list:\n\n- [ ] Steal underpants\n- ?\n- [ ] Profit!\n\nAnd a nested list:\n\n* Jackson 5\n  * Michael\n  * Tito\n  * Jackie\n  * Marlon\n  * Jermaine\n* TMNT\n  * Leonardo\n  * Michelangelo\n  * Donatello\n  * Raphael\n\nDefinition lists can be used with HTML syntax. Definition terms are bold and italic.\n\n<dl>\n    <dt>Name</dt>\n    <dd>Godzilla</dd>\n    <dt>Born</dt>\n    <dd>1952</dd>\n    <dt>Birthplace</dt>\n    <dd>Japan</dd>\n    <dt>Color</dt>\n    <dd>Green</dd>\n</dl>\n\n----------------\n\nTables should have bold headings and alternating shaded rows.\n\n| Artist            | Album           | Year |\n|-------------------|-----------------|------|\n| Michael Jackson   | Thriller        | 1982 |\n| Prince            | Purple Rain     | 1984 |\n| Beastie Boys      | License to Ill  | 1986 |\n\nIf a table is too wide, it should condense down and/or scroll horizontally.\n\n| Artist            | Album           | Year | Label       | Awards   | Songs     |\n|-------------------|-----------------|------|-------------|----------|-----------|\n| Michael Jackson   | Thriller        | 1982 | Epic Records | Grammy Award for Album of the Year, American Music Award for Favorite Pop/Rock Album, American Music Award for Favorite Soul/R&B Album, Brit Award for Best Selling Album, Grammy Award for Best Engineered Album, Non-Classical | Wanna Be Startin' Somethin', Baby Be Mine, The Girl Is Mine, Thriller, Beat It, Billie Jean, Human Nature, P.Y.T. (Pretty Young Thing), The Lady in My Life |\n| Prince            | Purple Rain     | 1984 | Warner Brothers Records | Grammy Award for Best Score Soundtrack for Visual Media, American Music Award for Favorite Pop/Rock Album, American Music Award for Favorite Soul/R&B Album, Brit Award for Best Soundtrack/Cast Recording, Grammy Award for Best Rock Performance by a Duo or Group with Vocal | Let's Go Crazy, Take Me With U, The Beautiful Ones, Computer Blue, Darling Nikki, When Doves Cry, I Would Die 4 U, Baby I'm a Star, Purple Rain |\n| Beastie Boys      | License to Ill  | 1986 | Mercury Records | noawardsbutthistablecelliswide | Rhymin & Stealin, The New Style, She's Crafty, Posse in Effect, Slow Ride, Girls, (You Gotta) Fight for Your Right, No Sleep Till Brooklyn, Paul Revere, Hold It Now, Hit It, Brass Monkey, Slow and Low, Time to Get Ill |\n\n----------------\n\nCode snippets like `var foo = \"bar\";` can be shown inline.\n\nAlso, `this should vertically align` ~~`with this`~~ ~~and this~~.\n\nCode can also be shown in a block element.\n```\nvar foo = \"bar\";\n```\n\nCode can also use syntax highlighting.\n```javascript\nvar foo = \"bar\";\n```\n\n```\nLong, single-line code blocks should not wrap. They should horizontally scroll if they are too long. This line should be long enough to demonstrate this.\n```\n\n```javascript\nvar foo = \"The same thing is true for code with syntax highlighting. A single line of code should horizontally scroll if it is really long.\";\n```\n\nInline code inside table cells should still be distinguishable.\n\n| Language    | Code               |\n|-------------|--------------------|\n| Javascript  | `var foo = \"bar\";` |\n| Ruby        | `foo = \"bar\"`      |\n\n----------------\n\nSmall images should be shown at their actual size.\n\n![](http://placekitten.com/g/300/200/)\n\nLarge images should always scale down and fit in the content container.\n\n![](http://placekitten.com/g/1200/800/)\n\n```\nThis is the final element on the page and there should be no margin below this.\n```\n"
  },
  "components/pagehead": {
    "title": "Pagehead",
    "path": "components/pagehead",
    "content": "\nGive a page a clear, separated title and optional top nav by adding a `.pagehead`.\n\n{:toc}\n\n## Basic pagehead\n\nIn its simplest form, you can build a pagehead with a `pagehead` element with an `h1` child.\n\n```html\n<div class=\"pagehead\">\n  <h1>Title</h1>\n</div>\n```\n\n### Avatars\n\nPlace an avatar inside the `h1` to have margins applied to it. Don't forget the `avatar` class!\n\nAlso be sure to add `aria-hidden=\"true\"` to hide the avatar from screenreaders.\n\n```erb\n<div class=\"pagehead\">\n  <h1>\n    <%= avatar_for(\"jonrohan\", 32, \"aria-hidden\": \"true\") %>\n    jonrohan\n  </h1>\n</div>\n```\n\n### Path divider\n\nFor path or breadcrumb patterns, wrap the `/` with `path-divider` to add some nice horizontal spacing.\n\n```html\n<div class=\"pagehead\">\n  <h1>\n    <span class=\"author\"><a href=\"#url\" class=\"url fn\" rel=\"author\">jonrohan</a></span>\n    <span class=\"path-divider\">/</span>\n    <strong><a href=\"#url\">primer</a></strong>\n  </h1>\n</div>\n```\n\n## Pagehead actions\n\nTo add actions on the right side of the `pagehead`, use the `pagehead-actions` element. Place `pagehead-actions` before the `h1` to ensure proper placement.\n\n```html\n<div class=\"pagehead\">\n  <ul class=\"pagehead-actions\">\n    <li><button class=\"btn btn-sm\" href=\"#url\">Action</button></li>\n    <li><button class=\"btn btn-sm btn-primary\" href=\"#url\">Action</button></li>\n  </ul>\n  <h1>Title</h1>\n</div>\n```\n\n## Org nav\n\n```html\n<div class=\"pagehead orghead px-3\">\n  <nav class=\"orgnav clearfix\" role=\"navigation\">\n    <a class=\"pagehead-tabs-item selected\" href=\"#url\">\n      <%= octicon(\"repo\") %>\n      Repositories\n    </a>\n    <a class=\"pagehead-tabs-item\" href=\"#url\">\n      <%= octicon(\"jersey\") %>\n      Teams\n      <span class=\"Counter\">1</span>\n    </a>\n    <a class=\"pagehead-tabs-item\" href=\"#url\">\n      <%= octicon(\"project\") %>\n      Projects\n      <span class=\"Counter\">2</span>\n    </a>\n    <a class=\"pagehead-tabs-item\" href=\"#url\">\n      <%= octicon(\"briefcase\") %>\n      Jobs\n      <span class=\"Counter\">3</span>\n    </a>\n  </nav>\n</div>\n```\n\n## Repohead\n\nUse `pagehead` to construct a header and navigation for a repository.\n\n### Base\n\n```html\n<div class=\"pagehead repohead experiment-repo-nav\">\n  <div class=\"container-lg repohead-details-container px-3 clearfix\">\n    <ul class=\"pagehead-actions\">\n      <li>\n        <div class=\"clearfix\">\n          <button class=\"btn btn-sm btn-with-count\" href=\"#url\" role=\"button\">\n            <%= octicon(\"eye\")%>\n            Watch\n          </button>\n          <button class=\"social-count\" href=\"#url\">6</button>\n        </div>\n      </li>\n      <li>\n        <div class=\"clearfix\">\n          <button class=\"btn btn-sm btn-with-count\" href=\"#url\" role=\"button\">\n            <%= octicon(\"repo-forked\") %>\n            Fork\n          </button>\n          <button class=\"social-count\" href=\"#url\">0</button>\n        </div>\n      </li>\n    </ul>\n    <h1>\n      <%= octicon(\"repo\") %>\n      <span class=\"author\"><a href=\"#url\" class=\"url fn\" rel=\"author\">cmwinters</a></span>\n      <span class=\"path-divider\">/</span>\n      <strong><a href=\"#url\">project</a></strong>\n    </h1>\n  </div>\n  <div class=\"container-lg px-3\">\n    <nav class=\"reponav clearfix\" role=\"navigation\">\n      <a class=\"reponav-item selected\" href=\"#url\">\n        <%= octicon(\"code\") %>\n        Code\n      </a>\n      <a class=\"reponav-item\" href=\"#url\">\n        <%= octicon(\"issue-opened\") %>\n        Issues\n        <span class=\"Counter\">1</span>\n      </a>\n      <a class=\"reponav-item\" href=\"#url\">\n        <%= octicon(\"git-pull-request\") %>\n        Pull requests\n        <span class=\"Counter\">2</span>\n      </a>\n      <a class=\"reponav-item\" href=\"#url\">\n        <%= octicon(\"project\") %>\n        Projects\n        <span class=\"Counter\">3</span>\n      </a>\n    </nav>\n  </div>\n</div>\n```\n\n### Private\n\n```html\n<div class=\"pagehead repohead experiment-repo-nav\">\n  <div class=\"container-lg repohead-details-container px-3 clearfix\">\n    <ul class=\"pagehead-actions\">\n      <li>\n        <div class=\"clearfix\">\n          <button class=\"btn btn-sm btn-with-count\" href=\"#url\" role=\"button\">\n            <%= octicon(\"eye\") %>\n            Watch\n          </button>\n          <button class=\"social-count\" href=\"#url\">6</button>\n        </div>\n      </li>\n      <li>\n        <div class=\"clearfix\">\n          <button class=\"btn btn-sm btn-with-count\" href=\"#url\" role=\"button\">\n            <%= octicon(\"repo-forked\") %>\n            Fork\n          </button>\n          <button class=\"social-count\" href=\"#url\">0</button>\n        </div>\n      </li>\n    </ul>\n    <h1 class=\"private\">\n      <%= octicon(\"lock\") %>\n      <span class=\"author\"><a href=\"#url\" class=\"url fn\" rel=\"author\">cmwinters</a></span>\n      <span class=\"path-divider\">/</span>\n      <strong><a href=\"#url\">project</a></strong>\n      <span class=\"Label Label--outline v-align-middle\">Private</span>\n    </h1>\n  </div>\n  <div class=\"container-lg px-3\">\n    <nav class=\"reponav clearfix\" role=\"navigation\">\n      <a class=\"reponav-item selected\" href=\"#url\">\n        <%= octicon(\"code\") %>\n        Code\n      </a>\n      <a class=\"reponav-item\" href=\"#url\">\n        <%= octicon(\"issue-opened\") %>\n        Issues\n        <span class=\"Counter\">1</span>\n      </a>\n      <a class=\"reponav-item\" href=\"#url\">\n        <%= octicon(\"git-pull-request\") %>\n        Pull requests\n        <span class=\"Counter\">2</span>\n      </a>\n      <a class=\"reponav-item\" href=\"#url\">\n        <%= octicon(\"project\") %>\n        Projects\n        <span class=\"Counter\">3</span>\n      </a>\n    </nav>\n  </div>\n</div>\n```\n"
  },
  "components/pagination": {
    "title": "Pagination",
    "path": "components/pagination",
    "content": "\n\nUse the pagination component to apply button styles to a connected set of links that go to related pages (for example, previous, next, or page numbers).\n\n{:toc}\n\n## Previous/next pagination\n\nYou can make a very simple pagination container with just the Previous and Next buttons. Add the class `disabled` to the `Previous` button if there isn't a preceding page, or to the `Next` button if there isn't a succeeding page.\n\n```html\n<nav class=\"paginate-container\" aria-label=\"Pagination\">\n  <div class=\"pagination\">\n    <span class=\"previous_page disabled\">Previous</span>\n    <a class=\"next_page\" rel=\"next\" href=\"#url\" aria-label=\"Next Page\">Next</a>\n  </div>\n</nav>\n```\n\n## Numbered pagination\n\nFor pagination across multiple pages, make sure it's clear to the user where they are in a set of pages.\n\nTo do this, add anchor links to the `pagination` element. Previous and Next buttons should always be present. Add the class `disabled` to the Previous button if you're on the first page. Apply the class `current` to the current numbered page.\n\nAs always, make sure to include the appropriate `aria` attributes to make the element accessible.\n\n- Add `aria-label=\"Pagination\"` to the the `paginate-container` element.\n- Add `aria-current=\"true\"` to the current page marker.\n- Add `aria-label=\"Page X\"` to each anchor link.\n\n```html\n<nav class=\"paginate-container\" aria-label=\"Pagination\">\n  <div class=\"pagination\">\n    <span class=\"previous_page disabled\">Previous</span>\n    <em class=\"current selected\" aria-current=\"true\">1</em>\n    <a href=\"#url\" aria-label=\"Page 2\">2</a>\n    <a href=\"#url\" aria-label=\"Page 3\">3</a>\n    <span class=\"gap\">…</span>\n    <a href=\"#url\" aria-label=\"Page 8\">8</a>\n    <a href=\"#url\" aria-label=\"Page 9\">9</a>\n    <a href=\"#url\" aria-label=\"Page 10\">10</a>\n    <a class=\"next_page\" rel=\"next\" href=\"#url\" aria-label=\"Next Page\">Next</a>\n  </div>\n</nav>\n```\n\n"
  },
  "components/progress": {
    "title": "Progress",
    "path": "components/progress",
    "content": "\n\nUse Progress components to visualize task completion.\n\n## Default Progress\n\n```html\n<span class=\"Progress\">\n  <span class=\"Progress-value bg-green\" style=\"width: 50%;\"></span>\n</span>\n```\n\n## Large Progress\n\n```html\n<span class=\"Progress Progress--large\">\n  <span class=\"Progress-value bg-green\" style=\"width: 50%;\"></span>\n</span>\n```\n\n## Small Progress\n\n```html\n<span class=\"Progress Progress--small\">\n  <span class=\"Progress-value bg-green\" style=\"width: 50%;\"></span>\n</span>\n```\n\n## Progress with tooltip\n\n```html\n<div class=\"tooltipped tooltipped-n\" aria-label=\"78 done / 6 in progress / 2 to do\">\n  <span class=\"Progress\">\n    <span class=\"Progress-value bg-green\" style=\"width: 50%;\"></span>\n  </span>\n</div>\n```\n\n## Progress with multiple values\n\n```html\n<div class=\"tooltipped tooltipped-n\" aria-label=\"78 done / 6 in progress / 2 to do\">\n  <span class=\"Progress\">\n    <span class=\"Progress-value bg-green\" style=\"width: 50%;\"></span>\n    <span class=\"Progress-value bg-purple\" style=\"width: 25%;\"></span>\n    <span class=\"Progress-value bg-red\" style=\"width: 5%;\"></span>\n  </span>\n</div>\n```\n\n"
  },
  "components/subhead": {
    "title": "Subhead",
    "path": "components/subhead",
    "content": "\n\nThe basic Subhead consists of a `.Subhead` container, which has a light gray bottom border. Use `.Subhead-heading` for the heading itself. It's an `<h2>` sized heading with normal font-weight.\n\nUse a heading element whenever possible as they can be used as navigation for assistive technologies, and avoid skipping levels.\n\n```html title=\"Subhead\"\n<div class=\"Subhead\">\n  <div class=\"Subhead-heading\">Plain subhead</div>\n</div>\n```\n\nTo add a top margin to the Subhead, use `.Subhead--spacious`. This is useful for separating sections on a settings page.\n\n```html title=\"Spacious Subhead\"\n<div class=\"Subhead Subhead--spacious\">\n  <div class=\"Subhead-heading\">Spacious subhead</div>\n</div>\n```\n\nYou can add a one line description to the subhead with `.Subhead-description`.\n\n```html title=\"Subhead with description\"\n<div class=\"Subhead\">\n  <div class=\"Subhead-heading\">Subhead with description</div>\n  <div class=\"Subhead-description\">The subhead is a subdued header style with a light bottom border.</div>\n</div>\n```\n\nFor longer descriptions, it is recommended that you use a paragraph below the Subhead.\n\n```html  title=\"Subhead with longer description\"\n<div class=\"Subhead\">\n  <div class=\"Subhead-heading\">Plain subhead</div>\n</div>\n<p>\n  This is a longer description that is sitting below the Subheader. It's much longer than a description that could sit comfortably in the Subhead. It might even have <strong>bold</strong> text. <a href=\"#\">Click to learn more.</a>\n</p>\n```\n\nYou can add a button or something to the right of `.Subhead-heading` with the `.Subhead-actions` element.\n\n```html title=\"Subhead with actions\"\n<div class=\"Subhead\">\n  <div class=\"Subhead-heading\">Subhead with button</div>\n  <div class=\"Subhead-actions\"><a href=\"#url\" class=\"btn btn-sm btn-primary\" role=\"button\">Action</a></div>\n</div>\n\n<div class=\"Subhead Subhead--spacious\">\n  <div class=\"Subhead-heading\">Subhead with link</div>\n  <div class=\"Subhead-actions\"><a href=\"#url\">Learn more</a></div>\n</div>\n```\n\nUse all the elements together to create a Subhead with actions and a description.\n\n```html title=\"Subhead with actions and description\"\n<div class=\"Subhead\">\n  <div class=\"Subhead-heading\">Subhead with actions and description</div>\n  <div class=\"Subhead-actions\"><a href=\"#url\" class=\"btn btn-sm btn-primary\" role=\"button\">Action</a></div>\n  <div class=\"Subhead-description\">The subhead is a subdued header style with a light bottom border.</div>\n</div>\n```\n\nUse the `.Subhead-heading--danger` modifier to make the text bold and red. This is useful for warning users.\n\n```html title=\"Subhead danger\"\n<div class=\"Subhead\">\n  <div class=\"Subhead-heading Subhead-heading--danger\">Danger zone</div>\n</div>\n```\n\n"
  },
  "components/tooltips": {
    "title": "Tooltips",
    "path": "components/tooltips",
    "content": "\n\nAdd tooltips built entirely in CSS to nearly any element.\n\n{:toc}\n\n## Implementation and accessibility\n\nTooltips as a UI pattern should be our last resort for conveying information because it is hidden by default and often with zero or little visual indicator of its existence.\n\nBefore adding a tooltip, please consider: Is this information essential and necessary* Can the UI be made clearer? Can the information be shown on the page by default?\n\n**Attention**: we use `aria-label` for tooltip contents, because it is crucial that they are accessible to screen reader users. However, `aria-label` **replaces** the text content of an element in screen readers, so only use `.tooltipped` on elements with no existing text content, or consider using `title` for supplemental information.\n\n**Note:** Tooltip classes will conflict with Octicon styles, and as such, must be applied to the parent element instead of the icon.\n\n## Tooltip direction\nSpecify the direction of a tooltip with north, south, east, and west directions:\n\n- `.tooltipped-n`\n- `.tooltipped-ne`\n- `.tooltipped-e`\n- `.tooltipped-se`\n- `.tooltipped-s`\n- `.tooltipped-sw`\n- `.tooltipped-w`\n- `.tooltipped-nw`\n\n\n```html\n<span class=\"tooltipped tooltipped-n border p-2 mb-2 mr-2 float-left\" aria-label=\"This is the tooltip on the North side.\">\n  Tooltip North\n</span>\n<span class=\"tooltipped tooltipped-ne border p-2 mb-2 mr-2 float-left\" aria-label=\"This is the tooltip on the North East side.\">\n  Tooltip North East\n</span>\n<span class=\"tooltipped tooltipped-e border p-2 mb-2 mr-2 float-left\" aria-label=\"This is the tooltip on the East side.\">\n  Tooltip East\n</span>\n<span class=\"tooltipped tooltipped-se border p-2 mb-2 mr-2 float-left\" aria-label=\"This is the tooltip on the South East side.\">\n  Tooltip South East\n</span>\n<span class=\"tooltipped tooltipped-s border p-2 mb-2 mr-2 float-left\" aria-label=\"This is the tooltip on the South side.\">\n  Tooltip South\n</span>\n<span class=\"tooltipped tooltipped-sw border p-2 mb-2 mr-2 float-left\" aria-label=\"This is the tooltip on the South West side.\">\n  Tooltip South West\n</span>\n<span class=\"tooltipped tooltipped-w border p-2 mb-2 mr-2 float-left\" aria-label=\"This is the tooltip on the West side.\">\n  Tooltip West\n</span>\n<span class=\"tooltipped tooltipped-nw border p-2 mb-2 mr-2 float-left\" aria-label=\"This is the tooltip on the North West side.\">\n  Tooltip North West\n</span>\n```\n\n## Tooltip alignment\nAlign tooltips to the left or right of an element, combined with a directional class to specify north or south.\n\n```html\n<span class=\"tooltipped tooltipped-ne tooltipped-align-left-1 border p-2 mb-2 mr-2 float-left\" aria-label=\"Tooltipped NE and aligned left.\">\n  Tooltip North East align left 1\n</span>\n<span class=\"tooltipped tooltipped-ne tooltipped-align-left-2 border p-2 mb-2 mr-2 float-left\" aria-label=\"Tooltipped NE and aligned left.\">\n  Tooltip North East align left 2\n</span>\n<span class=\"tooltipped tooltipped-se tooltipped-align-left-1 border p-2 mb-2 mr-2 float-left\" aria-label=\"Tooltipped SW and aigned left.\">\n  Tooltip South East align left 1\n</span>\n<span class=\"tooltipped tooltipped-se tooltipped-align-left-2 border p-2 mb-2 mr-2 float-left\" aria-label=\"Tooltipped SW and aigned left.\">\n  Tooltip South East align left 2\n</span>\n<span class=\"tooltipped tooltipped-nw tooltipped-align-right-1 border p-2 mb-2 mr-2 float-left\" aria-label=\"Tooltipped NW and aligned right.\">\n  Tooltip North West align right 1\n</span>\n<span class=\"tooltipped tooltipped-nw tooltipped-align-right-2 border p-2 mb-2 mr-2 float-left\" aria-label=\"Tooltipped NW and aligned right.\">\n  Tooltip North West align right 2\n</span>\n<span class=\"tooltipped tooltipped-sw tooltipped-align-right-1 border p-2 mb-2 mr-2 float-left\" aria-label=\"Tooltipped SE and aligned right.\">\n  Tooltip South West align right 1\n</span>\n<span class=\"tooltipped tooltipped-sw tooltipped-align-right-2 border p-2 mb-2 mr-2 float-left\" aria-label=\"Tooltipped SE and aligned right.\">\n  Tooltip South West align right 2\n</span>\n```\n\n## Tooltips with multiple lines\nUse `.tooltipped-multiline` when you have long content. This style has some limitations: you cannot pre-format the text with newlines, and tooltips are limited to a max-width of `250px`.\n\n\n```html\n<span class=\"tooltipped tooltipped-multiline tooltipped-n border p-2\" aria-label=\"This is the tooltip with multiple lines. This is the tooltip with multiple lines.\">\n  Tooltip with multiple lines\n</span>\n```\n\n## Tooltips No Delay\n\nBy default the tooltips have a slight delay before appearing. This is to keep multiple tooltips in the UI from being distracting. There is a modifier class you can use to override this. `.tooltipped-no-delay`\n\n```html\n<span class=\"tooltipped tooltipped-n tooltipped-no-delay border p-2\" aria-label=\"This is the tooltip on the no delay side.\">\n  Tooltip no delay\n</span>\n```\n\n"
  },
  "components/truncate": {
    "title": "Truncate",
    "path": "components/truncate",
    "content": "\n\n`.css-truncate` will shorten text with an ellipsis. The maximum width of the truncated text can be changed by overriding the max-width of `.css-truncate-target`. Unless the full text is so long that it affects performace, always add `title` to the truncated element so the full text can still be seen.\n\n```html title=\"Truncate\"\n<span class=\"branch-ref css-truncate css-truncate-target\" title=\"really-long-branch-name\">\n  really-long-branch-name\n</span>\n```\n\nYou can reveal the entire string on hover with the addition of `.expandable`.\n\n```html title=\"Truncate Expandable\"\n<span class=\"css-truncate expandable\">\n  <span class=\"branch-ref css-truncate-target\">this-is-a-really-long-branch-name</span>\n</span>\n```\n"
  },
  "getting-started/index": {
    "title": "Getting started",
    "path": "getting-started/index",
    "content": "\nOur CSS framework, Primer, is [open-sourced on GitHub](https://github.com/primer/primer) and [hosted on npm](https://www.npmjs.com/package/primer). Our modules are grouped into three packages: [primer-core](https://github.com/primer/primer/tree/master/modules/primer-core), [primer-product](https://github.com/primer/primer/tree/master/modules/primer-product), and [primer-marketing](https://github.com/primer/primer/tree/master/modules/primer-marketing). `primer-core` contains packages used in both product (github.com) and marketing (logged out homepage). To install all of primer, you can use [primer](https://github.com/primer/primer) which is a grouping of core, product and marketing.\n\n## Installing via npm\n\nWe recommend using npm to install primer because of how easy npm is for managing dependencies.\n\n### Before you start\n\nPrimer packages require npm version 3 or above. You can check what version you have by running `npm -v`. If you have a version that's older than 3.0, you can update it by running `npm install npm@latest -g`. For more info, read the [npm install docs](https://docs.npmjs.com/getting-started/installing-node).\n\n### Initialize npm project\n\nBegin by initializing your project with a `package.json` file. You can read more on how to do this [in the npm documentation](https://docs.npmjs.com/getting-started/using-a-package.json#creating-a-packagejson).\n\n### Install primer modules\n\nInstall the primer modules you wish to use by running the npm install command. This will install the module and all the dependencies into the `node_modules` directory.\n\n```\nnpm install primer --save\n```\n\n### For a Jekyll site\n\nMake sure you have [Jekyll](https://jekyllrb.com/) version `3.3.1` or greater with:\n\n```\njekyll -v\n```\n\nIf you have an older version, follow the instructions in the [upgrading docs](https://jekyllrb.com/docs/upgrading/).\n\nOnce you have Jekyll up and running, you will need to add this configuration to your `_config.yml` file. This let's the sass compiler know where your code lives.\n\n```yml\nsass:\n  # Where you keep your scss files\n  sass_dir: assets/css/\n  # Where sass should look for other scss\n  load_paths:\n    - node_modules/\n```\n\nIt's best practice to import all of this scss into one file, usually named `index.scss`. From this file you'll import your primer code and any other custom code you write.\n\n```scss\n@import \"primer-core/index.scss\";\n// These files live in the same directory as the index file.\n@import \"./custom-1.scss\";\n@import \"./custom-2.scss\";\n```\n\nHere's an example of how it might look if you installed only a few primer components with some custom variable overrides. The `$blue` uses the default primer blue in the text utilities, then the new blue in `\"custom-that-uses-primer-variables.scss\"` and `.foo`.\n\n```scss\n@import \"primer-utilities/index.scss\";\n@import \"primer-buttons/index.scss\";\n\n// Import color variables for custom code\n@import \"primer-support/index.scss\";\n\n// Override default blue\n$blue: #0000ff;\n\n@import \"./custom-that-uses-primer-variables.scss\";\n\n.foo {\n  background: $blue;\n  font-size: $h2-size;\n  color: $text-gray;\n}\n```\n\nDon't forget to add the compiled CSS to the `<head>` section of your page.\n\n```html inert=true\n<link href=\"path/to/style.css\" rel=\"stylesheet\">\n```\n\n## Using primer on a static site\n\nYou won't need to install any node modules for a static site, you can use the built CSS. The best thing to do is to [download the built CSS](https://unpkg.com/primer/build/build.css) from the npm module and host it yourself. If that's not an option, you can include a CDN link in your html:\n\n```html inert=true\n<link href=\"https://unpkg.com/primer/build/build.css\" rel=\"stylesheet\">\n```\n"
  },
  "objects/index": {
    "title": "Objects",
    "path": "objects/index",
    "content": "\nObjects help us with common layout patterns but aren't concerned with thematic styles. Examples include the table object, the grid, and the media object. Objects essentially provide some scaffolding for layouts and should be able to be used with other objects, components, and utilities.\n"
  },
  "objects/layout": {
    "title": "Layout",
    "path": "objects/layout",
    "content": "\n\nPrimer's layout includes basic page containers and a single-tiered, fraction-based grid system. That sounds more complicated than it really is though—it's just containers, rows, and columns.\n\nYou can find all the below styles in `_layout.scss`.\n\n#### Container\n\nCenter your page's contents with a `.container`.\n\n```html title=\"Container\"\n<div class=\"container border\">\n  Container\n</div>\n```\n\nThe container applies `width: 980px;` and uses horizontal `margin`s to center it.\n\n#### Grid\n\n##### How it works\n\nThe grid is pretty standard—you create rows with `.columns` and individual columns with a column class and fraction class. Here's how it works:\n\n- Add a `.container` to encapsulate everything and provide ample horizontal gutter space.\n- Create your outer row to clear the floated columns with `<div class=\"columns\">`.\n- Add your columns with individual `<div class=\"column\">`s.\n- Add your fractional width classes to set the width of the columns (e.g., `.one-fourth`).\n\n##### Demo\n\nIn practice, your columns will look like the example below.\n\n```html title=\"Grid columns\"\n<div class=\"container\">\n  <div class=\"columns mb-1\">\n    <div class=\"one-fifth column block-blue p-3 border\">\n      .one-fifth\n    </div>\n    <div class=\"four-fifths column block-blue p-3 border\">\n      .four-fifths\n    </div>\n  </div>\n\n  <div class=\"columns mb-1\">\n    <div class=\"one-fourth column block-blue p-3 border\">\n      .one-fourth\n    </div>\n    <div class=\"three-fourths column block-blue p-3 border\">\n      .three-fourths\n    </div>\n  </div>\n\n  <div class=\"columns mb-1\">\n    <div class=\"one-third column block-blue p-3 border\">\n      .one-third\n    </div>\n    <div class=\"two-thirds column block-blue p-3 border\">\n      .two-thirds\n    </div>\n  </div>\n\n  <div class=\"columns\">\n    <div class=\"one-half column block-blue p-3 border\">\n      .one-half\n    </div>\n    <div class=\"one-half column block-blue p-3 border\">\n      .one-half\n    </div>\n  </div>\n</div>\n```\n\n##### Centered\n\nColumns can be centered by adding `.centered` to the `.column` class.\n\n```html title=\"Grid centered\"\n<div class=\"columns\">\n  <div class=\"one-half column centered block-blue border p-3\">\n    .one-half\n  </div>\n</div>\n```\n"
  },
  "objects/table-object": {
    "title": "Table object",
    "path": "objects/table-object",
    "content": "\n\nThe table object is a module for creating dynamically resizable elements that always sit on the same horizontal line (e.g., they never break to a new line). Using table styles in our CSS means it's cross browser friendly back to at least IE9.\n\nAdditional `margin` or `padding` may be required to properly space content.\n\n```html title=\"Table object\"\n<div class=\"TableObject\">\n  <div class=\"TableObject-item TableObject-item--primary\">\n    <input class=\"input-block form-control\" type=\"text\" placeholder=\"Long elastic input form\" aria-label=\"Long elastic input form\">\n  </div>\n  <div class=\"TableObject-item\">\n    <button class=\"btn ml-2\" type=\"button\">Button</button>\n  </div>\n</div>\n```\n\n"
  },
  "principles/html": {
    "title": "HTML",
    "path": "principles/html",
    "content": "\n{:toc}\n\n## General formatting\n\n* Use soft-tabs with a two space indent. Spaces are the only way to guarantee code renders the same in any person's environment.\n* Paragraphs of text should always be placed in a `<p>` tag. Never use multiple `<br>` tags.\n* Items in list form should always be in `<ul>`, `<ol>`, or `<dl>`. Never use a set of `<div>` or `<p>`.\n* Every form input that has text attached should utilize a `<label>` tag. **Especially radio or checkbox elements.**\n* Even though quotes around attributes is optional, always put quotes around attributes for readability.\n* Avoid writing closing tag comments, like `<!-- /.element -->`. This just adds to page load time. Plus, most editors have indentation guides and open-close tag highlighting.\n* Avoid trailing slashes in self-closing elements. For example, `<br>`, `<hr>`, `<img>`, and `<input>`.\n* Don't set `tabindex` manually—rely on the browser to set the order.\n\n```html inert=true\n<p class=\"line-note m-0\" data-attribute=\"106\">\n  This is my paragraph of special text.\n</p>\n```\n\n## Boolean attributes\n\nMany attributes don't require a value to be set, like `disabled` or `checked`, so don't set them.\n\n```html inert=true\n<input type=\"text\" disabled>\n\n<input type=\"checkbox\" value=\"1\" checked>\n\n<select>\n  <option value=\"1\" selected>1</option>\n</select>\n```\n\nFor more information, [read the WhatWG section](http://www.whatwg.org/specs/web-apps/current-work/multipage/common-microsyntaxes.html#boolean-attributes).\n\n## Lean markup\n\nWhenever possible, avoid superfluous parent elements when writing HTML. Many times this requires iteration and refactoring, but produces less HTML. For example:\n\n```html inert=true\n<!-- Not so great -->\n<span class=\"avatar\">\n  <img src=\"https://github.com/github.png\">\n</span>\n\n<!-- Better -->\n<img class=\"avatar\" src=\"https://github.com/github.png\">\n```\n\n## Forms\n\n* Lean towards radio or checkbox lists instead of select menus.\n* Wrap radio and checkbox inputs and their text in `<label>`s. No need for `for` attributes here—the wrapping automatically associates the two.\n* Form buttons should always include an explicit `type`. Use primary buttons for the `type=\"submit\"` button and regular buttons for `type=\"button\"`.\n* The primary form button must come first in the DOM, especially for forms with multiple submit buttons. The visual order should be preserved with `float: right;` on each button.\n\n## Tables\n\nMake use of `<thead>`, `<tfoot>`, `<tbody>`, and `<th>` tags (and `scope` attribute) when appropriate. (Note: `<tfoot>` goes above `<tbody>` for speed reasons. You want the browser to load the footer before a table full of data.)\n\n```html inert=true\n<table summary=\"This is a chart of invoices for 2011.\">\n  <thead>\n    <tr>\n      <th scope=\"col\">Table header 1</th>\n      <th scope=\"col\">Table header 2</th>\n    </tr>\n  </thead>\n  <tfoot>\n    <tr>\n      <td>Table footer 1</td>\n      <td>Table footer 2</td>\n    </tr>\n  </tfoot>\n  <tbody>\n    <tr>\n      <td>Table data 1</td>\n      <td>Table data 2</td>\n    </tr>\n  </tbody>\n</table>\n```\n"
  },
  "principles/scss": {
    "title": "SCSS",
    "path": "principles/scss",
    "content": "\n{:toc}\n\n## Spacing\n\n* Use soft-tabs with a two space indent. Spaces are the only way to guarantee code renders the same in any person's environment.\n* Put spaces after `:` in property declarations.\n* Put spaces before `{` in rule declarations.\n* Put line breaks between rulesets.\n* When grouping selectors, keep individual selectors to a single line.\n* Place closing braces of declaration blocks on a new line.\n* Each declaration should appear on its own line for more accurate error reporting.\n\n## Formatting\n\n* Use hex color codes `#000` unless using `rgba()` in raw CSS (the SCSS `rgba()` function is overloaded to accept hex colors, as in `rgba(#000, .5)`).\n* Use `//` for comment blocks (instead of `/* */`).\n* Avoid specifying units for zero values, e.g., `margin: 0;` instead of `margin: 0px;`.\n* Strive to limit use of shorthand declarations to instances where you must explicitly set all the available values.\n\n## Guidelines for using Sass feaures (WIP)\n_When and when not to create:_\n\n* Variables\n* Mixins\n* Functions\n\n## Lint rules (WIP)\n\nAs a rule of thumb, avoid unnecessary nesting in SCSS. At most, aim for three levels. If you cannot help it, step back and rethink your overall strategy (either the specificity needed, or the layout of the nesting).\n\n* Nesting depth: 3\n* Extends: no\n* Duplicated properties: no\n* Final new lines: yes\n* Hex length: 6\n* ID selectors: no\n* Leading zero: yes\n* Naming format: lowercase-with-hyphens\n* Property order: see [HTML property order](./html)\n* Selector depth: 3\n* Single line properties: yes\n\n## Examples\n\nHere are some good examples that apply the above guidelines:\n\n```scss\n// Example of good basic formatting practices\n.styleguide-format {\n  color: #000;\n  background-color: rgba(0, 0, 0, .5);\n  border: 1px solid #0f0;\n}\n\n// Example of individual selectors getting their own lines (for error reporting)\n.multiple,\n.classes,\n.get-new-lines {\n  display: block;\n}\n\n// Avoid unnecessary shorthand declarations\n.not-so-good {\n  margin: 0 0 20px;\n}\n.good {\n  margin-bottom: 20px;\n}\n```\n"
  },
  "support/breakpoints": {
    "title": "Breakpoints",
    "path": "support/breakpoints",
    "content": "\n{:toc}\n\nOur breakpoints are based on screen widths where our content starts to break. Since most of GitHub is currently a fixed-width with we use pixel widths to make it easy for us to match page widths for responsive and non-responsive pages. **Our breakpoints may change as we move more of the product into responsive layouts.**\n\nWe use abbreviations for each breakpoint to keep the class names concise. This abbreviated syntax is used consistently across responsive styles. Responsive styles allow you to change the styles properties at each breakpoint. For example, when using column widths for grid layouts, you can change specify that the width is 12 columns wide at the small breakpoint, and 6 columns wide from the large breakpoint: `<div class=\"col-sm-12 col-lg-6\">...</div>`\n\n| Breakpoint | Syntax | Description |\n| --- | --- | --- |\n| Small | sm | min-width: 544px |\n| Medium | md | min-width: 768px |\n| Large | lg | min-width: 1012px |\n| Extra-large | xl | min-width: 1280px |\n\n**Note:** The `lg` breakpoint matches our current page width of `980px` including left and right padding of `16px` (`$spacer-3`). This is so that content doesn't touch the edges of the window when resized.\n\nResponsive styles are available for [margin](/css/utilities/margin#responsive-margins), [padding](/css/utilities/padding#responsive-padding), [layout](/css/utilities/layout), [flexbox](/css/utilities/flexbox#responsive-flex-utilities), and the [grid](/css/objects/grid#responsive-grids) system.\n\n## Breakpoint variables\n\nThe above values are defined as variables, and then put into a Sass map that generates the media query mixin.\n\n```scss\n// breakpoints\n$width-xs: 0;\n$width-sm: 544px;\n$width-md: 768px;\n$width-lg: 1012px;\n$width-xl: 1280px;\n\n$breakpoints: (\n  // Small screen / phone\n  sm: $width-sm,\n  // Medium screen / tablet\n  md: $width-md,\n  // Large screen / desktop (980 + (12 * 2)) <= container + gutters\n  lg: $width-lg,\n  // Extra large screen / wide desktop\n  xl: $width-xl\n) !default;\n```\n\n## Media query mixins\nUse media query mixins when you want to change CSS properties at a particular breakpoint. The media query mixin works by passing in a breakpoint value, such as `breakpoint(md)`.\n\nMedia queries are scoped from each breakpoint and upwards. In the example below, the font size is `28px` until the viewport size meets the `lg` breakpoint, from there upwards—including through the `xl` breakpoint—the font size will be `32px`.\n\n```scss\n.styles {\n  font-size: 28px;\n  @include breakpoint(md) { font-size: 32px; }\n}\n```\n\n## Responsive variants\nThe `$responsive-variants` variable is a mapping of breakpoints to classname variants, and should be used like so:\n\n```scss\n@each $breakpoint, $variant in $responsive-variants {\n  @include breakpoint($breakpoint) {\n    // Note: the first iteration gets `$variant == \"\"`\n    .overflow#{$variant}-auto { overflow: auto; }\n  }\n}\n```\n\nThe resulting CSS would be:\n\n```css\n.overflow-auto { overflow: auto; }\n@media (min-width: 544px) { .overflow-sm-auto { overflow: auto; } }\n@media (min-width: 768px) { .overflow-md-auto { overflow: auto; } }\n@media (min-width: 1012px) { .overflow-lg-auto { overflow: auto; } }\n@media (min-width: 1280px) { .overflow-xl-auto { overflow: auto; } }\n```\n\n#### Caution!\n1. Don't precede the `#{$variation}` interpolation with a hyphen because the first value of `$variant` will be an empty string.\n1. For consistency, please put the `@include breakpoint($breakpoint)` call directly inside the `$responsive-variants` loop. This will help keep file sizes small by \"batching\" selectors in shared `@media` queries.\n"
  },
  "support/color-system": {
    "title": "Color system",
    "path": "support/color-system",
    "content": "\nimport {BorderBox, Box, Flex, Heading, Text} from '@primer/components'\nimport {ColorPalette, ColorVariables} from '../../../docs/color-system'\n\n{:toc}\n\n## Color palette\n\n<ColorPalette />\n\n## Color variables\n\n<ColorVariables />\n"
  },
  "support/index": {
    "title": "Support",
    "path": "support/index",
    "content": "\n\nPrimer is built on systems that form the foundation of our styles, and inform the way we write and organize our CSS. Building upon systems helps us make styles consistent and interoperable with each other, and assists us with visual hierarchy and vertical rhythm.\n\nWe use Sass variables to keep color, typography, spacing, and other foundations of our system consistent. Occasionally we use Sass mixins to apply multiple CSS properties, they are a convenient solution for frequently-used verbose patterns.\n\nWe've documented variables, mixins, and the systems they are built on for the following:\n\n- [Breakpoints](/css/support/breakpoints)\n- [Colors](/css/support/color-system)\n- [Spacing](/css/support/spacing)\n- [Typography](/css/support/typography)\n\n"
  },
  "support/spacing": {
    "title": "Spacing",
    "path": "support/spacing",
    "content": "\n{:toc}\n\n## Spacing scale\nThe spacing scale is a **base-8** scale. We chose a base-8 scale because eight is a highly composable number (it can be divided and multiplied many times and result in whole numbers), yet allows spacing dense enough for GitHub's UI. The scale's exception is that it begins at 4px to allow smaller padding and margin for denser parts of the site, from there on it steps up consistently in equal values of `8px`.\n\n| Variable | Scale | Value |\n| --- | --- | --- |\n| $spacer-0 | 0 | 0 |\n| $spacer-1 | 1 | 4px |\n| $spacer-2 | 2 | 8px |\n| $spacer-3 | 3 | 16px |\n| $spacer-4 | 4 | 24px |\n| $spacer-5 | 5 | 32px |\n| $spacer-6 | 6 | 40px |\n\nThese variables are encouraged to be used within components and custom CSS. The spacing scale is also used for [margin](/css/utilities/margin) and [padding](/css/utilities/padding) utilities.\n\nSee [primer-marketing-support](/css/support/marketing-variables) for the extended spacing scale used for marketing needs and the related y-axis spacing utilities for [margin](/css/utilities/marketing-margin) and [padding](/css/utilities/marketing-padding).\n\n## Em-based spacing\nEms are used for spacing within components such as buttons and form elements. We stick to common fractions for em values (and powers of 2 where possible) so that , in combination with typography and line-height, the total height lands on sensible numbers.\n\nWe aim for whole numbers, however, GitHub's body font-size is 14px which is difficult to work with, so we sometimes can't achieve a whole number. Less desirable values are highlighted in <span class=\"text-red\">red</span> below.\n\n| Variable | Fraction | Y Padding (em) | Total height at 14px | Total height at 16px |\n| --- | --- | --- | --- | --- |\n| $em-spacer-1 | 1/16 | .0625 | <span class=\"text-red\">22.75</span> | 26 |\n| $em-spacer-2 | 1/8 | .125 | <span class=\"text-red\">24.5</span> | 28 |\n| $em-spacer-3 | 1/4 | .25 | 28 | 32 |\n| $em-spacer-4 | 3/8 | .375 | <span class=\"text-red\">31.5</span> | 36 |\n| $em-spacer-5 | 1/2 | .5 | 35 | 40 |\n| $em-spacer-6 | 3/4 | .75 | 42 | 48 |\n\nThe variables listed above are preferred for use within components and custom CSS. To calculate values with other font-sizes or em values, we suggest using [Formula](http://jxnblk.com/formula/).\n"
  },
  "support/marketing-variables": {
    "title": "Marketing support",
    "path": "support/marketing-variables",
    "content": "\n\n### Extended spacing scale\nThis module extends the `primer-core` spacing scale for marketing site needs. These are useful for achieving bigger vertical spacing between sections on marketing sites.\n\nStarting where the `primer-core` spacing scale ends at spacer 6, the marketing scale first steps up with `8px` for spacer 7 then steps in increments of `16px` from spacer 8 up to 12.\n\n| Scale | Value |\n|-------|-------|\n| 7     | 48    |\n| 8     | 64    |\n| 9     | 80    |\n| 10    | 96    |\n| 11    | 112   |\n| 12    | 128   |\n\nSee [primer-marketing-support](https://npm.im/primer-marketing-support) for the extended spacing scale used for marketing needs and the related y-axis spacing utilities for [margin](/css/utilities/marketing-margin) and [padding](/css/utilities/marketing-padding).\n\n"
  },
  "support/typography": {
    "title": "Typography",
    "path": "support/typography",
    "content": "\n{:toc}\n\n## Type Scale\n\nThe typography scale is designed to work for GitHub's product UI and marketing sites. Font sizes are designed to work in combination with line-height values so as to result in more sensible numbers wherever possible.\n\nFont sizes are smaller on mobile and scale up at the `md` [breakpoint](./breakpoints) to be larger on desktop.\n\n| Scale | Font size: mobile | Font size: desktop | 1.25 line height | 1.5 line height |\n| --- | --- | --- | --- | --- |\n| 00 | 40px | 48px | 60 | 72 |\n| 0 | 32px | 40px | 50 | 60 |\n| 1 | 26px | 32px | 40 | 48 |\n| 2 | 22px | 24px | 30 | 36 |\n| 3 | 18px | 20px | 25 | 30 |\n| 4 | 16px | 16px | 20 | 24 |\n| 5 | 14px | 14px | 17.5 | 21 |\n| 6 | 12px | 12px | 15 | 18 |\n\nThe typography scale is used to create [typography utilities](/css/utilities/typography).\n\n## Typography variables\n\n#### Font size variables\n```scss\n// Heading sizes - mobile\n// h4—h6 remain the same size on both mobile & desktop\n$h00-size-mobile: 40px;\n$h0-size-mobile: 32px;\n$h1-size-mobile: 26px;\n$h2-size-mobile: 22px;\n$h3-size-mobile: 18px;\n\n// Heading sizes - desktop\n$h00-size: 48px;\n$h0-size: 40px;\n$h1-size: 32px;\n$h2-size: 24px;\n$h3-size: 20px;\n$h4-size: 16px;\n$h5-size: 14px;\n$h6-size: 12px;\n```\n\n#### Font weight variables\n```scss\n$font-weight-bold: 600 !default;\n$font-weight-light: 300 !default;\n```\n\n#### Line height variables\n```scss\n$lh-condensed-ultra: 1 !default;\n$lh-condensed: 1.25 !default;\n$lh-default: 1.5 !default;\n```\n\n## Typography Mixins\nTypography mixins are available for heading styles and for our type scale. They can be used within components or custom CSS. The same styles are also available as [utilities](/css/utilities/typography#heading-utilities). which requires no additional CSS.\n\nHeading mixins are available for `h1` through to `h6`, this includes the font-size and font-weight. Example:\n\n```scss\n.styles {\n  @include h1;\n}\n```\n\nResponsive heading mixins can be used to adjust the font-size between the `sm` and `lg` breakpoint. Only headings 1—3 are responsive. Heading 4—6 are small enough to remain the same between mobile and desktop. Responsive heading mixins include the font-size and font-weight as well as the media query. To use a responsive heading mixin, postfix the heading with `-responsive`:\n\n```scss\n.styles {\n  @include h1-responsive;\n}\n```\n\nResponsive type scale mixins are also available. Type scale mixins apply a font-size that gets slightly bigger at the `lg` breakpoint. They do not apply a font-weight. Like the responsive heading mixins, they are only available for size `f1` to `f3` and are postfixed with `-responsive` as in the example below:\n\n```scss\n.style {\n  @include f1-responsive;\n}\n```\n"
  },
  "tools/atom-packages": {
    "title": "Atom packages",
    "path": "tools/atom-packages",
    "content": "\n[Atom editor](https://atom.io/) is a _\"A hackable text editor for the 21st Century\"_ built by GitHub. If you use it as your editor of choice, the design systems team has a list of packages that we find useful for CSS development.\n\nWe keep a list of suggested packages in our [atom-packages repository](https://github.com/primer/atom-packages). To install all packages, run this command in your terminal.\n\n```sh\napm install $(curl -L https://raw.githubusercontent.com/primer/atom-packages/master/packages)\n```\n\n{:toc}\n\n## Autocomplete Primer\n\nThe [Autocomplete Primer package](https://atom.io/packages/autocomplete-primer) is a custom [Primer](https://github.com/primer) package that autocompletes class names for [utilities](/css/utilities) and Rails helper tags for [Octicons](https://github.com/primer/octicons/tree/master/lib/octicons_helper#readme).\n\nInstall [autocomplete-primer](https://atom.io/packages/autocomplete-primer) using Atom's package manager or enter this into your terminal:\n\n```sh\napm install autocomplete-primer\n```\n\n## Color picker\n\n[Color picker](https://atom.io/packages/color-picker) adds a color picking overlay with sliders and color wheels.\n\nInstall [color-picker](https://atom.io/packages/color-picker) using Atom's package manager or enter this into your terminal:\n\n```sh\napm install color-picker\n```\n\n## Pigments\n\n[Pigments](https://atom.io/packages/pigments) adds corresponding backgrounds to CSS color values in the editor for higher visibility. It also scans the source files for color variables and displays the true value.\n\nInstall [pigments](https://atom.io/packages/pigments) using Atom's package manager or enter this into your terminal:\n\n```sh\napm install pigments\n```\n\n## Stylelint linter\n\nWe use [Stylelint](https://stylelint.io/), an extension to the [Atom linter package](https://atom.io/packages/linter), for [linting our SCSS](/css/tools/linting). To prevent linting errors during the build we recommend you install [linter-stylelint](https://atom.io/packages/linter-stylelint), which will alert you of any errors locally while you work.\n\nInstall [linter-stylelint](https://atom.io/packages/linter-stylelint) using Atom's package manager or enter this into your terminal:\n\n```sh\napm install linter linter-stylelint\n```\n"
  },
  "tools/index": {
    "title": "Tools",
    "path": "tools/index",
    "content": "\nDesign and development tools for working with the GitHub CSS toolkit.\n"
  },
  "tools/docset": {
    "title": "Docset",
    "path": "tools/docset",
    "content": "\nWe use and ❤️ [Kapeli's Dash app][dash] for browsing API documentation. Dash comes with 150+ offline documentation sets, but doesn't have our style guide.\n\nSo we've generated a [GitHub Style Guide docset][dash-feed] that gives you access to this site offline.\n\n## Installation\n\n1. First you'll need to make sure you have [Dash app][dash] installed.\n2. Once installed, open the app, and click this [install docset link][dash-feed].\n3. After the docset has been added to your list, click \"download\".\n![](https://user-images.githubusercontent.com/54012/32087284-a87ed8f4-ba8f-11e7-9d84-c61913336491.png)\n\n[dash]: https://kapeli.com/dash\n[dash-feed]: dash-feed://https%3A%2F%2Fstyleguide.github.com%2Ffeeds%2FGitHub%20Style%20Guide.xml\n"
  },
  "tools/linting": {
    "title": "Linting",
    "path": "tools/linting",
    "content": "\nWe use linters to enforce [coding principles and standards](/css/principles). On every pull request we run the linters on the code to make sure any changes meet our standards. When a commit contains code that doesn't meet the standards, the build fails which blocks merging into master and deploying to production.\n\nFor teams working on `github/github` this configuration is all setup for you. While we do recommend you also [setup a plugin](#plugins) in your editor, this is not required.\n\nFor everyone else we encourage you to adopt all or some of these tools in your workflow.\n\n{:toc}\n\n## CSS\n\nWe use [stylelint](http://stylelint.io/) to lint our CSS. If you are working on `github/github` you don't need to do any setup because stylelint comes bundled within the repository. If you are working on other properties, you may need to setup stylelint. You can install stylelint via npm:\n\n```\nnpm install -g stylelint\n```\n\nWhether you work on `github/github` or not, it's useful to see lint errors locally. The easiest way to lint your code is to install a [plugin](#plugins) in your workflow. If you prefer to run stylelint manually, pass it a glob pattern of the files you want to lint. If you work on `github/github`, you can run stylelint from the command line:\n\n```\nbin/stylelint \"app/assets/stylesheets/**/*.scss\" --syntax scss\n```\n\nFor more advanced usage, we recommend reading the [stylelint user guide](http://stylelint.io/user-guide/) and checking out our [primer stylelint configuration](https://github.com/primer/primer/tree/master/tools/stylelint-config-primer).\n\n### Configuration\n\nStylelint is [configured by a JSON file](http://stylelint.io/user-guide/configuration/) that specifies which linter rules we enforce. If you are working on `github/github`, you don't need to do any setup because the configuration is included within the repository bundle.\n\nWe have extracted out our configuration file into a separate repository [primer/stylelint-config-primer](https://github.com/primer/primer/tree/master/tools/stylelint-config-primer). This gives us a central source where we can keep the configuration up-to-date and distribute easily across all our projects.\n\nTo [use the configuration](https://github.com/primer/primer/tree/master/tools/stylelint-config-primer#usage) in your project, install the config `npm install --save stylelint-config-primer` via npm, and extend the config in your `.stylelintrc` file. Put the file in the root directory of your project.\n\n```json\n{\n  \"extends\": \"stylelint-config-primer\"\n}\n```\n\nA list of all the specific rules we have enabled are documented in [the package README](https://www.npmjs.com/package/stylelint-config-primer#documentation).\n\n### Disabling\n\nWe use linters to help ensure our CSS is written according to our principles. On occasion it's necessary to break those principles and disable a linter. This is usually because of one of the following scenarios:\n\n- There is no other way to achieve the desired style due to other code limitations, such as the way the views are rendered or the way the content is output (such as rendered markdown).\n- There is no other way to achieve the desired style due to conflicts with existing styles that would require considerable effort to fix.\n- Breaking a lint rule offers an improvement to code readability and/or maintainability (this is often the case when writing components and supporting SCSS, such as mixins and functions).\n\nTo disable a linter, place a `// stylelint-disable` comment around the specific block of CSS that you need to override. For example:\n\n```scss\n// When a branch name is a link\n// stylelint-disable selector-no-qualifying-type\na.branch-name { color: $brand-blue; }\n// stylelint-enable selector-no-qualifying-type\n```\n\n#### If you choose to disable a linting rule...\n\n1. You'll need to specify a reason for disabling the lint.\n2. Say what lint you're disabling, this example has `selector-no-qualifying-type`.\n3. Make sure to `disable` then `enable` the lint again after your code block. This ensures that the rule is re-enabled for any code after the block in question.\n\nWhen you disable a linter on GitHub, [Sentinel](https://github.com/github/sentinel) will post a comment on your pull request notifying the Design Systems team of this override. This is because disabled lints act as a signal that there may be issues with Primer and/or the CSS in question.\n\nWhile linters shouldn't be disabled without consideration, essentially they act as a guide to how we write CSS rather than steadfast rules. For more info on disabling configuration, visit the [stylelint docs](http://stylelint.io/user-guide/configuration/#turning-rules-off-from-within-your-css).\n\n### Plugins\n\nOur linter runs on every commit, but finding you have a lint error after a push can be frustrating and waste time. To avoid this, a [collection of editor plugins](http://stylelint.io/user-guide/complementary-tools/) are available to help you lint while you code..\n\nThe Design Systems team recommends using [Atom](https://atom.io/) with the  [linter-stylelint](https://github.com/AtomLinter/linter-stylelint) package installed.\n\n![image](https://cloud.githubusercontent.com/assets/54012/21456489/6a10b370-c8f6-11e6-9199-bb3709e79794.png)\n\nWe also have a [list of Atom packages](/css/tools/atom-packages) that we find useful for development.\n\n## HTML\n\nA custom Rails test called `styles_match_markup_test.rb` runs for our `.html.erb` files and checks for unused selectors. The test collects a list of all the class names used in our markup, JavaScript and documentation, then compares that with a list of all our class names in our `.scss` files.\n\nThis test isn't smart enough to know about CSS inheritance, but will help you catch any dead CSS in your markup or styles. Run the test locally with this command.\n\n```\nbin/testrb test/fast/linting/styles_match_markup_test.rb\n```\n\nSometimes you will have generated class names that the test misses. Adding these class names to the regular expression enabled `selectors_match_markup_whitelist.yml` file will quiet the tests.\n\n## Files\n\nWe enforce `.scss` file naming to be lowercase, only use `-` hyphens and no leading `_` underscores. Removing underscores from the files is an anti-pattern for Sass, but we're doing this because we're proactively moving away from Sass to match CSS web standards.\n\n## Octicons\n\nWe test for the proper use of the [Octicons helper](https://github.com/primer/octicons/tree/master/lib/octicons_helper#readme) in our templates and make sure that the symbols used are valid octicons.\n\n## IE rule limit\n\nWe check that our compiled CSS assets don't contain more selectors than the [IE CSS selector limits](https://blogs.msdn.microsoft.com/ieinternals/2011/05/14/stylesheet-limits-in-internet-explorer/).\n"
  },
  "tools/local-primer": {
    "title": "Local development",
    "path": "tools/local-primer",
    "content": "\nWhen you are working with the `github/github` codebase, you can link Primer modules with your local development environment using the Primerize script. This will allow you to make changes to primer and see them reflected on `github.localhost` without the overhead of pulling in alpha releases of a package.\n\n## Prerequisites\n\n1. Working with `github/github` on the latest codebase.\n2. Cloned down latest version of [primer/primer](https://github.com/primer/primer).\n3. The `github/github` folder and the `primer/primer` folder must share the same parent folder.\n\n**Example:**\n```\n~/codefolder/\n├── github\n└── primer\n```\n\n## Linking to your local primer repository\n\nIn your terminal start the server with the environment variable `LOCAL_PRIMER=1`. For example.\n\n```\n> LOCAL_PRIMER=1 script/server\n```\n\nWhen the variable is present, the script will check for linked local Primer packages. If it's not linked, then it will proceed to link the primer packages in `../primer` to your GitHub application. When the server starts with successfully linked packages, you will see a clear message.\n\n**Example output:**\n\n```\n❯ LOCAL_PRIMER=1 script/server\n--------------------------------------------------------------------------------\n Development Primer is linked to the local Primer repository found here\n /Users/usera/github/primer\n--------------------------------------------------------------------------------\n14:09:14 web.1        | started with pid 36981\n14:09:14 assets.1     | started with pid 36982\n14:09:14 longpoll.1   | started with pid 36984\n14:09:14 git-daemon.1 | started with pid 36986\n14:09:14 gitauth.1    | started with pid 36988\n14:09:14 codeload.1   | started with pid 36991\n14:09:14 babeld.1     | started with pid 36996\n```\n\n## Resetting github/github development assets\n\nTo turn off Primerize, rerun `script/server` without the `LOCAL_PRIMER` flag. The script checks if you are still linked and restores everything to normal.\n\n**Example output:**\n\n```\n❯ script/server\n--------------------------------------------------------------------------------\n Development Primer is linked to the local Primer repository found here\n /Users/usera/github/primer\n--------------------------------------------------------------------------------\nTurning off linked primer\nextracting primer-alerts@1.5.5.tgz\nextracting primer-avatars@1.5.2.tgz\nextracting primer-base@1.7.0.tgz\nextracting primer-blankslate@1.4.5.tgz\nextracting primer-box@2.5.5.tgz\nextracting primer-branch-name@1.0.3.tgz\nextracting primer-breadcrumb@1.5.1.tgz\nextracting primer-buttons@2.5.3.tgz\nextracting primer-core@6.8.0.tgz\nextracting primer-forms@2.1.0.tgz\nextracting primer-labels@1.5.5.tgz\nextracting primer-layout@1.4.5.tgz\nextracting primer-markdown@3.7.5.tgz\nextracting primer-marketing-buttons@1.0.4.tgz\nextracting primer-marketing-support@1.5.0.tgz\nextracting primer-marketing-type@1.4.5.tgz\nextracting primer-marketing-utilities@1.6.1.tgz\nextracting primer-marketing@6.2.0.tgz\nextracting primer-navigation@1.5.3.tgz\nextracting primer-page-headers@1.4.5.tgz\nextracting primer-page-sections@1.4.5.tgz\nextracting primer-popover@0.0.6.tgz\nextracting primer-product@5.6.2.tgz\nextracting primer-subhead@1.0.3.tgz\nextracting primer-support@4.5.2.tgz\nextracting primer-table-object@1.4.5.tgz\nextracting primer-tables@1.4.5.tgz\nextracting primer-tooltips@1.5.3.tgz\nextracting primer-truncate@1.4.5.tgz\nextracting primer-utilities@4.8.5.tgz\nextracting primer@10.4.0.tgz\nregenerating node binstubs\n14:13:17 web.1        | started with pid 38585\n14:13:17 assets.1     | started with pid 38586\n```\n"
  },
  "tools/sketch-templates": {
    "title": "Sketch templates",
    "path": "tools/sketch-templates",
    "content": "\nWe often use Sketch for mocking up designs before coding them. To make this process faster and to keep our designs consistent, we have created UI kits that contain many of our commonly used styles.\n\n## Product UI Kits\n\n[The Product UI Kit](https://github.com/github/design/blob/master/resources/sketch/github-ui-kit.sketch) is a collection of our core GitHub UI styles and components suitable for building mockups. It also includes a starter page template with a site and repo header.\n\nDon't waste time manually updating the Octicons artboard when icons are added, removed, or changed. See the [Octicons Sketch plugin](https://github.com/github/design/tree/master/resources/sketch/octicons-plugin) directory for a way to automate those updates.\n\n![thumbnail of sketch UI kit](https://cloud.githubusercontent.com/assets/98681/9478261/7b4bd916-4b2b-11e5-991f-3bbef3f4c9a6.png)\n\n## Email templates\n\n[This email templates](https://github.com/github/design/blob/master/resources/sketch/email-templates.sketch) are a collection of current GitHub email templates which serve as a reference for new email designs.\n\n![thumbnail of sketch email templates](https://cloud.githubusercontent.com/assets/1319791/22992477/cb5fcb5e-f38d-11e6-9549-449018f31153.png)\n"
  },
  "tools/prototyping": {
    "title": "Prototyping",
    "path": "tools/prototyping",
    "content": "\nYou're welcome to use whatever prototyping tool suits your needs, however we've set up some options that will help you get started quickly.\n\nThe power of prototyping in code is that you can create clickable mocks that can be shared via a URL. This can be useful for exploring designs and interactions or for user research sessions. Prototypes can be throw-away, or part of your process for building out new features since you can work with the same CSS we use in production.\n\n## Simple HTML prototype with Primer\nCopy the code below and paste it in a HTML file. The CDN link is always linked to the most up to date version of Primer and includes all of the modules in the core, product, and marketing packages.\n\nThis method requires no dev environment set up and is useful for when you want to create simple prototypes using Primer.\n\n```\n<!DOCTYPE html>\n<html lang=\"en\">\n  <HEAD>\n    <title> </title>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <link rel=\"stylesheet\" href=\"https://unpkg.com/primer/build/build.css\">\n  </HEAD>\n  <body>\n\n  </body>\n</html>\n```\n\n## Jekyll prototyping with GitHub CSS and JavaScript\nThe [Jekyll](http://jekyllrb.com) based prototyping tool pulls in all of GitHub's CSS, which includes all the Primer modules as well as custom CSS modules. It includes GitHub JavaScript and octicons too.\n\nThis tool is useful for when you want to build a more complex prototype with multiple pages, interactions and flows, or need to work with GitHub CSS. You can take advantage of everything you get with [Jekyll](http://jekyllrb.com/docs/home/), such as layout templates, includes, and collections.\n\nThe [prototype](https://ghe.io/github/prototype) tool lives on our enterprise install. All you need to do is fork the repository to your account and [follow the instructions](https://ghe.io/github/prototype#basics) for publishing.\n\nHaving the repository on our enterprise install has the added benefit of making the mocks password protected, but they don't have to be. If you want to publish something publicly you can change configuration and publish to github.com.\n"
  },
  "tools/testing": {
    "title": "Testing resources",
    "path": "tools/testing",
    "content": "\nAt GitHub we use a staging environment called review-lab for testing with production data. Deploying a branch to [review-lab](https://github.com/github/github/blob/master/docs/deployment.md#test-in-lab-environments) for testing is one of the best ways to test your work with real production data prior to an actual production deployment.\n\nTo make testing on review-lab for extended periods of time easier, you can use the [Redirector](https://chrome.google.com/webstore/detail/redirector/pajiegeliagebegjdhebejdlknciafen) extension for Chrome to redirect all GitHub.com traffic to your review-lab deploy URL.\n\n## How to use it\n\n1. Install the [extension](https://chrome.google.com/webstore/detail/redirector/pajiegeliagebegjdhebejdlknciafen)\n2. Open the extension options panel from the icon in Chrome\n3. In the \"From\" field, enter: `https:\\/\\/github\\.com\\/?(.+)?`\n4. In the \"To\" field, enter: `https://branchname.review-lab.github.com/$1` where `branchname` is the name of your branch.\n\n## Tips\n\n- You'll need to remove your rule or simply disable the extension when you want to stop redirecting to your branch.\n- If you're trying to reach GitHub.com or your review-lab URL but are getting a \"This page isn't working\" message in your browser, that means your review-lab deploy has gone stale and needs to be redeployed.\n"
  },
  "utilities/borders": {
    "title": "Borders",
    "path": "utilities/borders",
    "content": "\nUtilities for borders, border radius, and box shadows.\n\n{:toc}\n\n## Default border\n\nThe default border utility applies a solid, 1px border, with a default gray color.\n\n```html\n<div class=\"border\">\n  .border\n</div>\n```\n\nBorders can be applied to a specific edge or to the Y axis.\n\n```html\n<div class=\"d-flex mb-3\">\n  <div class=\"border-left col-3\">\n    .border-left\n  </div>\n  <div class=\"border-top col-3\">\n    .border-top\n  </div>\n  <div class=\"border-bottom col-3\">\n    .border-bottom\n  </div>\n  <div class=\"border-right col-3\">\n    .border-right\n  </div>\n</div>\n<div class=\"border-y\">\n  .border-y\n</div>\n```\n\nRemove borders from all sides or a single side with `.border-0`, `.border-top-0`, `.border-right-0`, `.border-bottom-0`, `.border-left-0`.\n\n```html\n<div class=\"Box border-top-0\">\n  .border-top-0\n</div>\n```\n\n## Border colors\n\nOverride default border colors with blue, green, red, purple, yellow, and gray border color utilities.\n\n```html\n<div class=\"border border-blue mb-2\">\n  .border-blue\n</div>\n<div class=\"border border-blue-light mb-2\">\n  .border-blue-light\n</div>\n<div class=\"border border-green mb-2\">\n  .border-green\n</div>\n<div class=\"border border-green-light mb-2\">\n  .border-green-light\n</div>\n<div class=\"border border-red mb-2\">\n  .border-red\n</div>\n<div class=\"border border-red-light mb-2\">\n  .border-red-light\n</div>\n<div class=\"border border-purple mb-2\">\n  .border-purple\n</div>\n<div class=\"border border-yellow mb-2\">\n  .border-yellow\n</div>\n<div class=\"border border-gray-light mb-2\">\n  .border-gray-light\n</div>\n<div class=\"border border-gray-dark mb-2\">\n  .border-gray-dark\n</div>\n```\n\n### Borders with alpha transparency\n\nUse `border-black-fade` to add an rgba black border with an alpha transparency of `0.15`. This is useful when you want a border that tints the background color. The shade of black we use matches the hue of the GitHub dark header and our gray color palette: `rgba(27,31,35, 0.15)`.\n\n```html\n<div class=\"border border-black-fade bg-blue-light p-2 mb-2\">\n  .border-black-fade .bg-blue-light\n</div>\n<div class=\"border border-black-fade bg-red-light p-2 mb-2\">\n  .border-black-fade .bg-red-light\n</div>\n```\n\nOn dark backgrounds use `border-white-fade` instead. It adds an rgba white border with an alpha transparency of `0.15`.\n\n```html\n<div class=\"bg-gray-dark text-white p-3\">\n  <div class=\"border border-white-fade p-2\">\n    .border-white-fade\n  </div>\n</div>\n```\n\nUse `.border-white-fade-xx` to add a white border with various levels of alpha transparency.\n\n```html\n<div class=\"bg-gray-dark text-white p-3 mb-3\">\n  <div class=\"border border-white-fade-15 p-2 mb-2\">\n    .border-white-fade-15\n  </div>\n  <div class=\"border border-white-fade-30 p-2 mb-2\">\n    .border-white-fade-30\n  </div>\n  <div class=\"border border-white-fade-50 p-2 mb-2\">\n    .border-white-fade-50\n  </div>\n  <div class=\"border border-white-fade-70 p-2 mb-2\">\n    .border-white-fade-70\n  </div>\n  <div class=\"border border-white-fade-85 p-2 mb-2\">\n    .border-white-fade-85\n  </div>\n</div>\n<div class=\"bg-blue text-white p-3\">\n  <div class=\"border border-white-fade-15 p-2 mb-2\">\n    .border-white-fade-15\n  </div>\n  <div class=\"border border-white-fade-30 p-2 mb-2\">\n    .border-white-fade-30\n  </div>\n  <div class=\"border border-white-fade-50 p-2 mb-2\">\n    .border-white-fade-50\n  </div>\n  <div class=\"border border-white-fade-70 p-2 mb-2\">\n    .border-white-fade-70\n  </div>\n  <div class=\"border border-white-fade-85 p-2 mb-2\">\n    .border-white-fade-85\n  </div>\n</div>\n```\n\n## Border style\n\nUse `border-dashed` to give an element a dashed border.\n\n```html\n<div class=\"border border-dashed p-2\">\n  .border-dashed\n</div>\n```\n\n## Rounded corners\n\nUse the following utilities to add or remove rounded corners: `rounded-0` removes rounded corners, `rounded-1` applies a border radius of 3px, `rounded-2` applies a border radius of 6px. `.circle` applies a border radius of 50%, which turns square elements into perfect circles.\n\n```html\n<div class=\"Box rounded-0 mb-2\">\n  .rounded-0\n</div>\n<div class=\"border rounded-1 mb-2\">\n  .rounded-1\n</div>\n<div class=\"border rounded-2 mb-2\">\n  .rounded-2\n</div>\n<div class=\"border circle p-3\" style=\"width: 100px; height: 100px;\">\n  .circle\n</div>\n```\n\nYou can also add rounded corners to each edge (top, right, bottom, left) with the following utilities:\n\n```html\n<div class=\"border rounded-top-1 mb-2\">\n  .rounded-top-1\n</div>\n<div class=\"border rounded-right-1 mb-2\">\n  .rounded-right-1\n</div>\n<div class=\"border rounded-bottom-1 mb-2\">\n  .rounded-bottom-1\n</div>\n<div class=\"border rounded-left-1 mb-2\">\n  .rounded-left-1\n</div>\n```\n\n## Responsive borders\n\nTop, right, bottom, and left border utilities are can be used responsively to add or remove borders to an element at different screensizes.\n\n```html\n<div class=\"border-top border-sm-right border-md-bottom border-lg-top-0\">\n  .border-top-0\n</div>\n```\n"
  },
  "utilities/animations": {
    "title": "Animations",
    "path": "utilities/animations",
    "content": "\nAnimations are reusable animation classes that you can use to emphasize an element. All of these animations will animate if you toggle their visibility using the \"Toggle\" button.\n\n{:toc}\n\n## Fade In\n\nThe `.anim-fade-in` class is used to fade in an element on the page. This will run once when the element is revealed.\n\n```erb\n<span class=\"anim-fade-in\"><%= octicon(\"mark-github\", :height => 32, :class => \"v-align-middle mr-2\") %> Hello from GitHub!</span>\n```\n\n## Fade Out\n\nThe `.anim-fade-out` class is used to fade out an element on the page. This will run once when the element is revealed.\n\n```erb\n<span class=\"anim-fade-out\"><%= octicon(\"mark-github\", :height => 32, :class => \"v-align-middle mr-2\") %> Hello from GitHub!</span>\n```\n\n## Fade Up\n\nThe `.anim-fade-up` class is used to reveal an element on the page by sliding it up from below the fold. You should use this in a container with `overflow: hidden;` or on the bottom of the page.\n\n```erb\n<div class=\"anim-fade-up\"><%= octicon(\"mark-github\", :height => 32, :class => \"v-align-middle mr-2\") %> Hello from GitHub!</div>\n```\n\n## Fade Down\n\nThe `.anim-fade-down` class is used to slide an element down hiding it. You should use this in a container with `overflow: hidden;` or on the bottom of the page.\n\n```erb\n<div class=\"anim-fade-down\"><%= octicon(\"mark-github\", :height => 32, :class => \"v-align-middle mr-2\") %> Hello from GitHub!</div>\n```\n\n## Scale In\n\nThe `.anim-scale-in` class will scale the element in. This is useful on menus when you want them to appear more friendly.\n\n```erb\n<div class=\"anim-scale-in bg-gray-dark text-white p-2\"><%= octicon(\"mark-github\") %></div>\n```\n\n## Grow X\n\nThe `.anim-grow-x` class will grow an element width from 0-:100: real quick.\n\n```html\n<div class=\"anim-grow-x py-2 bg-green\"></div>\n```\n\n## Pulse\n\nThe `.anim-pulse` class will pulse an element infinitely.\n\n```erb\n<%= octicon(\"mark-github\", :class => \"anim-pulse\") %>\n```\n\n## Hover animation\n\nThe `.hover-grow` class will increase the scale of the element upon hover.\n\n```erb\n<div class=\"Box hover-grow m-3 p-4\">\n  <%= octicon(\"mark-github\", :height => 32) %>\n</div>\n```\n"
  },
  "utilities/box-shadow": {
    "title": "Box shadow",
    "path": "utilities/box-shadow",
    "content": "\nBox shadows are used to make content appear elevated. They are typically applied to containers of content that users need to pay attention to or content that appears on top of (overlapping) other elements on the page (like a pop-over or modal).\n\n{:toc}\n\n## Default\n\nDefault shadows are mainly used on things that need to appear slightly elevated, like pricing cards or UI elements containing important information.\n\n```html\n<div class=\"box-shadow p-3\">\n  .box-shadow\n</div>\n```\n\nThese types of shadows are typically applied to elements with borders, such as the [Box component](/css/components/box).\n\n```html\n<div class=\"col-5\">\n  <div class=\"Box box-shadow\">\n    <div class=\"Box-row\">\n      <h3 class=\"m-0\">Organization</h3>\n    </div>\n    <div class=\"Box-row\">\n      <p class=\"mb-0 text-gray\">\n        Taxidermy live-edge mixtape, keytar tumeric locavore meh selvage deep v letterpress vexillologist lo-fi tousled church-key thundercats. Brooklyn bicycle rights tousled, marfa actually.\n      </p>\n    </div>\n    <div class=\"Box-row\">\n      <button type=\"button\" name=\"Create an organization\" class=\"btn btn-primary btn-block\">Create an organization</button>\n    </div>\n  </div>\n</div>\n```\n\n## Medium\n\nMedium box shadows are more diffused and slightly larger than small box shadows.\n\n```html\n<div class=\"box-shadow-medium p-3\">\n  .box-shadow-medium\n</div>\n```\n\nMedium box shadows are typically used on editorialized content that needs to appear elevated. Most of the time, the elements using this level of shadow will be clickable.\n\n```erb\n<div class=\"col-6\">\n  <a class=\"d-block box-shadow-medium px-3 pt-4 pb-6 position-relative rounded-1 overflow-hidden no-underline\" href=\"#\">\n    <div class=\"bg-blue position-absolute top-0 left-0 py-1 width-full\"></div>\n    <h3 class=\"text-gray-dark\">Serverless architecture</h3>\n    <p class=\"text-gray\">\n      Build powerful, event-driven, serverless architectures with these open-source libraries and frameworks.\n    </p>\n    <ul class=\"position-absolute bottom-0 pb-3 text-small text-gray list-style-none \">\n      <li class=\"d-inline-block mr-1\"><%= octicon \"repo\", :class => \"mr-1\" %>12 Repositories</li>\n      <li class=\"d-inline-block\"><%= octicon \"code\", :class => \"mr-1\" %>5 Languages</li>\n    </ul>\n  </a>\n</div>\n```\n\n## Large\n\nLarge box shadows are very diffused and used sparingly in the product UI.\n\n```html\n<div class=\"box-shadow-large p-3\">\n  .box-shadow-large\n</div>\n```\n\nThese shadows are used for marketing content, UI screenshots, and content that appears on top of other page elements.\n\n```html\n<div class=\"box-shadow-large rounded-2 overflow-hidden\">\n  <img src=\"https://github.com/nasa.png\" class=\"img-responsive\" alt=\"NASA is on GitHub\">\n</div>\n```\n\n## Extra Large\n\nExtra large box shadows are even more diffused.\n\n```html\n<div class=\"box-shadow-extra-large p-3\">\n  .box-shadow-extra-large\n</div>\n```\n\nThese shadows are used for marketing content and content that appears on top of other page elements.\n\n## Remove a box shadow\n\nAdditionally there is a `box-shadow-none` class that removes `box-shadow`:\n\n```html\n<div class=\"box-shadow-large box-shadow-none p-3\">\n  .box-shadow-none\n</div>\n```\n"
  },
  "utilities/details": {
    "title": "Details",
    "path": "utilities/details",
    "content": "\nDetails classes are created to enhance the native behaviors of `<details>`.\n\n{:toc}\n\n## Fullscreen click area\n\nUse `.details-overlay` to expand the click area of `<summary>` to cover the full screen, so user can click anywhere on a page to close `<details>`.\n\n```html\n<details class=\"details-overlay\">\n  <summary class=\"btn\">More</summary>\n  <div class=\"position-relative bg-white p-3 border\" style=\"z-index: 100\">Hidden text</div>\n</details>\n```\n\n## Darkened fullscreen click area\n\nUse `.details-overlay-dark` darken the click area overlay. Useful for modals.\n\n```html\n<details class=\"details-overlay details-overlay-dark\">\n  <summary class=\"btn\">More</summary>\n  <div class=\"position-relative bg-white p-3 border\" style=\"z-index: 100\">Hidden text</div>\n</details>\n```\n"
  },
  "utilities/index": {
    "title": "Utilities",
    "path": "utilities/index",
    "content": "\nUtilities provide the building blocks for layout and handle a range common use cases that help us avoid writing custom styles. When we need to add some margin or padding, rather than adding a new selector specific to that use case, we can use utilities. This helps us reduce the number of unique property-value pairs, and helps us keep more consistent styles across the site.\n\n* Utilities should do one job well and one job only, are immutable, and on occasion are an acceptable approach to overriding component styles.\n* Utility class-names should be transparent and clearly describe the job they do.\n"
  },
  "utilities/margin": {
    "title": "Margin",
    "path": "utilities/margin",
    "content": "\nMargin utilities are based on a global [spacing scale](/css/support/spacing) which helps keep horizontal and vertical spacing consistent. These utilities help us reduce the amount of custom CSS that share the same properties, and allows to achieve many different page layouts using the same styles.\n\n{:toc}\n\n## Naming convention\n\nSince margin utilities have many variations and will be used in many places, we use a shorthand naming convention to help keep class names succinct.\n\n\n| Shorthand | Description |\n| --- | --- |\n| m | margin |\n| t | top |\n| r | right |\n| b | bottom |\n| l | left |\n| x | horizontal, left & right |\n| y | vertical, top & bottom |\n| 0 | 0 |\n| 1 | 4px |\n| 2 | 8px |\n| 3 | 16px |\n| 4 | 24px |\n| 5 | 32px |\n| 6 | 40px |\n\n_**Note:** The blue in the examples represents the element, and the orange represents the margin_\n\n## Uniform margins\n\nUse uniform spacing utilities to apply equal margin to all sides of an element. These utilities can change or override default margins, and can be used with a spacing scale from 0-6.\n\n```html\n<div class=\"margin-orange d-inline-block\">\n  <div class=\"d-inline-block block-blue m-0\">.m-0</div>\n</div>\n<div class=\"margin-orange d-inline-block\">\n  <div class=\"d-inline-block block-blue m-1\">.m-1</div>\n</div>\n<div class=\"margin-orange d-inline-block\">\n  <div class=\"d-inline-block block-blue m-2\">.m-2</div>\n</div>\n<div class=\"margin-orange d-inline-block\">\n  <div class=\"d-inline-block block-blue m-3\">.m-3</div>\n</div>\n<div class=\"margin-orange d-inline-block\">\n  <div class=\"d-inline-block block-blue m-4\">.m-4</div>\n</div>\n<div class=\"margin-orange d-inline-block\">\n  <div class=\"d-inline-block block-blue m-5\">.m-5</div>\n</div>\n<div class=\"margin-orange d-inline-block\">\n  <div class=\"d-inline-block block-blue m-6\">.m-6</div>\n</div>\n```\n\n## Directional margins\n\nUse directional utilities to apply margin to an individual side, or the X and Y axis of an element. Directional utilities can change or override default margins, and can be used with a spacing scale of 0-6.\n\n```html\n<div class=\"margin-orange d-inline-block\">\n  <div class=\"d-inline-block block-blue mt-3\">.mt-3</div>\n</div>\n<div class=\"margin-orange d-inline-block\">\n  <div class=\"d-inline-block block-blue mr-3\">.mr-3</div>\n</div>\n<div class=\"margin-orange d-inline-block\">\n  <div class=\"d-inline-block block-blue mb-3\">.mb-3</div>\n</div>\n<div class=\"margin-orange d-inline-block\">\n  <div class=\"d-inline-block block-blue ml-3\">.ml-3</div>\n</div>\n<div class=\"margin-orange d-inline-block\">\n  <div class=\"d-inline-block block-blue my-3\">.my-3</div>\n</div>\n<div class=\"margin-orange d-inline-block\">\n  <div class=\"d-inline-block block-blue mx-3\">.mx-3</div>\n</div>\n```\n\n## Center elements\n\nUse `mx-auto`to center block elements with a set width.\n\n```html\n<div class=\"margin-orange\">\n  <div class=\"block-blue mx-auto text-center\" style=\"width: 5rem;\">.mx-auto</div>\n</div>\n```\n\n## Reset margins\nReset margins built into typography elements or other components with `m-0`, `mt-0`, `mr-0`, `mb-0`, `ml-0`, `mx-0`, and `my-0`.\n\n```html\n<p class=\"mb-0 block-blue\">No bottom margin on this paragraph.</p>\n```\n\n## Responsive margins\n\nAll margin utilities, except `mx-auto`, can be adjusted per [breakpoint](/css/objects/grid#breakpoints) using the following formula: `m[direction]-[breakpoint]-[spacer]`. Each responsive style is applied to the specified breakpoint and up.\n\n```html\n<div class=\"d-inline-block margin-orange\">\n  <div class=\"mx-sm-2 mx-lg-4 d-inline-block block-blue\">\n    .mx-sm-2 .mx-lg-4\n  </div>\n</div>\n```\n\n## Negative margins\n\nYou can add negative margins to the top, right, bottom, or left of an item by adding a negative margin utility. The formula for this is: `m[direction]-n[spacer]`. This also works responsively, with the following formula: `m[direction]-[breakpoint]-n[spacer]`.\n\n```html\n<div class=\"d-inline-block margin-orange p-3\">\n  <div class=\"d-inline-block block-blue mt-n4 mr-lg-n4\">\n    .mt-n4 .mr-lg-n6\n  </div>\n</div>\n```\n"
  },
  "utilities/marketing-borders": {
    "title": "Marketing Borders",
    "path": "utilities/marketing-borders",
    "content": "\nThe `.border-white-fade` styles are now part of [core border utilities](/css/utilities/borders#border-colors).\n"
  },
  "utilities/marketing-filters": {
    "title": "Marketing Filters",
    "path": "utilities/marketing-filters",
    "content": "\nFilter utility classes can be applied to divs or images to apply visual effects.\n\n<div class=\"flash flash-warn\">\n  Note: CSS filters are <a href=\"http://caniuse.com/#feat=css-filters\">not supported by IE</a>\n</div>\n\n## Grayscale\n\nApplying `.grayscale` to an element will remove all of its colors, and make it render in black and white.\n\n```html\n<img src=\"https://github.com/probot.png\" class=\"img-responsive grayscale\" alt=\"\">\n```\n"
  },
  "utilities/marketing-layout": {
    "title": "Marketing Layout",
    "path": "utilities/marketing-layout",
    "content": "\nMarketing layout utilities build on top of [primer-core utilities](/css/utilities/layout#position), adding the option of responsive positioning.\n\n{:toc}\n\n## Position elements with spacing utilities\n\nPosition elements from all four element edges (`top`, `right`, `bottom`, and `left`) using any spacing utility from the global spacing scale and the marketing spacing scale (from `$spacer-1` to `$spacer-12`), including negative and 0 values.\n\nUse these with `.position-absolute` to position decorative assets and shapes on marketing sites.\n\nIn an effort to reduce the size of our CSS, responsive breakpoints are only supported for `md` and `lg` breakpoints. **There is no support for `sm` and `xl` breakpoints.**\n\n```html\n<div class=\"position-relative p-6 bg-gray\">\n  <div class=\"border bg-white position-absolute top-2\">.top-2</div>\n  <div class=\"border bg-white position-absolute position-lg-static right-md-4\">.right-md-4</div>\n  <div class=\"border bg-white position-lg-absolute left-lg-1\">.left-lg-1</div>\n</div>\n```\n\n## Negative offset columns\n\nUsing column offset classes can pull a div over X number of columns to the left. Negative offsets are available in [spacings from 1](../support/spacing/#spacing-scale) [to 7](../support/marketing-variables/).\n\n```html\n<div class=\"clearfix\">\n  <div class=\"offset-n1 col-3 border p-3\">.offset-n1</div>\n  <div class=\"offset-n2 col-3 border p-3\">.offset-n2</div>\n</div>\n```\n"
  },
  "utilities/marketing-margin": {
    "title": "Marketing Margin",
    "path": "utilities/marketing-margin",
    "content": "\nMarketing margin utilities extend [core margin utilities](/css/support/spacing) across the y-axis only. The [marketing scale](/css/support/marketing-variables#extended-spacing-scale) starts from spacer 7 up to 12, and steps first by `8px` for spacer 7 and continues in increments of `16px` for spacer 8 to 12.\n\n\n## Y-axis margin utilities\n\nUse marketing margin utilities to apply margin to top, bottom, or both y-axis of an element. These utilities can change or override default margins, and can be used with a spacing scale of 7-12.\n\n```html\n<div class=\"margin-orange d-inline-block\">\n  <div class=\"d-inline-block block-blue mt-7\">.mt-7</div>\n</div>\n<div class=\"margin-orange d-inline-block\">\n  <div class=\"d-inline-block block-blue mb-7\">.mb-7</div>\n</div>\n<div class=\"margin-orange d-inline-block\">\n  <div class=\"d-inline-block block-blue my-7\">.my-7</div>\n</div>\n```\n\n## Responsive y-axis margin utilities\n\nAll marketing margin utilities can be adjusted per [breakpoint](/css/objects/grid#breakpoints) using the following formula: `m[y-direction]-[breakpoint]-[spacer]`. Each responsive style is applied to the specified breakpoint and up.\n\n```html\n<div class=\"d-inline-block margin-orange\">\n  <div class=\"my-sm-7 mb-lg-9 d-inline-block block-blue\">\n    .my-sm-7 .mb-lg-9\n  </div>\n</div>\n```\n"
  },
  "utilities/marketing-type": {
    "title": "Marketing Typography",
    "path": "utilities/marketing-type",
    "content": "\n\nThe typography for our marketing pages differs slightly from what is in Primer's core--it is responsive, on a slightly different scale, and headlines are in a different font (Roboto).\n\n\n## Heading Utilities\n\nUse `.h000-mktg` – `.h6-mktg` to change an element's font, size, and weight on marketing pages.\n\n```html title=\"Heading Utilities\"\n\n<p class=\"h000-mktg\">Heading 000</p>\n<p class=\"h00-mktg\">Heading 00</p>\n<p class=\"h0-mktg\">Heading 0</p>\n<p class=\"h1-mktg\">Heading 1</p>\n<p class=\"h2-mktg\">Heading 2</p>\n<p class=\"h3-mktg\">Heading 3</p>\n<p class=\"h4-mktg\">Heading 4</p>\n<p class=\"h5-mktg\">Heading 5</p>\n<p class=\"h6-mktg\">Heading 6</p>\n\n```\n\n## Typographic Utilities\n\nThese utilities are meant to be used in addition to Primer's core utilities.\n\n```html title=\"Typographic Utilities\"\n\n<p class=\"lead-mktg text-gray\">I'm a lead paragraph. Bacon ipsum dolor amet tri-tip chicken kielbasa, cow swine beef corned beef ground round prosciutto hamburger porchetta sausage alcatra tail.</p>\n\n<p class=\"pullquote\">I'm a pullquote. Someone said these words in real life, and now they're on the internet</p>\n\n```\n\n"
  },
  "utilities/marketing-padding": {
    "title": "Marketing Padding",
    "path": "utilities/marketing-padding",
    "content": "\nMarketing padding utilities extend [core margin utilities](/css/utilities/margin) across the x and y axis. The [marketing scale](/css/support/marketing-variables#extended-spacing-scale) starts from spacer 7 up to 12, and steps first by `8px` for spacer 7 and continues in increments of `16px` for spacer 8 to 12.\n\n## Padding utilities\n\nUse marketing padding utilities to apply padding to top, right, bottom, left, x-axis, or y axis of an element. These utilities can change or override default padding, and can be used with a spacing scale of 7-12.\n\n```html\n<div class=\"margin-orange d-inline-block\">\n  <div class=\"d-inline-block block-blue pt-7\">.pt-7</div>\n</div>\n<div class=\"margin-orange d-inline-block\">\n  <div class=\"d-inline-block block-blue pr-7\">.pr-7</div>\n</div>\n<div class=\"margin-orange d-inline-block\">\n  <div class=\"d-inline-block block-blue pb-7\">.pb-7</div>\n</div>\n<div class=\"margin-orange d-inline-block\">\n  <div class=\"d-inline-block block-blue pl-7\">.pl-7</div>\n</div>\n<div class=\"margin-orange d-inline-block\">\n  <div class=\"d-inline-block block-blue px-7\">.px-7</div>\n</div>\n<div class=\"margin-orange d-inline-block\">\n  <div class=\"d-inline-block block-blue py-7\">.py-7</div>\n</div>\n```\n\n## Responsive padding utilities\n\nAll marketing padding utilities can be adjusted per [breakpoint](/css/objects/grid#breakpoints) using the following formula: `p[y-direction]-[breakpoint]-[spacer]`. Each responsive style is applied to the specified breakpoint and up.\n\n```html\n<div class=\"d-inline-block margin-orange\">\n  <div class=\"py-sm-7 pb-lg-9 d-inline-block block-blue\">\n    .py-sm-7 .pb-lg-9\n  </div>\n</div>\n```\n"
  },
  "utilities/typography": {
    "title": "Typography",
    "path": "utilities/typography",
    "content": "\nType utilities are designed to work in combination with line-height utilities so as to result in more sensible numbers wherever possible. These also exist as [variables](/css/support/typography#typography-variables) that you can use in components or custom CSS.\n\n{:toc}\n\nFont sizes are smaller on mobile and scale up at the `md` [breakpoint](/css/support/breakpoints) to be larger on desktop.\n\n| Scale | Font size: mobile | Font size: desktop | 1.25 line height | 1.5 line height |\n| --- | --- | --- | --- | --- |\n| 00 | 40px | 48px | 60 | 72 |\n| 0 | 32px | 40px | 50 | 60 |\n| 1 | 26px | 32px | 40 | 48 |\n| 2 | 22px | 24px | 30 | 36 |\n| 3 | 18px | 20px | 25 | 30 |\n| 4 | 16px | 16px | 20 | 24 |\n| 5 | 14px | 14px | 17.5 | 21 |\n| 6 | 12px | 12px | 15 | 18 |\n\n\n## Heading utilities\n\nUse `.h1` – `.h6` to change an elements font size and weight to match our heading styles.\n\n```html\n<p class=\"h1\">Pizza 1</p>\n<p class=\"h2\">Pizza 2</p>\n<p class=\"h3\">Pizza 3</p>\n<p class=\"h4\">Pizza 4</p>\n<p class=\"h5\">Pizza 5</p>\n<p class=\"h6\">Pizza 6</p>\n```\n\nThese are particularly useful for changing the visual appearance while keeping the markup semantically correct. Be sure you keep the hierarchy appropriate for the page.\n\n```html\n<h2 class=\"h1\">Looks like a heading 1, semantically a heading 2</h2>\n```\n\n## Type scale utilities\n\nUse `.f1` – `.f6` to change an elements font size while keeping inline with our type scale.\n\n```html\n<p class=\"f1\">Focaccia</p>\n<p class=\"f2\">Focaccia</p>\n<p class=\"f3\">Focaccia</p>\n<p class=\"f4\">Focaccia</p>\n<p class=\"f5\">Focaccia</p>\n<p class=\"f6\">Focaccia</p>\n```\n\nLighter font-weight utilities are available in a limited range. Lighter font-weights reduce the legibility of text, particularly at small font sizes, so the scale only goes down to `f3` at 20px. The larger sizes`f0` and `f00` allow for lighter and larger type that is in keeping with our marketing styles.\n\n```html\n<h1 class=\"f00-light\">Potato chips</h1>\n<h1 class=\"f0-light\">Potato chips</h1>\n<h1 class=\"f1-light\">Potato chips</h1>\n<h1 class=\"f2-light\">Potato chips</h1>\n<h1 class=\"f3-light\">Potato chips</h1>\n```\n\n## Line height styles\nChange the line height density with these utilities.\n\n```html\n<p class=\"lh-default\">\n  Bacon ipsum dolor amet tri-tip chicken kielbasa, cow swine beef corned beef ground round prosciutto hamburger porchetta sausage alcatra tail. Jowl chuck biltong flank meatball, beef short ribs. Jowl tenderloin ground round, short loin tri-tip ribeye picanha filet mignon pig chicken kielbasa t-bone fatback. Beef ribs meatball chicken corned beef salami.\n</p>\n<p class=\"lh-condensed\">\n  Bacon ipsum dolor amet tri-tip chicken kielbasa, cow swine beef corned beef ground round prosciutto hamburger porchetta sausage alcatra tail. Jowl chuck biltong flank meatball, beef short ribs. Jowl tenderloin ground round, short loin tri-tip ribeye picanha filet mignon pig chicken kielbasa t-bone fatback. Beef ribs meatball chicken corned beef salami.\n</p>\n<p class=\"lh-condensed-ultra\">\n  Bacon ipsum dolor amet tri-tip chicken kielbasa, cow swine beef corned beef ground round prosciutto hamburger porchetta sausage alcatra tail. Jowl chuck biltong flank meatball, beef short ribs. Jowl tenderloin ground round, short loin tri-tip ribeye picanha filet mignon pig chicken kielbasa t-bone fatback. Beef ribs meatball chicken corned beef salami.\n</p>\n```\n\nThe `lh-0` utility class sets `line-height: 0 !important`, and can be used to remove vertical spacing from elements that inherit line-height but don't contain any text.\n\n## Typographic styles\nChange the font weight, styles, and alignment with these utilities.\n\n```html\n<p class=\"text-normal\">Normal</p>\n<p class=\"text-italic\">Italic</p>\n<p class=\"text-bold\">Bold</p>\n<p class=\"text-uppercase\">Uppercase</p>\n<p class=\"no-wrap\">No wrap</p>\n<p class=\"ws-normal\">Normal whitespace</p>\n<p class=\"wb-break-all\">Line break long lines</p>\n<p class=\"text-underline\">Text underline</p>\n<p class=\"no-underline\">No underline</p>\n<p class=\"text-emphasized\">Emphasized</p>\n<p class=\"text-small\">Small</p>\n<p class=\"lead\">Bacon ipsum dolor amet tri-tip chicken kielbasa, cow swine beef corned beef ground round prosciutto hamburger porchetta sausage alcatra tail.</p>\n<p class=\"text-mono\">Monospace</p>\n<p class=\"user-select-none\">User Select None</p>\n```\n\n## Text alignment\n\n Use text alignment utilities to left align, center, or right align text.\n\n```html\n<p class=\"text-left\">Left align</p>\n<p class=\"text-center\">Center</p>\n<p class=\"text-right\">Right align</p>\n```\n## Responsive text alignment\n\nUse the following formula to make a text alignment utility responsive: `.text-[breakpoint]-[alignment]`\n\n```html\n<p class=\"text-left text-sm-center text-lg-right\">Left in a small viewport, centered in mid-sized viewports, and right aligned in larger viewports</p>\n```\n\n## List styles\n\nRemove bullets from an unordered list or numbers from an ordered list by applying `.list-style-none` to the `<ul>`.\n\n```html\n<ul class=\"list-style-none\">\n  <li>First list item</li>\n  <li>Second list item</li>\n  <li>Third list item</li>\n</ul>\n```\n\n## Text Shadows\n\nText shadows can be used to help readability and to add some depth on colored backgrounds.\n\n```html\n<div class=\"bg-gray-dark p-5\">\n  <h3 class=\"text-white text-shadow-dark\">.text-shadow-dark helps white text stand out on dark or photographic backgrounds</h3>\n</div>\n<div class=\"bg-gray p-5\">\n  <h3 class=\"text-shadow-light\">.text-shadow-light creates an embossed effect for dark text</h3>\n</div>\n```\n"
  },
  "utilities/padding": {
    "title": "Padding",
    "path": "utilities/padding",
    "content": "\nPadding utilities are based on a global [spacing scale](/css/support/spacing) which helps keep horizontal and vertical spacing consistent. These utilities help us reduce the amount of custom CSS that could share the same properties, and allows to achieve many different page layouts using the same styles.\n\n{:toc}\n\n## Shorthand\n\nSince padding utilities have many variations and will be used in many places, we use a shorthand naming convention to help keep class names succinct.\n\n| Shorthand | Description |\n| --- | --- |\n| p | padding |\n| t | top |\n| r | right |\n| b | bottom |\n| l | left |\n| x | horizontal, left & right |\n| y | vertical, top & bottom |\n| 0 | 0 |\n| 1 | 4px |\n| 2 | 8px |\n| 3 | 16px |\n| 4 | 24px |\n| 5 | 32px |\n| 6 | 40px |\n\n_**Note:** The blue in the examples below represents the element, and the green represents the padding._\n\n## Uniform padding\n\nUse uniform spacing utilities to apply equal padding to all sides of an element. These utilities can be used with a spacing scale from 0-6.\n\n```html\n<div class=\"padding-green d-inline-block p-0\">\n  <div class=\"d-inline-block block-blue\">.p-0</div>\n</div>\n<div class=\"padding-green d-inline-block p-1\">\n  <div class=\"d-inline-block block-blue\">.p-1</div>\n</div>\n<div class=\"padding-green d-inline-block p-2\">\n  <div class=\"d-inline-block block-blue\">.p-2</div>\n</div>\n<div class=\"padding-green d-inline-block p-3\">\n  <div class=\"d-inline-block block-blue\">.p-3</div>\n</div>\n<div class=\"padding-green d-inline-block p-4\">\n  <div class=\"d-inline-block block-blue\">.p-4</div>\n</div>\n<div class=\"padding-green d-inline-block p-5\">\n  <div class=\"d-inline-block block-blue\">.p-5</div>\n</div>\n<div class=\"padding-green d-inline-block p-6\">\n  <div class=\"d-inline-block block-blue\">.p-6</div>\n</div>\n```\n\n## Directional padding\n\nUse directional utilities to apply padding to an individual side, or the X and Y axis of an element. Directional utilities can change or override default padding, and can be used with a spacing scale of 0-6.\n\n```html\n<div class=\"padding-green d-inline-block pt-3\">\n  <div class=\"d-inline-block block-blue\">.pt-3</div>\n</div>\n<div class=\"padding-green d-inline-block pr-3\">\n  <div class=\"d-inline-block block-blue\">.pr-3</div>\n</div>\n<div class=\"padding-green d-inline-block pb-3\">\n  <div class=\"d-inline-block block-blue\">.pb-3</div>\n</div>\n<div class=\"padding-green d-inline-block pl-3\">\n  <div class=\"d-inline-block block-blue\">.pl-3</div>\n</div>\n<div class=\"padding-green d-inline-block py-3\">\n  <div class=\"d-inline-block block-blue\">.py-3</div>\n</div>\n<div class=\"padding-green d-inline-block px-3\">\n  <div class=\"d-inline-block block-blue\">.px-3</div>\n</div>\n```\n\n## Responsive padding\n\nAll padding utilities can be adjusted per [breakpoint](/css/support/breakpoints) using the following formula: <br /> `p-[direction]-[breakpoint]-[spacer]`. Each responsive style is applied to the specified breakpoint and up.\n\n```html\n<div class=\"px-sm-2 px-lg-4 d-inline-block padding-green\">\n  <div class=\"d-inline-block block-blue\">\n    .px-sm-2 .px-lg-4\n  </div>\n</div>\n```\n\n## Responsive container padding\n\n`.p-responsive` is a padding class that adds padding on the left and right sides of an element. On small screens, it gives the element padding of `$spacer-3`, on mid-sized screens it gives the element padding of `$spacer-6`, and on large screens, it gives the element padding of `$spacer-3`.\n\nIt is intended to be used with [container styles](/css/objects/grid#containers)\n\n```html\n<div class=\"container-lg p-responsive\">\n  <div class=\"border\">\n    .container-lg .p-responsive\n  </div>\n</div>\n```\n"
  },
  "components/box": {
    "title": "Box",
    "path": "components/box",
    "content": "\n\nThe `.Box` component can be used for something as simple as a rounded corner box, or more complex lists and forms. It includes optional modifiers for padding density and color themes.\n\n{:toc}\n\n## Box\n\nA `.Box` is a container with a a white background, a light gray border, and rounded corners. By default there are no additional styles such as padding, these can be added as needed with utility classes. Other styles and layouts can be achieved with box elements and modifiers shown in the documentation below.\n\n```html\n<div class=\"Box\">\n  This is a box.\n</div>\n```\n\n## Box elements\nBox elements include `Box-header`, `Box-body`, and `Box-footer`. These elements include borders and consistent padding. Optionally, you can include use `Box-title` which applies a bold font-weight the heading.\n\n```html\n<div class=\"Box\">\n  <div class=\"Box-header\">\n    <h3 class=\"Box-title\">\n      Box title\n    </h3>\n  </div>\n  <div class=\"Box-body\">\n    Box body\n  </div>\n  <div class=\"Box-footer\">\n    Box footer\n  </div>\n</div>\n```\n\n### Box row\n\nUse `Box-row` to add rows with borders and maintain the same padding. Box rows have a lighter border to give contrast between the header and footer.\n\n**Note:** Box rows have some reliance on markup structure in order to target the first and last rows, therefore using an unordered list is recommended. See [box row markup structure](#box-row-markup-structure) for more information.\n\n```html\n<div class=\"Box\">\n  <ul>\n    <li class=\"Box-row\">\n      Box row one\n    </li>\n    <li class=\"Box-row\">\n      Box row two\n    </li>\n    <li class=\"Box-row\">\n      Box row three\n    </li>\n    <li class=\"Box-row\">\n      Box row four\n    </li>\n  </ul>\n</div>\n```\n\n\nRows can be used with or without `Box-header`, `Box-footer`, or `Box-body`.\n\n```html\n<div class=\"Box\">\n  <div class=\"Box-header\">\n      Box header\n  </div>\n  <div class=\"Box-body\">\n    <strong>Box body</strong>\n  </div>\n  <ul>\n    <li class=\"Box-row\">\n      Box row one\n    </li>\n    <li class=\"Box-row\">\n      Box row two\n    </li>\n    <li class=\"Box-row\">\n      Box row three\n    </li>\n    <li class=\"Box-row\">\n      Box row four\n    </li>\n  </ul>\n  <div class=\"Box-footer\">\n    Box footer\n  </div>\n</div>\n```\n\n### Box row markup structure\nBox rows have some reliance on markup structure in order to target the first and last rows. Box rows are given a top border that is lighter in color than other box elements so the first row is targeted to apply a darker border color. An inner border-radius is applied to the first and last rows that that row corners don't poke outside the `Box`, this can be particularly noticeable when using a highlight on box rows.\n\nUsing an unordered list is recommended in order to target the first and last rows, however, if you need to use a `<div>` for your rows, you may want to place your rows inside a parent `<div>` so that the first and last rows are styled appropriately.\n\n```html\n<div class=\"Box\">\n  <div class=\"Box-header\">\n    Box header\n  </div>\n  <!-- This wrapping div ensures the first and last rows can be targeted for styling. -->\n  <div>\n    <div class=\"Box-row\">Box row using a div</div>\n    <div class=\"Box-row\">Box row using a div</div>\n  </div>\n</div>\n```\n\n## Box padding density\nYou can changed the padding density of the box component.\n\nUse `Box--condensed` to apply a more condensed line-height and reduce the padding on the Y axis.\n\n```html\n<div class=\"Box Box--condensed\">\n  <div class=\"Box-header\">\n    <h3 class=\"Box-title\">\n      Box title\n    </h3>\n  </div>\n  <div class=\"Box-body\">\n    Box body\n  </div>\n  <ul>\n    <li class=\"Box-row\">\n      Box row one\n    </li>\n    <li class=\"Box-row\">\n      Box row two\n    </li>\n  </ul>\n  <div class=\"Box-footer\">\n    Box footer\n  </div>\n</div>\n```\n\nUse `Box--spacious` to increase padding and increase the title font size.\n\nYou may want to increase the overall font size to work with the larger padding, in this example the default body font size is increased to 16px using the `f4` typography utility.\n\n```html\n<div class=\"Box Box--spacious f4\">\n  <div class=\"Box-header\">\n    <h3 class=\"Box-title\">\n      Box title\n    </h3>\n  </div>\n  <div class=\"Box-body\">\n    Box body\n  </div>\n  <ul>\n    <li class=\"Box-row\">\n      Box row one\n    </li>\n    <li class=\"Box-row\">\n      Box row two\n    </li>\n  </ul>\n  <div class=\"Box-footer\">\n    Box footer\n  </div>\n</div>\n```\n\n## Blue box theme\nUse `Box--blue` to style the box borders and box header in blue.\n\n```html\n<div class=\"Box Box--blue\">\n  <div class=\"Box-header\">\n    Box header\n  </div>\n  <ul>\n    <li class=\"Box-row\">\n      Box row one\n    </li>\n    <li class=\"Box-row\">\n      Box row two\n    </li>\n  </ul>\n  <div class=\"Box-footer\">\n    Box footer\n  </div>\n</div>\n```\n\n## Blue box header theme\n\nUse `Box-header--blue` to add to change the header border and background to blue.\n\n```html\n  <div class=\"Box\">\n    <div class=\"Box-header Box-header--blue\">\n      <h3 class=\"Box-title\">Box with blue header</h3>\n    </div>\n    <div class=\"Box-body\">\n      Box body\n    </div>\n  </div>\n```\n\n## Box danger theme\n\nUse `Box--danger` to apply a red border to the outside of the box. This theme is helpful for communicating destructive actions.\n\n**Note:** `Box-danger` only works with either `Box-row`'s or `Box-body`.\n\n```html\n<div class=\"Box Box--danger\">\n  <div class=\"Box-row\">\n    Row one\n  </div>\n  <div class=\"Box-row\">\n    Row two\n  </div>\n</div>\n```\n\n`Box-danger` is often paired with a red heading. See the [subhead](./subhead) docs for more information.\n\n```html\n<div class=\"Subhead border-bottom-0\">\n  <h2 class=\"Subhead-heading Subhead-heading--danger\">Danger zone</h2>\n</div>\n\n<div class=\"Box Box--danger\">\n  <div class=\"Box-body\">\n    Box body\n  </div>\n</div>\n```\n\n## Row themes\nYou can change the background color for individual rows, or change the color on hover or navigation focus.\n\n\n```html\n<div class=\"Box\">\n  <div class=\"Box-row Box-row--gray\">\n    .Box-row--gray\n  </div>\n  <div class=\"Box-row Box-row--hover-gray\">\n    .Box-row--hover-gray\n  </div>\n  <div class=\"Box-row Box-row--yellow\">\n    .Box-row--yellow\n  </div>\n  <div class=\"Box-row Box-row--hover-blue\">\n    .Box-row--hover-blue\n  </div>\n  <div class=\"Box-row Box-row--blue\">\n    .Box-row--blue\n  </div>\n</div>\n```\n\nUse `Box-row--focus-gray` or `Box-row--focus-blue` when using along-side `navigation-focus` if you want to highlight rows when using keyboard commands.\n\n```html\n<div class=\"Box\">\n  <div class=\"Box-row Box-row--focus-gray navigation-focus\">\n    .Box-row--focus-gray and .navigation-focus\n  </div>\n  <div class=\"Box-row Box-row--focus-gray\">\n    .Box-row--focus-gray\n  </div>\n  <div class=\"Box-row Box-row--focus-blue navigation-focus\">\n    .Box-row--focus-blue and .navigation-focus\n  </div>\n  <div class=\"Box-row Box-row--focus-blue\">\n    .Box-row--focus-blue\n  </div>\n</div>\n```\n\n### Box row unread\nUse `.Box-row-unread` to apply a blue vertical line highlight for indicating a row contains unread items.\n\n```html\n<div class=\"Box\">\n  <div class=\"Box-row\">\n    Box row\n  </div>\n  <div class=\"Box-row Box-row--unread\">\n    Box row unread\n  </div>\n  <div class=\"Box-row\">\n    Box row\n  </div>\n</div>\n```\n\n### Box row link\nUse .`Box-row-link` when you want a link to appear dark gray and blue on hover on desktop, and remain a blue link on mobile. This is useful to indicate links on mobile without having hover styles.\n\n```html\n<div class=\"Box\">\n  <div class=\"Box-row\">\n    <a class=\"Box-row-link\" href=\"#box-row-link\">Box row link</a>\n  </div>\n</div>\n```\n\n## Dashed border\nUse the `border-dashed` utility to apply a dashed border to a box.\n\n```html\n<div class=\"Box border-dashed p-2\">\n  A box with a dashed border\n</div>\n```\n\n## Boxes with flash alerts\nUse `flash-full` for flash alert inside a box to remove the rounded corners. Place the flash alert above the `Box-body` and underneath the `Box-header`.\n\nFlash alerts come in three different colors and can be used with icons and buttons, see the [alert documentation](./alerts) for more information.\n\n```erb\n<div class=\"Box\">\n  <div class=\"Box-header\">\n    Box header\n  </div>\n  <div class=\"flash flash-full\">\n    <button class=\"flash-close js-flash-close\"><%= octicon \"x\" %></button>\n    Flash message with close button.\n  </div>\n  <div class=\"flash flash-full flash-success\">\n    <%= octicon(\"check\") %> Flash success with an icon.\n  </div>\n  <div class=\"flash flash-full flash-warn\">\n    <%= octicon(\"alert\") %> Flash warning with an icon.\n  </div>\n  <div class=\"flash flash-full flash-error\">\n    Flash error inside a Box.\n  </div>\n  <div class=\"Box-body\">\n    Box body\n  </div>\n</div>\n```\n\n## Boxes with icons\nUse `Box-btn-octicon` with `btn-octicon` when you want the icon to maintain the same padding as other box elements. This selector offsets margin to ensure it lines up on the left and right sides of the box so you may need to add padding neighboring elements.\n\n```erb\n<div class=\"Box\">\n  <div class=\"Box-body\">\n    <span class=\"pr-2\">Box body</span>\n    <button href=\"#\" class=\"Box-btn-octicon btn-octicon\"><%= octicon \"pencil\" %></button>\n  </div>\n</div>\n```\n\nIt's common to want to float icons to the far left or right and stop the `Box-title`from wrapping underneath. To do this you'll need to create a media object with utilities. Add `clearfix` to the surrounding div (this could be the header, body, or rows), add `overflow-hidden` to the title (or other text element), and float the icons as desired.\n\n```erb\n<div class=\"Box\">\n  <div class=\"Box-header clearfix\">\n    <button href=\"#\" class=\"Box-btn-octicon btn-octicon float-right\"><%= octicon \"x\" %></button>\n    <h3 class=\"Box-title overflow-hidden pr-3\">A very long title that wraps onto multiple lines without overlapping or wrapping underneath the icon to it's right</h3>\n  </div>\n  <div class=\"Box-body\">\n    Box body\n  </div>\n</div>\n```\n\n```erb\n<div class=\"Box\">\n  <div class=\"Box-row clearfix\">\n    <button href=\"#\" class=\"Box-btn-octicon btn-octicon float-left\"><%= octicon \"check\" %></button>\n    <p class=\"overflow-hidden pl-3\">A very long paragraph that wraps onto multiple lines without overlapping or wrapping underneath the icon to it's left</p>\n  </div>\n</div>\n```\n\n## Box headers with counters\nUse a counter with a background that works against the contrast of the box header. The default counter colors do not stand out well against the header background so we suggest using one of the following styles:\n\nUse `Counter--gray` for a counter with a gray background and dark gray text.\n\n```html\n<div class=\"Box\">\n  <div class=\"Box-header\">\n    <h3 class=\"Box-title\">\n      Box title\n      <span class=\"Counter Counter--gray\">12</span>\n    </h3>\n  </div>\n  <div class=\"Box-body\">\n    Box body\n  </div>\n</div>\n```\n\nUse `Counter--gray-dark` for a counter with a dark gray background and white text.\n\n```html\n<div class=\"Box\">\n  <div class=\"Box-header\">\n    <h3 class=\"Box-title\">\n      Box title\n      <span class=\"Counter Counter--gray-dark\">12</span>\n    </h3>\n  </div>\n  <div class=\"Box-body\">\n    Box body\n  </div>\n</div>\n```\n\n## Form elements and buttons in boxes\nTo achieve different layouts when adding buttons or form elements to boxes we suggest you use utilities to achieve the layout you want. Here's some common examples:\n\nUse [flexbox utilities](/css/utilities/flexbox) to center align items, and avoid using floats by using `flex-auto` to have the text fill the remaining space so that the button rests on the far right.\n\n```html\n<div class=\"Box Box--condensed\">\n  <div class=\"Box-header d-flex flex-items-center\">\n    <h3 class=\"Box-title overflow-hidden flex-auto\">\n      Box title\n    </h3>\n    <button class=\"btn btn-primary btn-sm\">\n      Button\n    </button>\n  </div>\n  <div class=\"Box-body\">\n    Box body\n  </div>\n</div>\n```\n\nA similar approach can be used for buttons with multiple lines of text within a row.\n\n```html\n<div class=\"Box\">\n  <div class=\"Box-row d-flex flex-items-center\">\n    <div class=\"flex-auto\">\n      <strong>Row title</strong>\n      <div class=\"text-small text-gray-light\">\n        Description\n      </div>\n    </div>\n    <button type=\"button\" class=\"btn btn-primary\" name=\"button\">View</button>\n  </div>\n  <div class=\"Box-row d-flex flex-items-center\">\n    <div class=\"flex-auto\">\n      <strong>Row title</strong>\n      <div class=\"text-small text-gray-light\">\n        Description\n      </div>\n    </div>\n    <button type=\"button\" class=\"btn btn-primary\" name=\"button\">View</button>\n  </div>\n  <div class=\"Box-row d-flex flex-items-center\">\n    <div class=\"flex-auto\">\n      <strong>Row title</strong>\n      <div class=\"text-small text-gray-light\">\n        Description\n      </div>\n    </div>\n    <button type=\"button\" class=\"btn btn-primary\" name=\"button\">View</button>\n  </div>\n</div>\n```\nUsing flexbox along with form, button, and link styles, you can create more complex box headers for things like bulk actions and sorting.\n\n```html\n<div class=\"Box\">\n  <div class=\"Box-header d-flex flex-items-center\">\n    <form class=\"flex-auto\">\n      <label>\n        <input class=\"mr-1\" type=\"checkbox\">\n        Check it\n      </label>\n    </form>\n    <button class=\"btn-link select-menu-button muted-link\">\n      Select menu\n    </button>\n  </div>\n  <div class=\"Box-body\">\n    Box body\n  </div>\n</div>\n```\n\nYou can put forms in boxes. Often form submission buttons are aligned to the bottom right of the form which you can do with `text-right` instead of using floats.\n\n```html\n<div class=\"Box\">\n  <div class=\"Box-header\">\n    <h3 class=\"Box-title\">\n      Example form title\n    </h3>\n  </div>\n  <form>\n    <div class=\"Box-body\">\n      <dl class=\"form-group\">\n        <dt><label>Example label</label></dt>\n        <dd><input class=\"form-control\" type=\"text\"></dd>\n      </dl>\n      <div class=\"form-checkbox\">\n        <label>\n          <input type=\"checkbox\" checked=\"checked\">\n          Yes please\n        </label>\n      </div>\n    </div>\n      <div class=\"Box-footer text-right\">\n        <button class=\"btn btn-secondary mr-1\">\n          Cancel\n        </button>\n        <button class=\"btn btn-primary\">\n          Submit\n        </button>\n      </div>\n    </form>\n  </div>\n```\n\nWhen a box is all by itself centered on a page you can use [column widths](/css/objects/grid) to control the width of the box. If needed, break the mold a little and use [typography utilities](/css/utilities/typography) instead of the built in box title styles.\n\n```html\n<div class=\"Box Box--spacious col-6 mx-auto text-center\">\n  <form>\n    <div class=\"Box-body\">\n      <h3 class=\"f1-light\">\n        Example form\n      </h3>\n      <dl class=\"form-group mb-4\">\n        <dt><label>Example label</label></dt>\n        <dd><input class=\"form-control\" type=\"text\"></dd>\n      </dl>\n      <button class=\"btn btn-primary btn-block\">\n        Submit\n      </button>\n    </div>\n  </form>\n</div>\n```\n\nBox patterns can also be made with, and modified with [border utilities](/css/utilities/borders).\n\n"
  },
  "components/forms": {
    "title": "Forms",
    "path": "components/forms",
    "content": "\n\nStyle individual form controls and utilize common layouts.\n\n{:toc}\n\nOverview:\n- We reset several elements' default styles for cross browser consistency and easier manipulation later. This includes `<fieldset>`s, WebKit validation bubbles, and most textual `<input>`s.\n- Specific types of textual `<input>`s are styled automatically, but `.form-control` is available should you need it.\n- Always declare a `type` on your `<button>`s.\n- Form layouts rely on form groups.\n\n#### Kitchen sink\n\nAll our inputs and buttons side-by-side for easy testing of sizing and alignment with one another.\n\n```html\n<p>\n  <button class=\"btn\" type=\"button\">Button</button>\n  <button class=\"btn select-menu-button\" type=\"button\" aria-expanded=\"false\" aria-haspopup=\"true\">\n    Select menu\n  </button>\n  <input class=\"form-control\" type=\"text\" placeholder=\"Standard input\" aria-label=\"Repository description\">\n  <input class=\"form-control input-monospace\" type=\"text\" placeholder=\"Monospace input\" aria-label=\"SHA\">\n  <select class=\"form-select\" aria-label=\"Important decision\">\n    <option>Select</option>\n    <option value=\"option 2\">Option 2</option>\n  </select>\n</p>\n\n<p>\n  <button class=\"btn btn-sm\" type=\"button\">Small button</button>\n  <button class=\"btn btn-sm select-menu-button\" type=\"button\" aria-expanded=\"false\" aria-haspopup=\"true\">\n    Select menu\n  </button>\n  <input class=\"form-control input-sm\" type=\"text\" placeholder=\"Small input\" aria-label=\"Repository description\">\n  <select class=\"form-select select-sm\" aria-label=\"Important decision\">\n    <option>Select</option>\n    <option value=\"option 1\">Option 1</option>\n  </select>\n</p>\n```\n\n#### Example form\n\nForm controls in Primer currently have no basic layout specified (this is by design). You'll need to use `<fieldset>`s, `<div>`s, or other elements and styles to rearrange them.\n\n```html\n<form>\n  <label for=\"name\">Name</label>\n  <input class=\"form-control\" type=\"text\" id=\"name\">\n\n  <label for=\"email\">Email address</label>\n  <input class=\"form-control\" type=\"email\" id=\"email\">\n\n  <label>\n    <input type=\"checkbox\"> Remember me\n  </label>\n\n  <label>\n    <input type=\"radio\" id=\"herp\" name=\"herpderp\" checked> Herp\n  </label>\n  <label>\n    <input type=\"radio\" id=\"derp\" name=\"herpderp\"> Derp\n  </label>\n\n  <button class=\"btn\" type=\"submit\">Submit</button>\n</form>\n```\n\n#### Form contrast\n\nTextual form controls have a white background by default. You can change this to a light gray with `.input-contrast`.\n\n```html\n<form>\n  <input class=\"form-control\" type=\"text\" placeholder=\"Default input\" aria-label=\"Default input\">\n  <input class=\"form-control input-contrast\" type=\"text\" placeholder=\"Input with contrast\" aria-label=\"Input with contrast\">\n</form>\n```\n\n#### Sizing\n\nMake inputs smaller, larger, or full-width with an additional class.\n\n##### Small\n\n```html\n<form>\n  <input class=\"form-control input-sm\" type=\"text\" placeholder=\"Small input\" aria-label=\"Small input\">\n</form>\n```\n\n##### Large\n\n```html\n<form>\n  <input class=\"form-control input-lg\" type=\"text\" placeholder=\"Large input\" aria-label=\"Large input\">\n</form>\n```\n\n##### Block\n\n```html\n<form>\n  <input class=\"form-control input-block\" type=\"text\" placeholder=\"Full-width input\" aria-label=\"Full-width input\">\n</form>\n```\n\n##### Hide webkit's contact info autofill icon\nWebkit sometimes gets confused and tries to add an icon/dropdown to autofill contact information on fields that may not be appropriate (such as input for number of users). Use this class to override the display of this icon.\n\n```html\n<form>\n  <input class=\"form-control input-hide-webkit-autofill\" placeholder=\"Hide Webkit's contact autofill on this input\" type=\"text\" aria-label=\"Hide Webkit's contact autofill on this input\">\n</form>\n```\n\n#### Selects\n\nPrimer adds light `height` and `vertical-align` styles to `<select>`s for all browsers to render them consistently with textual inputs.\n\n```html\n<form>\n  <select class=\"form-select\" aria-label=\"Preference\">\n    <option>Choose an option</option>\n    <option>Git</option>\n    <option>Subversion</option>\n    <option>Social Coding</option>\n    <option>Beets</option>\n    <option>Bears</option>\n    <option>Battlestar Galactica</option>\n  </select>\n</form>\n```\n\n##### Small\n\nUse the `.select-sm` class to resize both default and custom `<select>`s to match the size of [our small buttons](./buttons#default-buttons).\n\n```html\n<select class=\"form-select select-sm\" aria-label=\"Preference\">\n  <option>Choose an option</option>\n  <option>Git</option>\n  <option>Subversion</option>\n  <option>Social Coding</option>\n  <option>Beets</option>\n  <option>Bears</option>\n  <option>Battlestar Galactica</option>\n</select>\n\n<select class=\"form-select select-sm\" aria-label=\"Preference\">\n  <option>Choose an option</option>\n  <option>Git</option>\n  <option>Subversion</option>\n  <option>Social Coding</option>\n  <option>Beets</option>\n  <option>Bears</option>\n  <option>Battlestar Galactica</option>\n</select>\n```\n\n#### Form groups\n\n```html\n<form>\n  <dl class=\"form-group\">\n    <dt><label for=\"example-text\">Example Text</label></dt>\n    <dd><input class=\"form-control\" type=\"text\" value=\"Example Value\" id=\"example-text\"></dd>\n  </dl>\n\n  <dl class=\"form-group\">\n    <dt><label for=\"example-select\">Example Select</label></dt>\n    <dd>\n      <select class=\"form-select\" id=\"example-select\">\n        <option>Choose an option</option>\n        <option>Git</option>\n        <option>Subversion</option>\n        <option>Social Coding</option>\n        <option>Beets</option>\n        <option>Bears</option>\n        <option>Battlestar Galactica</option>\n      </select>\n    </dd>\n  </dl>\n\n  <dl class=\"form-group\">\n    <dt><label for=\"example-textarea\">Example Textarea</label></dt>\n    <dd>\n      <textarea class=\"form-control\" id=\"example-textarea\"></textarea>\n    </dd>\n  </dl>\n</form>\n```\n\n#### Form group validation\n\nConvey errors and warnings for form groups. Add the appropriate class—either `.errored` or `.warn`—to the `<dl class=\"form-group\">` to start. Then, house your error messaging in an additional `<dd>` with either `.error` or `.warning`.\n\n```html\n<form>\n  <dl class=\"form-group errored\">\n    <dt><label for=\"example-text-errored\">Example Text</label></dt>\n    <dd><input class=\"form-control\" type=\"text\" value=\"Example Value\" id=\"example-text-errored\" aria-describedby=\"form-error-text\"></dd>\n    <dd class=\"error\" id=\"form-error-text\">This example input has an error.</dd>\n  </dl>\n  <br>\n  <dl class=\"form-group warn\">\n    <dt><label for=\"example-text-warn\">Example Text</label></dt>\n    <dd><input class=\"form-control\" type=\"text\" value=\"Example Value\" id=\"example-text-warn\" aria-describedby=\"form-warning-text\"></dd>\n    <dd class=\"warning\" id=\"form-warning-text\">This example input has a warning.</dd>\n  </dl>\n</form>\n```\n\n#### Checkboxes and radios\n\nUtilities to spice up the alignment and styling of checkbox and radio controls.\n\n```html\n<form>\n  <div class=\"form-checkbox\">\n    <label>\n      <input type=\"checkbox\" checked=\"checked\" aria-describedby=\"help-text-for-checkbox\">\n      Available for hire\n    </label>\n    <p class=\"note\" id=\"help-text-for-checkbox\">\n      This will do insanely <strong>awesome</strong> and <strong>amazing</strong> things!\n    </p>\n  </div>\n</form>\n```\n\nYou may also add emphasis to the label:\n\n```html\n<form>\n  <div class=\"form-checkbox\">\n    <label>\n      <input type=\"checkbox\" checked=\"checked\">\n      <em class=\"highlight\">Available for hire</em>\n    </label>\n  </div>\n</form>\n```\n\n##### Show / hide content based on a checkbox or radio button state\n\nContent that is hidden by default should only be done so if it is non-essential for the context of the surrounding content. Be sure to use the `aria-live=\"polite\"` attribute on the parent label for added content to be announced when displayed.\n\n```html\n<form>\n  <div class=\"form-checkbox\">\n    <label>\n      <input type=\"radio\" name=\"hireme\">\n      Not available for hire\n    </label>\n  </div>\n  <div class=\"form-checkbox\">\n    <label aria-live=\"polite\">\n      <input type=\"radio\" class=\"form-checkbox-details-trigger\" name=\"hireme\">\n      Available for hire\n      <span class=\"form-checkbox-details text-normal\">\n        <span class=\"d-block mb-1\">Available hours per week</span>\n        <input type=\"text\" name=\"\" class=\"form-control input-contrast\" size=\"3\">\n        <span class=\"text-small text-gray pl-2\">hours per week</span>\n      </span>\n    </label>\n  </div>\n</form>\n```\n\n#### Input group\n\nAttached an input and button to one another.\n\n```erb\n<form>\n  <div class=\"input-group\">\n    <input class=\"form-control\" type=\"text\" placeholder=\"Username\" aria-label=\"Username\">\n    <span class=\"input-group-button\">\n      <button class=\"btn\" type=\"button\" aria-label=\"Copy to clipboard\">\n        <%= octicon \"clippy\" %>\n      </button>\n    </span>\n  </div>\n</form>\n```\n\n#### Form actions\n\nAlign buttons to the right—via `float: right` on the buttons—in forms with `.form-actions`. The floats are automatically cleared for you.\n\n```html\n<div class=\"form-actions\">\n  <button type=\"submit\" class=\"btn btn-primary\">Save changes</button>\n  <button type=\"button\" class=\"btn\">Cancel</button>\n</div>\n```\n"
  },
  "components/navigation": {
    "title": "Navigation",
    "path": "components/navigation",
    "content": "\n\nPrimer comes with several navigation components. Some were designed with singular purposes, while others were design to be more flexible and appear quite frequently.\n\n{:toc}\n\n## Menu\n\nThe menu is a vertical list of navigational links. **A menu's width and placement must be set by you.** If you like, just use our grid columns as a parent. Otherwise, apply a custom `width`.\n\n```html title=\"Menu\"\n<nav class=\"menu\" aria-label=\"Person settings\">\n  <a class=\"menu-item selected\" href=\"#url\" aria-current=\"page\">Account</a>\n  <a class=\"menu-item\" href=\"#url\">Profile</a>\n  <a class=\"menu-item\" href=\"#url\">Emails</a>\n  <a class=\"menu-item\" href=\"#url\">Notifications</a>\n</nav>\n```\n\nThere are a few subcomponents and add-ons that work well with the menu, including avatars, counters, and Octicons.\n\n```erb title=\"Menu with octicons, avatars and counters\"\n<nav class=\"menu\" aria-label=\"Person settings\">\n  <a class=\"menu-item selected\" href=\"#url\" aria-current=\"page\">\n    <%= octicon \"tools\" %>\n    Account\n  </a>\n  <a class=\"menu-item\" href=\"#url\">\n    <%= octicon \"person\" %>\n    Profile\n  </a>\n  <a class=\"menu-item\" href=\"#url\">\n    <%= octicon \"mail\" %>\n    Emails\n  </a>\n  <a class=\"menu-item\" href=\"#url\">\n    <%= octicon \"radio-tower\" %>\n    <span class=\"Counter\">3</span>\n    Notifications\n  </a>\n</nav>\n```\n\nYou can also add optional headings to a menu. Feel free to use nearly any semantic element with the `.menu-heading` class, including inline elements, headings, and more.\n\n```html title=\"Menu with heading\"\n<nav class=\"menu\" aria-labelledby=\"menu-heading\">\n  <span class=\"menu-heading\" id=\"menu-heading\">Menu heading</span>\n  <a class=\"menu-item selected\" href=\"#url\" aria-current=\"page\">Account</a>\n  <a class=\"menu-item\" href=\"#url\">Profile</a>\n  <a class=\"menu-item\" href=\"#url\">Emails</a>\n  <a class=\"menu-item\" href=\"#url\">Notifications</a>\n</nav>\n```\n\n## Underline nav\n\nUse `.UnderlineNav` to style navigation with a minimal underlined selected state, typically used for navigation placed at the top of the page. This component comes with variations to accommodate icons, containers and other content.\n\n```html title=\"UnderlineNav\"\n<nav class=\"UnderlineNav\">\n  <div class=\"UnderlineNav-body\">\n    <a href=\"#url\" role=\"tab\" title=\"Item 1\" class=\"UnderlineNav-item selected\">Item 1</a>\n    <a href=\"#url\" role=\"tab\" title=\"Item 2\" class=\"UnderlineNav-item\">Item 2</a>\n    <a href=\"#url\" role=\"tab\" title=\"Item 3\" class=\"UnderlineNav-item\">Item 3</a>\n    <a href=\"#url\" role=\"tab\" title=\"Item 4\" class=\"UnderlineNav-item\">Item 4</a>\n  </div>\n</nav>\n```\n\nUse `.UnderlineNav-actions` to place another element, such as a button, to the opposite side of the navigation items.\n\n```html title=\"UnderlineNav-actions\"\n<nav class=\"UnderlineNav\" aria-label=\"Foo bar\">\n  <div class=\"UnderlineNav-body\">\n    <a href=\"#url\" class=\"UnderlineNav-item selected\">Item 1</a>\n    <a href=\"#url\" class=\"UnderlineNav-item\">Item 2</a>\n    <a href=\"#url\" class=\"UnderlineNav-item\">Item 3</a>\n    <a href=\"#url\" class=\"UnderlineNav-item\">Item 4</a>\n  </div>\n  <div class=\"UnderlineNav-actions\">\n    <a class=\"btn\">Button</a>\n  </div>\n</nav>\n```\n\nUse `.UnderlineNav--right` to right align the navigation.\n\n```html title=\"UnderlineNav--right\"\n<nav class=\"UnderlineNav UnderlineNav--right\">\n  <div class=\"UnderlineNav-body\">\n    <a href=\"#url\" role=\"tab\" title=\"Item 1\" class=\"UnderlineNav-item selected\">Item 1</a>\n    <a href=\"#url\" role=\"tab\" title=\"Item 2\" class=\"UnderlineNav-item\">Item 2</a>\n    <a href=\"#url\" role=\"tab\" title=\"Item 3\" class=\"UnderlineNav-item\">Item 3</a>\n    <a href=\"#url\" role=\"tab\" title=\"Item 4\" class=\"UnderlineNav-item\">Item 4</a>\n  </div>\n</nav>\n```\n\n`.UnderlineNav--right` also works with when used with `.UnderlineNav-actions`.\n\n```html title=\"UnderlineNav--right with actions\"\n<nav class=\"UnderlineNav UnderlineNav--right\" aria-label=\"Foo bar\">\n  <div class=\"UnderlineNav-actions\">\n    <a class=\"btn\">Button</a>\n  </div>\n  <div class=\"UnderlineNav-body\">\n    <a href=\"#url\" class=\"UnderlineNav-item selected\">Item 1</a>\n    <a href=\"#url\" class=\"UnderlineNav-item\">Item 2</a>\n    <a href=\"#url\" class=\"UnderlineNav-item\">Item 3</a>\n    <a href=\"#url\" class=\"UnderlineNav-item\">Item 4</a>\n  </div>\n</nav>\n```\n\n<!-- Update wording here -->\n`.Counters` and `.octicons` can be used with navigation items. Use `.UnderlineNav-octicon` to add color and hover styles.\n\n```erb title=\"UnderlineNav with Counter\"\n<nav class=\"UnderlineNav\" aria-label=\"Foo bar\">\n  <div class=\"UnderlineNav-body\">\n    <a href=\"#url\" class=\"UnderlineNav-item selected\">\n      <%= octicon \"tools\", :class => \"UnderlineNav-octicon\" %>\n      Item 1\n    </a>\n    <a href=\"#url\" class=\"UnderlineNav-item\">\n      <%= octicon \"tools\", :class => \"UnderlineNav-octicon\" %>\n      Item 2\n      <span class=\"Counter\">10</span>\n     </a>\n     <a href=\"#url\" class=\"UnderlineNav-item\">\n       <%= octicon \"tools\", :class => \"UnderlineNav-octicon\" %>\n       Item 3\n    </a>\n    <a href=\"#url\" class=\"UnderlineNav-item\">\n      <%= octicon \"tools\", :class => \"UnderlineNav-octicon\" %>\n      Item 4\n     </a>\n  </div>\n</nav>\n```\n\nUse `.UnderlineNav--full` in combination with container styles and `.UnderlineNav-container` to make navigation fill the width of the container.\n\n```html title=\"UnderlineNav--full\"\n<nav class=\"UnderlineNav UnderlineNav--full\" aria-label=\"Foo bar\">\n  <div class=\"container-lg UnderlineNav-container\">\n    <div class=\"UnderlineNav-body\">\n      <a href=\"#url\" class=\"UnderlineNav-item selected\">Item 1</a>\n      <a href=\"#url\" class=\"UnderlineNav-item\">Item 2\n        <span class=\"Counter\">10</span>\n       </a>\n      <a href=\"#url\" class=\"UnderlineNav-item\">Item 3</a>\n      <a href=\"#url\" class=\"UnderlineNav-item\">Item 4</a>\n    </div>\n    <div class=\"UnderlineNav-actions\">\n      <a class=\"btn\">Button</a>\n    </div>\n  </div>\n</nav>\n```\n\n## Tabnav\n\nWhen you need to toggle between different views, consider using a tabnav. It'll give you a left-aligned horizontal row of... tabs!\n\n```html title=\"tabnav\"\n<div class=\"tabnav\">\n  <nav class=\"tabnav-tabs\" aria-label=\"Foo bar\">\n    <a href=\"#url\" class=\"tabnav-tab selected\" aria-current=\"page\">Foo tab</a>\n    <a href=\"#url\" class=\"tabnav-tab\">Bar tab</a>\n  </nav>\n</div>\n```\n\nUse `.float-right` to align additional elements in the `.tabnav`:\n\n```html title=\"tabnav with buttons\"\n<div class=\"tabnav\">\n  <a class=\"btn btn-sm float-right\" href=\"#url\" role=\"button\">Button</a>\n  <nav class=\"tabnav-tabs\" aria-label=\"Foo bar\">\n    <a href=\"#url\" class=\"tabnav-tab selected\" aria-current=\"page\">Foo Tab</a>\n    <a href=\"#url\" class=\"tabnav-tab\">Bar Tab</a>\n  </nav>\n</div>\n```\n\nAdditional bits of text and links can be styled for optimal placement with `.tabnav-extra`:\n\n```html title=\"tabnav-extra\"\n<div class=\"tabnav\">\n  <div class=\"tabnav-extra float-right\">\n    Tabnav widget text here.\n  </div>\n  <nav class=\"tabnav-tabs\" aria-label=\"Foo bar\">\n    <a href=\"#url\" class=\"tabnav-tab selected\" aria-current=\"page\">Foo Tab</a>\n    <a href=\"#url\" class=\"tabnav-tab\">Bar Tab</a>\n  </nav>\n</div>\n```\n\n```html title=\"tabnav with everything\"\n<div class=\"tabnav\">\n  <div class=\"float-right\">\n    <a class=\"tabnav-extra\" href=\"#url\">\n      Tabnav extra link\n    </a>\n    <a class=\"tabnav-extra\" href=\"#url\">\n      Tabnav extra link\n    </a>\n  </div>\n  <nav class=\"tabnav-tabs\" aria-label=\"Foo bar\">\n    <a href=\"#url\" class=\"tabnav-tab selected\" aria-current=\"page\">Foo Tab</a>\n    <a href=\"#url\" class=\"tabnav-tab\">Bar Tab</a>\n  </nav>\n</div>\n```\n\n## Filter list\n\nA vertical list of filters. Grey text on white background. Selecting a filter from the list will fill its background with blue and make the text white.\n\n```html title=\"filter-list\"\n<ul class=\"filter-list\">\n  <li>\n    <a href=\"#url\" class=\"filter-item selected\" aria-current=\"page\">\n      <span class=\"count\" title=\"results\">21</span>\n      First filter\n    </a>\n  </li>\n  <li>\n    <a href=\"#url\" class=\"filter-item\">\n      <span class=\"count\" title=\"results\">3</span>\n      Second filter\n    </a>\n  </li>\n  <li>\n    <a href=\"#url\" class=\"filter-item\">\n      Third filter\n    </a>\n  </li>\n</ul>\n```\n\n## Sub navigation\n\n`.subnav` is navigation that is typically used when on a dashboard type interface with another set of navigation above it. This helps distinguish navigation hierarchy.\n\n```html title=\"subnav\"\n<nav class=\"subnav\" aria-label=\"Respository\">\n  <a href=\"#url\" class=\"subnav-item selected\" aria-current=\"page\">Item 1</a>\n  <a href=\"#url\" class=\"subnav-item\">Item 2</a>\n  <a href=\"#url\" class=\"subnav-item\">Item 3</a>\n</nav>\n```\n\nYou can have `subnav-search` in the subnav bar.\n\n```erb title=\"subnav-search\"\n<div class=\"subnav\">\n  <nav class=\"subnav-links\" aria-label=\"Repository\">\n    <a href=\"#url\" class=\"subnav-item selected\" aria-current=\"page\">Item 1</a>\n    <a href=\"#url\" class=\"subnav-item\">Item 2</a>\n    <a href=\"#url\" class=\"subnav-item\">Item 3</a>\n  </nav>\n  <div class=\"subnav-search float-left\">\n    <input type=\"search\" name=\"name\" class=\"form-control subnav-search-input\" value=\"\" aria-label=\"Search site\">\n    <%= octicon \"search\", :class => \"subnav-search-icon\" %>\n  </div>\n</div>\n```\n\n\nYou can also use a `subnav-search-context` to display search help in a select menu.\n\n```erb title=\"subnav-search-context\"\n<div class=\"subnav\">\n  <nav class=\"subnav-links\">\n    <a href=\"#url\" class=\"subnav-item selected\">Item 1</a>\n    <a href=\"#url\" class=\"subnav-item\">Item 2</a>\n    <a href=\"#url\" class=\"subnav-item\">Item 3</a>\n  </nav>\n  <div class=\"float-left ml-3 select-menu js-menu-container js-select-menu subnav-search-context\">\n    <button type=\"button\" name=\"button\" class=\"btn select-menu-button js-menu-target\" aria-expanded=\"false\" aria-haspopup=\"true\">Filters </button>\n    <div class=\"select-menu-modal-holder js-menu-content js-navigation-container\" aria-hidden=\"true\">\n      <div class=\"select-menu-modal\">\n        <div class=\"select-menu-list\">\n          <a href=\"#url\" class=\"select-menu-item js-navigation-item\">\n            <div class=\"select-menu-item-text\">\n              Search filter 1\n            </div>\n          </a>\n          <a href=\"#url\" class=\"select-menu-item js-navigation-item\">\n            <div class=\"select-menu-item-text\">\n              Search filter 2\n            </div>\n          </a>\n          <a href=\"#url\" class=\"select-menu-item js-navigation-item\">\n            <div class=\"select-menu-item-text\">\n              Search filter 3\n            </div>\n          </a>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"subnav-search float-left\">\n    <input type=\"search\" name=\"name\" class=\"form-control subnav-search-input\" value=\"\" aria-label=\"Search site\">\n    <%= octicon \"search\", :class => \"subnav-search-icon\" %>\n  </div>\n</div>\n```\n\n\n"
  },
  "components/popover": {
    "title": "Popover",
    "path": "components/popover",
    "content": "\n\nPopovers are used to bring attention to specific user interface elements, typically to suggest an action or to guide users through a new experience.\n\n{:toc}\n\nA popover consist of:\n\n- The block element, `.Popover`, which simply positions its content absolutely atop other body content.\n- The child element, `.Popover-message`, which contains the markup for the intended messaging and the visual \"caret.\"\n\nIn the examples below, `Popover-message`, in particular, uses a handful of utility classes to style it appropriately. And these are intended to demonstrate the default, go-to presentation for the popover's message. By default, the message's caret is centered on the top edge of the message.\n\nThe `Popover-message` element also supports several modifiers, most of which position the caret differently:\n\n- [`.Popover-message--top`](#default-top-center) (default): Places the caret on the top edge of the message, horizontally centered.\n- [`.Popover-message--bottom`](#bottom) Places the caret on the bottom edge of the message, horizontally centered.\n- [`.Popover-message--right`](#right): Places the caret on the right edge of the message, vertically centered.\n- [`.Popover-message--left`](#left): Places the caret on the left edge of the message, vertically centered.\n\nEach of these modifiers also support a syntax for adjusting the positioning the caret to the right, left, top, or bottom of its respective edge. That syntax looks like:\n\n- [`.Popover-message--bottom-left`](#bottom-left)\n- [`.Popover-message--bottom-right`](#bottom-right)\n- [`.Popover-message--left-bottom`](#left-bottom)\n- [`.Popover-message--left-top`](#left-top)\n- [`.Popover-message--right-bottom`](#right-bottom)\n- [`.Popover-message--right-top`](#right-top)\n- [`.Popover-message--top-left`](#top-left)\n- [`.Popover-message--top-right`](#top-right)\n\nLastly, there is an added [`.Popover-message--large`](#large) modifier, which assumes a slightly wider popover message on screens wider than 544px.\n\n### Notes\n\nThe samples below include optional markup, like:\n- An outermost container that establishes stacking context (e.g. `position-relative`).\n- A choice piece of user interface (a button, in this case) to relate the popover to.\n- Use of the `Details` and `js-details` family of class names, which interact with JavaScript to demonstrate dismissal of the popover by clicking the nested \"Got it!\" button.\n\n### Basic example\nDefaults to caret oriented top-center.\n\n```html title=\"Default (top-center)\"\n<div class=\"position-relative text-center\">\n  <button class=\"btn btn-primary\">UI</button>\n  <div class=\"Popover right-0 left-0\">\n    <div class=\"Popover-message text-left p-4 mt-2 mx-auto Box box-shadow-large\">\n      <h4 class=\"mb-2\">Popover heading</h4>\n      <p>Message about this particular piece of UI.</p>\n      <button type=\"submit\" class=\"btn btn-outline mt-2 text-bold\">Got it!</button>\n    </div>\n  </div>\n</div>\n```\n\n### Large example\n\n```html title=\"Large\"\n<div class=\"position-relative text-center\">\n  <button class=\"btn btn-primary\">UI</button>\n  <div class=\"Popover right-0 left-0\">\n    <div class=\"Popover-message Popover-message--large text-left p-4 mt-2 Box box-shadow-large\">\n      <h4 class=\"mb-2\">Popover heading</h4>\n      <p>Message about this particular piece of UI.</p>\n      <button type=\"submit\" class=\"btn btn-outline mt-2 text-bold\">Got it!</button>\n    </div>\n  </div>\n</div>\n```\n\n### Bottom\n\n```html title=\"Bottom\"\n<div class=\"position-relative text-center\">\n  <div class=\"Popover position-relative\">\n    <div class=\"Popover-message Popover-message--bottom p-4 mx-auto mb-2 text-left Box box-shadow-large\">\n      <h4 class=\"mb-2\">Popover heading</h4>\n      <p>Message about this particular piece of UI.</p>\n      <button type=\"submit\" class=\"btn btn-outline mt-2 text-bold\">Got it!</button>\n    </div>\n  </div>\n  <button class=\"btn btn-primary\">UI</button>\n</div>\n```\n\n### Bottom-right\n\n```html title=\"Bottom-right\"\n<div class=\"position-relative text-right\">\n  <div class=\"Popover position-relative\">\n    <div class=\"Popover-message Popover-message--bottom-right p-4 mb-2 text-left Box box-shadow-large\">\n      <h4 class=\"mb-2\">Popover heading</h4>\n      <p>Message about this particular piece of UI.</p>\n      <button type=\"submit\" class=\"btn btn-outline mt-2 text-bold\">Got it!</button>\n    </div>\n  </div>\n  <button class=\"btn btn-primary\">UI</button>\n</div>\n```\n\n### Bottom-left\n\n```html title=\"Bottom-left\"\n<div class=\"Popover position-relative\">\n  <div class=\"Popover-message Popover-message--bottom-left p-4 mb-2 Box box-shadow-large\">\n    <h4 class=\"mb-2\">Popover heading</h4>\n    <p>Message about this particular piece of UI.</p>\n    <button type=\"submit\" class=\"btn btn-outline mt-2 text-bold\">Got it!</button>\n  </div>\n</div>\n<button class=\"btn btn-primary\">UI</button>\n```\n\n### Left\n\n```html title=\"Left\"\n<div class=\"d-flex flex-justify-center flex-items-center\">\n  <button class=\"btn btn-primary\">UI</button>\n  <div class=\"Popover position-relative\">\n    <div class=\"Popover-message Popover-message--left p-4 ml-2 Box box-shadow-large\">\n      <h4 class=\"mb-2\">Popover heading</h4>\n      <p>Message about this particular piece of UI.</p>\n      <button type=\"submit\" class=\"btn btn-outline mt-2 text-bold\">Got it!</button>\n    </div>\n  </div>\n</div>\n```\n\n### Left-bottom\n\n```html title=\"Left-bottom\"\n<div class=\"d-flex flex-justify-center flex-items-end\">\n  <button class=\"btn btn-primary\">UI</button>\n  <div class=\"Popover position-relative\">\n    <div class=\"Popover-message Popover-message--left-bottom p-4 ml-2 Box box-shadow-large\">\n      <h4 class=\"mb-2\">Popover heading</h4>\n      <p>Message about this particular piece of UI.</p>\n      <button type=\"submit\" class=\"btn btn-outline mt-2 text-bold\">Got it!</button>\n    </div>\n  </div>\n</div>\n```\n\n### Left-top\n\n```html title=\"Left-top\"\n<div class=\"d-flex flex-justify-center flex-items-start\">\n  <button class=\"btn btn-primary\">UI</button>\n  <div class=\"Popover position-relative\">\n    <div class=\"Popover-message Popover-message--left-top p-4 ml-2 Box box-shadow-large\">\n      <h4 class=\"mb-2\">Popover heading</h4>\n      <p>Message about this particular piece of UI.</p>\n      <button type=\"submit\" class=\"btn btn-outline mt-2 text-bold\">Got it!</button>\n    </div>\n  </div>\n</div>\n```\n\n### Right\n\n```html title=\"Right\"\n<div class=\"d-flex flex-justify-center flex-items-center\">\n  <div class=\"Popover position-relative\">\n    <div class=\"Popover-message Popover-message--right p-4 mr-2 Box box-shadow-large\">\n      <h4 class=\"mb-2\">Popover heading</h4>\n      <p>Message about this particular piece of UI.</p>\n      <button type=\"submit\" class=\"btn btn-outline mt-2 text-bold\">Got it!</button>\n    </div>\n  </div>\n  <button class=\"btn btn-primary\">UI</button>\n</div>\n```\n\n### Right-bottom\n\n```html title=\"Right-bottom\"\n<div class=\"d-flex flex-justify-center flex-items-end\">\n  <div class=\"Popover position-relative\">\n    <div class=\"Popover-message Popover-message--right-bottom p-4 mr-2 Box box-shadow-large\">\n      <h4 class=\"mb-2\">Popover heading</h4>\n      <p>Message about this particular piece of UI.</p>\n      <button type=\"submit\" class=\"btn btn-outline mt-2 text-bold\">Got it!</button>\n    </div>\n  </div>\n  <button class=\"btn btn-primary\">UI</button>\n</div>\n```\n\n### Right-top\n\n```html title=\"Right-top\"\n<div class=\"d-flex flex-justify-center flex-items-start\">\n  <div class=\"Popover position-relative\">\n    <div class=\"Popover-message Popover-message--right-top p-4 mr-2 Box box-shadow-large\">\n      <h4 class=\"mb-2\">Popover heading</h4>\n      <p>Message about this particular piece of UI.</p>\n      <button type=\"submit\" class=\"btn btn-outline mt-2 text-bold\">Got it!</button>\n    </div>\n  </div>\n  <button class=\"btn btn-primary\">UI</button>\n</div>\n```\n\n### Top-left\n\n```html title=\"Top-left\"\n<div class=\"position-relative\">\n  <button class=\"btn btn-primary\">UI</button>\n  <div class=\"Popover\">\n    <div class=\"Popover-message Popover-message--top-left p-4 mt-2 Box box-shadow-large\">\n      <h4 class=\"mb-2\">Popover heading</h4>\n      <p>Message about this particular piece of UI.</p>\n      <button type=\"submit\" class=\"btn btn-outline mt-2 text-bold\">Got it!</button>\n    </div>\n  </div>\n</div>\n```\n\n### Top-right\n\n```html title=\"Top-right\"\n<div class=\"position-relative text-right\">\n  <button class=\"btn btn-primary\">UI</button>\n  <div class=\"Popover right-0\">\n    <div class=\"Popover-message Popover-message--top-right text-left p-4 mt-2 Box box-shadow-large\">\n      <h4 class=\"mb-2\">Popover heading</h4>\n      <p>Message about this particular piece of UI.</p>\n      <button type=\"submit\" class=\"btn btn-outline mt-2 text-bold\">Got it!</button>\n    </div>\n  </div>\n</div>\n```\n\n"
  },
  "getting-started/contributing": {
    "title": "Contributing",
    "path": "getting-started/contributing",
    "content": "\nGuidelines for contributing to GitHub's CSS.\n\n- [Decision process for adding new styles](#decision-process-for-adding-new-styles)\n- [Step-by-step instructions for adding new styles](#step-by-step-instructions-for-adding-new-styles)\n- [Documentation structure](#documentation-structure)\n- [Primer modules](#primer-modules)\n- [Ship checklist](#ship-checklist)\n\n## Decision process for adding new styles\n\n### Components\n\n[Components](/css/components) are frequently used visual patterns we've abstracted into a set of convenient styles, that would be otherwise difficult to achieve with utilities and layout objects.\n\nMaking a decision on whether new components should be added is done on a case by case basis. It's not always easy to make that decision but here are some questions you should ask yourself before moving forward with a pull request. The design systems team will help you make this decision.\n\n* How often is this pattern used across the site?\n* Could these styles be achieved with existing components, objects, and utilities?\n* If your design is difficult to compose with current styles, does this highlight problems with existing components (such as overly-specific components, or missing objects and utilities)?\n* Is this a totally new pattern or should it be an extension of an existing component?\n* How is this pattern being implemented currently - have you identified problems with it’s current implementation that can be improved with adding a new pattern?\n* Is the desire for this new pattern a side-effect of lacking documentation or mis-understandings of use with current styles?\n* Are there special factors that need to be considered as to why the this pattern needs it’s own styles? Such legal issues, usability issues, or branding and trademarks?\n* Is this something that would be better handled by other front-end code rather than CSS?\n* Every new addition of CSS means we ask our users to download a larger CSS file, and we increase the maintenance work of our CSS framework. Does the convenience of adding these new styles outweigh those costs?\n\n### Objects and utilities\n\nMany of the same questions can be applied to objects and utilities, however the purpose of these styles is different:\n* [Objects](/css/objects) aren't concerned with thematic styles. They are for common display and positioning styles we find in page layouts and common content types.\n* [Utilities](/css/utilities) do one thing well and one thing only. These styles are immutable and therefore often use the `!important` tag. For this reason we aim not to change the properties of utilities very often. They often form the building blocks of our pages and when we introduce new ones we need to do so with care as we'll likely need to live with these styles for a long time. When assessing whether there is a need to add a new utility, consider these additional questions:\n    - how does this new utility fit within our existing set of utilities? If it is an addition to an existing set then it should follow the same naming convention.\n    - is it for a property that would likely need to be changed at different breakpoints? If so it may need responsive options.\n    - if this style is part of a family of properties, do we need to consider adding the full set? Reasons for adding a full set could be that the other property values are often used, or that there would be a need to switch the property on and off (such as display or visibility).\n    - does introducing this new utility cause any clashes or potential confusion with the use of existing utilities? If so, what steps can we take to avoid those issues.\n    - does the utility have a connection with a set of variables? If so do the corresponding variables need to be updated?\n\n## Step-by-step instructions for adding new styles\n\n### Step 1: Open an issue\nIt's usually better to open an issue before investing time in spiking out a new pattern. This gives the design systems team a heads up and allows other designers to share thoughts. Here's and outline of what's helpful to include in a new style issue:\n\n1. What the pattern is and how it's being used across the site - post screenshots and urls where possible. If you need help identifying where the pattern is being used, call that out here and cc the relevant team and/or cc `@product-design` to help.\n2. Why you think a new pattern is needed (this should answer the relevant questions above).\n3. If you intend to work on these new styles yourself, let us know what your timeline and next steps are. If you need help and this is a dependency for shipping another project, please make that clear here and what the timeline is.\n4. Add the `type: new styles` label, or `type: refactor` where appropriate.\n\n\n### Step 2: Design and build the new styles\n\n* You may want to explore the visual design for a new component before spiking it out in code. If so, continue in the issue and post your design mockups. Using the [Jekyll prototyping tool](https://github.com/github/design/blob/master/docs/resources/prototyping.md#jekyll) could also be a good option, it pulls in the production CSS so you can explore options in isolation before jumping into production code.\n* When you're ready, spike out a branch and build out your new component, object, or utilities according to the style guide principles, ensuring you follow our naming convention for each of the styles.\n* Refactor parts of the product where you think those new styles could be used to test they work for each use case. This does not mean for every instance, but enough of the key use cases to be sure the styles are flexible enough. To avoid blowing out your initial pull request we recommend you do larger amounts of refactoring in an additional branch.\n* When you're ready for review, add the `status: review needed` and the `design-systems` labels to your pull request. Follow the [ship checklist](#ship-checklist) for additional shipping steps.\n\n### Step 3: Follow up with refactoring\n\nNew styles we add should be used in as many places as makes sense to in production. Often it takes time to refactor all instances to use the new styles in one pr, but you should ensure this is followed up on.\n* Add a tracking issue to the design systems repo with the label `type: refactor`. Add a task list with links to the code or pages that need updating. If you need help, request help in this issue.\n* Follow up with as many refactoring pull requests as you can make time for. This is an important part of the process and helps us reduce CSS bloat. Think of it as the project isn't finished until the new styles are being used everywhere they should be in production.\n\n### Step 4: Feel awesome\nIf you get to this step you've helped contribute to a style guide that many of your colleagues use on a daily basis, you've contributed to an open source project that's referenced and used by many others, and you've helped improve the usability and consistency of GitHub for our users. Thank you!\n\nLet the [design systems team](https://github.com/github/design-systems) know if we can improve these guidelines and make following this process any easier.\n\n\n## Documentation structure\n\n_**Note:** Documentation for Primer modules should live in the `README` of that module, see the [primer modules](#primer-modules) section below for more details. The [anatomy of a guide](#anatomy-of-a-guide) will work the same as part of a module README as well as regular markdown documentation._\n\nThe style guide takes a content first approach. Everything you see on the site is built from markdown files found in this folder.\n\nCurrently there’s a few levels of hierarchy. The top level is `styleguide/` inside the only content rendered is the `README.md` file on the style guide homepage.\n\nThe folders immediately in `styleguide/` represent top level navigation. There’s a little bit of setup needed to create a new top level navigation item.\n\n* Create a new navigation tab in the navigation partial `github/github/app/views/navigation/_styleguide.html.erb`\n\nEverything inside these top level navigation items gets built into the guide for that section. `README.md` files will be returned for sections (ie. `primer`, `js`, `ruby`, `branding`) when the user is on a section landing page ie `/primer/`.\n\n### Anatomy of a guide\n\nThe anatomy of a style guide markdown file pretty straight forward, but has a few optional properties for making the page render special features.\n\nTypically the file will look something like this:\n\n    ---\n    title: Avatar stack\n    ---\n\n    # Avatar stack\n\n    Stacked avatars can be used to show who is participating in thread when there is limited space available. When you hover over the stack, the avatars will reveal themselves. Optimally, you should put no more than 3 avatars in the stack.\n\n    ```erb\n    <span class=\"avatar-stack tooltipped tooltipped-s\" aria-label=\"jonrohan, broccolini, and shawnbot\">\n      <%= avatar_for(\"jonrohan\", 39, class: \"avatar\") %>\n      <%= avatar_for(\"broccolini\", 39, class: \"avatar\") %>\n      <%= avatar_for(\"shawnbot\", 39, class: \"avatar\") %>\n    </span>\n    ```\n\nWhich consists of three parts:\n\n1. **YML frontmatter** _(optional)_, similar to jekyll’s frontmatter, this is a way to pass info to the controller\n2. **Docs section** _(required)_, This is the section between the YML and the first `````html`\n3. **The example section** _(optional)_, This section is denoted by ````html` and will render into an example used in the page. This can contain rails helpers also eg. `<%= octicons 'fire' %>`\n\nThe options you have for the frontmatter are outlined below:\n\n```yml\n---\ntitle: Document title\n---\n```\n\nThis is a nicer title for the guide section. If `title:` is not present, the helper will use the filename.\n\n```yml\n---\nexample_layout: toggle\n---\n```\n\nExample layout will be applied to code blocks. By default it will just put the html into the page along with the syntax highlighted code, but for special cases, like animations, we need some customizations. The options for this property are **toggle, plain, none**. You can also [specify example layout on a per code block basis](#code-blocks).\n\n```yml\n---\nexample_template: icons\n---\n```\n\nIn cases where you don't want to use code blocks to render examples, you can choose to make your example templates. Just specify the template name here, and it will be rendered at the end of a guide.\n\n```yml\n---\nstatus: Needs refactoring\n---\n```\n\nThe status option is a tag that will tag a module as a thing, displaying what state the feature is in.\n\n\n```yml\n---\nsource: https://github.com/github/github/tree/master/app/assets/stylesheets/components/x.scss\n---\n```\n\nThe source option will let you point the document to the source file. **This is only necessary for components that still live in the `github/github` repo**; Primer CSS source files will have the `source` field populated automatically.\n\n### Special tags\n\n#### Tables of contents\n\nIn the style guide you can add a `{:toc}` tag to have a table of contents automatically generated.\n\n#### Code blocks\n\nWhen using code blocks for demo purposes, you can choose to render each of the blocks differently by specifying the layout in the info string. For example if you want to use `toggle` as the layout for a code block:\n\n```markdown\n  ```html layout=toggle\n  <div class=\"p-5\">Animation</div>\n  ```\n```\n\n## Primer modules\n\nModules are created for all the styles we include in the Primer framework. Modules are folders with a specific structure that include CSS, a `package.json`, and other files for publishing to repositories in our GitHub Primer organization and NPM.\n\nThe source of truth for our CSS will be in the github/github codebase, but we publish updates to NPM whenever styles in github/github are changed. By publishing to NPM we are able to distribute our reusable modules to other GitHub properties.\n\nModules are grouped into three packages:\n- **primer-core:** modules that are used for dotcom as well as marketing websites\n- **primer-product:** modules that are only used on dotcom\n- **primer-marketing:** modules that are only used on marketing websites and occasionally for promotional content on dotcom\n\nYou can add module packages by including any or all of the following imports in your bundle:\n```\n@import \"primer-core/index.scss\"\n@import \"primer-product/index.scss\"\n@import \"primer-marketing/index.scss\"\n```\n\n### Creating a module\n\n1. Create a new repository on https://github.com/primer that will be the location for your module. Only the design systems team have write access to that repository. If you don't have access, ask in #design-systems and someone will create a folder for you.\n2. Create a new folder inside one of the primer directories (core, product, or marketing), and within the appropriate styles folder (components, objects, utilities etc.). This folder cannot be inside another module with a `package.json` file.\n3. Inside the folder you'll need at least a `package.json` file. Here is an example of what you'll need in the package file. The main thing it's looking for are `name, version, and repository`. The publish script uses this to push to the distribution repository.\n\n    ```js\n    {\n      \"name\": \"module-name\",\n      \"version\": \"0.1.0\",\n      \"description\": \"\",\n      \"homepage\": \"https://github.com/styleguide\",\n      \"license\": \"MIT\",\n      \"repository\": \"https://github.com/primer/primer.git\",\n      \"main\": \"utilities.scss\",\n      \"bugs\": {\n        \"url\": \"https://github.com/primer/primer/issues\"\n      },\n      \"author\": \"GitHub, Inc.\",\n      \"scripts\": {\n        \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n      },\n      \"keywords\": [\n        \"primer\",\n        \"css\",\n        \"github\",\n        \"primercss\"\n      ]\n    }\n    ```\n\n5. The directory layout should typically be like this:\n\n    ```\n    a-module/\n      ├── lib/\n      │   ├── partial.scss\n      │   └── partial.scss\n      ├── index.scss\n      ├── README.md\n      └── package.json\n    ```\n\n    Create a stylesheet named `index.scss`. In this file include a list of relative imports for the partials required, like the example below:\n\n    ```scss\n    @import \"primer-support/index.scss\";\n    @import \"./lib/button.scss\";\n    @import \"./lib/button-group.scss\";\n    ```\n\n    Add a `README` to give some info on the module and how to install it, and a documentation section. Here's an example of the [buttons README](https://github.com/primer/primer/blob/master/README.md).\n\n### Publishing changes and new modules\n\nOnce you have your directory setup, you will be ready to publish the module.\n\nTo publish, there are two requirements. First, you must be on the `master` branch. Second, all changes should be committed and synced with the remote `master`. These requirements protect us from changes being overwritten. Once you're on `master` run `script/css-modules --help` to get a list of all the available commands. This script will help with versioning and publishing.\n\n#### Versioning\n\nAll the individual Primer modules are [semver](http://semver.org/) versioned. This helps others know when a change is a patch, minor, or breaking change.\n\nTo understand what choice to make, you'll need to understand semver and know if one of the changes shown is a major, minor, or patch. Semver is confusing at first, so I recommend reviewing [semver](http://semver.org/) and/or ask in [#design-systems](https://github.slack.com/archives/design-systems) or and experienced open-source contributor.\n"
  },
  "objects/grid": {
    "title": "Grid",
    "path": "objects/grid",
    "content": "\nThe grid is 12 columns and percentage-based. The number of columns a container spans can be adjusted across breakpoints for responsive layouts. The grid system works with a variety of layout utilities to achieve different results.\n\n{:toc}\n\n## Float based grid\n\nUse `.clearfix` on the container and float utilities with columns for a floated grid layout.\n\n```html title=\"Float based grid\"\n<div class=\"container-lg clearfix\">\n  <div class=\"col-4 float-left border p-4\">\n    My column\n  </div>\n  <div class=\"col-4 float-left border p-4\">\n    Looks better\n  </div>\n  <div class=\"col-4 float-left border p-4\">\n    Than your column\n  </div>\n</div>\n```\n\n### Reversed grid\n\nTo reverse the order of columns, use `float-right` to float columns to the right.\n\n```html title=\"Float grid reversed\"\n<div class=\"container-lg clearfix\">\n  <div class=\"col-4 float-right border p-4\">\n    One\n  </div>\n  <div class=\"col-4 float-right border p-4\">\n    Two\n  </div>\n  <div class=\"col-4 float-right border p-4\">\n    Three\n  </div>\n</div>\n```\n\n## Nesting\nYou can infinitely nest grid layouts within other columns since the column widths are percentage based. With great flexibility comes great responsibility - be sensible with how far you nest!\n\n```html title=\"Nesting grids\"\n<div class=\"clearfix\">\n  <div class=\"col-6 float-left px-1\">\n    <div class=\"border p-1\">Unnested</div>\n  </div>\n  <div class=\"col-6 float-left\">\n    <div class=\"clearfix\">\n      <div class=\"col-6 float-left px-1\">\n        <div class=\"border p-1\">1 x Nested</div>\n      </div>\n      <div class=\"col-6 float-left\">\n        <div class=\"col-6 float-left px-1\">\n          <div class=\"border p-1\">2 x Nested</div>\n        </div>\n        <div class=\"col-6 float-left px-1\">\n          <div class=\"border p-1\">2 x Nested</div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n```\n\n## Centering a column\n\nUse `.mx-auto` to center columns within a container.\n\n```html title=\"Centering a column\"\n<div class=\"border\">\n  <div class=\"col-6 p-2 mx-auto border\">\n    This column is the center of my world.\n  </div>\n</div>\n```\n\n\n## Column widths\nColumn widths can be used with any other block or inline-block elements to add percentage-based widths.\n\n```erb title=\"Column widths\"\n<div>\n  <div class=\"col-4 float-right p-2 border text-red\">\n    <%= octicon \"heart\" %> Don't go bacon my heart.\n  </div>\n  <p>T-bone drumstick alcatra ribeye. Strip steak chuck andouille tenderloin bacon tri-tip ball tip beef capicola rump. Meatloaf bresaola drumstick ball tip salami. Drumstick ham bacon alcatra pig porchetta, spare ribs leberkas pork belly.</p>\n</div>\n```\n\n## Offset columns\n\nUsing column offset classes can push a div over X number of columns. They work responsively using the [breakpoints outlined below](#responsive-grids).\n\n```html title=\"Offset columns\"\n<div class=\"clearfix\">\n  <div class=\"offset-1 col-3 border p-3\">.offset-1</div>\n  <div class=\"offset-2 col-3 border p-3\">.offset-2</div>\n</div>\n```\n\n## Gutters\nUse gutter styles or padding utilities to create gutters. You can use the default gutter style, `gutter`, or either of its modifiers, `gutter-condensed` or `gutter-spacious`. Gutter styles also support responsive breakpoint modifiers. Gutter styles add padding to the left and right side of each column and apply a negative margin to the container to ensure content inside each column lines up with content outside of the grid.\n\n```html title=\"Gutters\"\n<div class=\"clearfix gutter-md-spacious border\">\n  <div class=\"col-3 float-left\">\n    <div class=\"border p-3\">.col-md-3</div>\n  </div>\n  <div class=\"col-3 float-left\">\n    <div class=\"border p-3\">.col-md-3</div>\n  </div>\n  <div class=\"col-3 float-left\">\n    <div class=\"border p-3\">.col-md-3</div>\n  </div>\n  <div class=\"col-3 float-left\">\n    <div class=\"border p-3\">.col-md-3</div>\n  </div>\n</div>\n```\n\nUse padding utilities to create gutters for more customized layouts.\n\n```html title=\"Gutters with padding\"\n<div class=\"container-lg clearfix\">\n  <div class=\"col-3 float-left pr-2 mb-3\">\n    <div class=\"border bg-gray-light\">.pr-2</div>\n  </div>\n  <div class=\"col-3 float-left px-2 mb-3\">\n    <div class=\"border bg-gray-light\">.px-2</div>\n  </div>\n  <div class=\"col-3 float-left px-2 mb-3\">\n    <div class=\"border bg-gray-light\">.px-2</div>\n  </div>\n  <div class=\"col-3 float-left pl-2 mb-3\">\n    <div class=\"border bg-gray-light\">.pl-2</div>\n  </div>\n</div>\n<div class=\"container-lg clearfix\">\n  <div class=\"col-3 float-left pr-2\">\n    <div class=\"border bg-gray-light\">.pr-2</div>\n  </div>\n  <div class=\"col-9 float-left pl-2\">\n    <div class=\"border bg-gray-light\">.pl-2</div>\n  </div>\n</div>\n```\n\n\n## Inline-block grids\nUse column widths with `d-inline-block` as an alternative to floated grids.\n\n```html title=\"Inline-block grid\"\n<div>\n  <div class=\"col-4 d-inline-block border\">\n    .col-4 .d-inline-block\n  </div><!--\n  --><div class=\"col-4 d-inline-block border\">\n    .col-4 .d-inline-block\n  </div><!--\n  --><div class=\"col-4 d-inline-block border\">\n    .col-4 .d-inline-block\n  </div>\n</div>\n```\n\nYou can use column widths and other utilities on elements such as lists to create the layout you need while keeping the markup semantically correct.\n```html title=\"Inline-block grid list\"\n<ul class=\"list-style-none\">\n  <li class=\"d-inline-block col-2 p-2\"><img class=\"width-full avatar\" src=\"https://github.com/broccolini.png\" alt=\"broccolini\" /></li><!--\n  --><li class=\"d-inline-block col-2 p-2\"><img class=\"width-full avatar\" src=\"https://github.com/jonrohan.png\" alt=\"jonrohan\" /></li><!--\n  --><li class=\"d-inline-block col-2 p-2\"><img class=\"width-full avatar\" src=\"https://github.com/muan.png\" alt=\"muan\" /></li><!--\n  --><li class=\"d-inline-block col-2 p-2\"><img class=\"width-full avatar\" src=\"https://github.com/pmarsceill.png\" alt=\"pmarsceill\" /></li><!--\n  --><li class=\"d-inline-block col-2 p-2\"><img class=\"width-full avatar\" src=\"https://github.com/sophshep.png\" alt=\"sophshep\" /></li><!--\n  --><li class=\"d-inline-block col-2 p-2\"><img class=\"width-full avatar\" src=\"https://github.com/cmwinters.png\" alt=\"cmwinters\" /></li><!--\n  --><li class=\"d-inline-block col-2 p-2\"><img class=\"width-full avatar\" src=\"https://github.com/jeejkang.png\" alt=\"jeejkang\" /></li><!--\n  --><li class=\"d-inline-block col-2 p-2\"><img class=\"width-full avatar\" src=\"https://github.com/mdo.png\" alt=\"mdo\" /></li>\n</ul>\n```\n\n\n## Display table grids\nUsing [display table utilities](/css/utilities/layout#display) with columns gives you some alternative layout options.\n\nA useful example is being able to keep the height of the container equal across a row when the length of content may differ.\n\n```html title=\"Table grid\"\n<div class=\"d-table col-12\">\n  <div class=\"col-4 d-table-cell border p-2\">\n    Bacon ipsum dolor amet leberkas pork pig kielbasa shankle ribeye meatball, salami alcatra venison.\n  </div><!--\n  --><div class=\"col-4 d-table-cell border p-2\">\n    Pork chop cupim cow turkey frankfurter, landjaeger fatback hamburger meatball salami spare ribs. Rump tenderloin salami, hamburger frankfurter landjaeger andouille.\n  </div><!--\n  --><div class=\"col-4 d-table-cell border p-2\">\n    Brisket tongue frankfurter cupim strip steak rump picanha pancetta pork pig kevin pastrami biltong. Shankle venison meatball swine sausage ground round. Tail pork loin ribeye kielbasa short ribs pork chop.\n  </div>\n</div>\n```\nYou can also create an alternative [media object](/css/utilities/layout#the-media-object) layout with `.display-table` and column widths.\n\n```html title=\"Table grid alternative\"\n<div class=\"d-table col-12\">\n  <div class=\"col-2 d-table-cell v-align-middle\">\n    <img class=\"width-full avatar\" src=\"https://github.com/github.png\" alt=\"github\" />\n  </div>\n  <div class=\"col-10 d-table-cell v-align-middle pl-4\">\n    <h1 class=\"text-normal lh-condensed\">GitHub</h1>\n    <p class=\"h4 text-gray text-normal mb-2\">How people build software.</p>\n    <a class=\"text-gray text-small\" href=\"#url\">https://github.com/about</a>\n  </div>\n</div>\n```\n\nNote that table cells will fill the width of their container even when the total columns doesn't add up to 12.\n\n```html title=\"Table grid cells\"\n<div class=\"d-table col-12\">\n  <div class=\"col-4 d-table-cell border\">\n    .col-4 .d-table-cell\n  </div><!--\n  --><div class=\"col-4 d-table-cell border\">\n    .col-4 .d-table-cell\n  </div><!--\n  --><div class=\"col-2 d-table-cell border\">\n    .col-2 .d-table-cell\n  </div>\n</div>\n```\n\n## Flexbox grids\n\nYou can use [flex utilities](/css/utilities/flexbox) on the container and columns to create a flexbox grid.\n\nThis can be useful for keeping columns the same height, justifying content and vertically aligning items. The flexbox grid is also great for working with responsive layouts.\n\n```html title=\"Flexbox grid\"\n<div class=\"d-flex flex-column flex-md-row flex-items-center flex-md-items-center\">\n  <div class=\"col-2 d-flex flex-items-center flex-items-center flex-md-items-start\">\n    <img class=\"width-full avatar mb-2 mb-md-0\" src=\"https://github.com/github.png\" alt=\"github\" />\n  </div>\n  <div class=\"col-12 col-md-10 d-flex flex-column flex-justify-center flex-items-center flex-md-items-start pl-md-4\">\n    <h1 class=\"text-normal lh-condensed\">GitHub</h1>\n    <p class=\"h4 text-gray text-normal mb-2\">How people build software.</p>\n    <a class=\"text-gray text-small\" href=\"#url\">https://github.com/about</a>\n  </div>\n</div>\n```\n\n\n## Responsive grids\nAll the column width classes can be set per breakpoint to create responsive grid layouts. Each responsive style is applied to the specified breakpoint and up.\n\n### Breakpoints\nWe use abbreviations for each breakpoint to keep the class names concise.\n\n| Shorthand | Description |\n| --- | --- |\n| sm | min-width: 544px |\n| md | min-width: 768px |\n| lg | min-width: 1004px |\n| xl | min-width: 1280px |\n\n**Note:** The `lg` breakpoint matches our current page width of `980px` including left and right padding of `12px`. This is so that content doesn't touch the edges of the window when resized.\n\n<hr />\n\nIn this example at the `sm` breakpoint 2 columns will show, at the `md` breakpoint 4 columns will show, and at the `lg` breakpoint 6 columns will show.\n\n```html title=\"Responsive grid\"\n<div class=\"container-lg clearfix\">\n  <div class=\"col-sm-6 col-md-3 col-lg-2 float-left p-2 border\">\n    .col-sm-6 .col-md-3 .col-lg-2\n  </div>\n  <div class=\"col-sm-6 col-md-3 col-lg-2 float-left p-2 border\">\n    .col-sm-6 .col-md-3 .col-lg-2\n  </div>\n  <div class=\"col-sm-6 col-md-3 col-lg-2 float-left p-2 border\">\n    .col-sm-6 .col-md-3 .col-lg-2\n  </div>\n  <div class=\"col-sm-6 col-md-3 col-lg-2 float-left p-2 border\">\n    .col-sm-6 .col-md-3 .col-lg-2\n  </div>\n  <div class=\"col-sm-6 col-md-3 col-lg-2 float-left p-2 border\">\n    .col-sm-6 .col-md-3 .col-lg-2\n  </div>\n  <div class=\"col-sm-6 col-md-3 col-lg-2 float-left p-2 border\">\n    .col-sm-6 .col-md-3 .col-lg-2\n  </div>\n</div>\n```\n\nFor demonstration, this is how the above example would look at the `sm` breakpoint.\n\n```html title=\"Responsive grid small\"\n<div class=\"container-lg clearfix\">\n  <div class=\"col-sm-6 float-left p-2 border\">\n    .col-sm-6\n  </div>\n  <div class=\"col-sm-6 float-left p-2 border\">\n    .col-sm-6\n  </div>\n  <div class=\"col-sm-6 float-left p-2 border\">\n    .col-sm-6\n  </div>\n  <div class=\"col-sm-6 float-left p-2 border\">\n    .col-sm-6\n  </div>\n  <div class=\"col-sm-6 float-left p-2 border\">\n    .col-sm-6\n  </div>\n  <div class=\"col-sm-6 float-left p-2 border\">\n    .col-sm-6\n  </div>\n</div>\n```\nThis is how that same example would look at the `md` breakpoint.\n\n```html title=\"Responsive grid medium\"\n<div class=\"container-lg clearfix\">\n  <div class=\"col-md-3 float-left p-2 border\">\n    .col-md-3\n  </div>\n  <div class=\"col-md-3 float-left p-2 border\">\n    .col-md-3\n  </div>\n  <div class=\"col-md-3 float-left p-2 border\">\n    .col-md-3\n  </div>\n  <div class=\"col-md-3 float-left p-2 border\">\n    .col-md-3\n  </div>\n  <div class=\"col-md-3 float-left p-2 border\">\n    .col-md-3\n  </div>\n  <div class=\"col-md-3 float-left p-2 border\">\n    .col-md-3\n  </div>\n</div>\n```\n\nThis is how that example would look at the `lg` breakpoint.\n\n```html title=\"Responsive grid large\"\n<div class=\"container-lg clearfix\">\n  <div class=\"col-lg-2 float-left p-2 border\">\n    .col-lg-2\n  </div>\n  <div class=\"col-lg-2 float-left p-2 border\">\n    .col-lg-2\n  </div>\n  <div class=\"col-lg-2 float-left p-2 border\">\n    .col-lg-2\n  </div>\n  <div class=\"col-lg-2 float-left p-2 border\">\n    .col-lg-2\n  </div>\n  <div class=\"col-lg-2 float-left p-2 border\">\n    .col-lg-2\n  </div>\n  <div class=\"col-lg-2 float-left p-2 border\">\n    .col-lg-2\n  </div>\n</div>\n```\n\n## Containers\nContainer widths match our breakpoints and are available at a `sm`, `md`, `lg`, and `xl` size. Containers apply a max-width rather than a fixed width for responsive layouts, and they center the container.\n\n```html title=\"Containers sized\"\n<div class=\"container-sm border\">\n  .container-sm, max-width 544px\n</div>\n\n<div class=\"container-md border\">\n  .container-md, max-width 768px\n</div>\n\n<div class=\"container-lg border\">\n  .container-lg, max-width 1012px\n</div>\n\n<div class=\"container-xl border\">\n  .container-xl, max-width 1280px\n</div>\n```\n"
  },
  "principles/accessibility": {
    "title": "Accessibility",
    "path": "principles/accessibility",
    "content": "\nAccessibility is everyone’s responsibility, and the purpose of this document is to provide general accessibility guidelines to developers and designers.\n\n{:toc}\n\n## Overview\n\nOur products should be accessible to all. At minimum, features should comply to the requirements listed in [508 Reference Guide - 1194.22](https://www.access-board.gov/guidelines-and-standards/communications-and-it/about-the-section-508-standards/guide-to-the-section-508-standards/web-based-intranet-and-internet-information-and-applications-1194-22) from the  US Access Board, and conform to [Web Content Accessibility Guidelines 2.0](https://www.w3.org/TR/WCAG20/#conformance) at Level AA.\n\nMaking our products accessible benefits everyone, not just people with disabilities. Below are some examples of use cases in which accessibility is important:\n\n- **Visual**: blindness, low vision, color blindness, using a screen reader or related assistive tech for lifestyle reasons (e.g. long car commute), machine readability and screen scraping technologies\n\n- **Hearing**: deafness, hearing impairment, speech impairment, using closed captioning or other assistive features for lifestyle reasons (e.g. coworking in a loud coffee shop)\n\n- **Cognitive**: including short-term memory issues, dyslexia, learning disabilities, trying to work or consume content while distracted or multitasking, etc.\n\n- **Mobility**: mobility impairments, repetitive stress injuries, power users who love keyboard shortcuts, busy parents holding a sleeping child while trying to operate a computer with one hand, etc.\n\n## General guidelines\n\n### Semantic markup\n\nAlways use semantic HTML elements, like `button`, `ul`, `nav`. Most modern browsers implement the accessibility features outlined in the specs for these elements; without them, elements will need additional [ARIA attributes and roles](https://www.w3.org/WAI/PF/aria) to be recognized by assistive technologies.\n\nElements like `h1`-`h6`, `nav`, `footer`, `header` have [meaningful roles](https://www.w3.org/WAI/PF/aria/roles) assigned, so use them, and use them carefully. This can help assistive technologies read the page better and help users find information quicker.\n\nOnly use a `div` or a `span` to markup up content when there isn't another HTML element that would semantically be more appropriate, or when an element is needed exclusively for applying CSS styles or JS behaviors.\n\n```html\n<!-- Do: Button can be focused and tabbed to. -->\n<button type=\"button\" class=\"btn\">Send</button>\n```\n\n```html\n<!-- Don't: Button can't be focused and tabbed to. -->\n<span class=\"btn\">Send</span>\n```\n\n> More on semantic markup:\n>\n> - [Semantic Structure – WebAIM](http://webaim.org/techniques/semanticstructure/)\n\n### Keyboard accessibility\n\nMake sure elements can be reached via tabbing, and actions can be triggered with a keyboard. Using semantic markup is especially important in this case as it ensures that actionable elements are tabbable and triggerable without a mouse. Note that elements positioned off-screen are still tabbable, but those hidden with `display: none` or `visibility: hidden` are effectively removed from content since they are neither read by screen readers nor reachable by keyboard.\n\nTab order is determined by the order of elements in the DOM, and not by their visual positioning on the page after CSS is applied. CSS properties `float` and `order` for flex items are two common sources for disconnection between visual and DOM order.\n\nThe `tabindex` attribute should only be used when absolutely necessary.\n\n- `tabindex=0/-1` makes an element focusable, while `tabindex=0` also includes the element in the normal tab order. In both cases, keyboard triggers of the element still require scripting, so where possible, use [interactive content](http://w3c.github.io/html/dom.html#kinds-of-content-interactive-content) instead.\n\n- `tabindex=1+` takes an element to the very front of the default tab order. When it's applied, the element's visual positioning is no longer indicative of its tab order, and the only way to find out where an element is would be by tabbing through the page. Therefore, unless a page is carefully designed around elements with positive tabindex, it is very error-proned, and thus currently prohibited in github.com.\n\nFinally, bear in mind that some assistive technologies have keyboard combinations of their own that will override the combination on the web page, so don't rely on keyboard shortcuts as the only alternative to mouse actions.\n\n```html\n<!-- Do: Tab order can be guessed. -->\n<button type=\"button\" class=\"btn\">1</button>\n<button type=\"button\" class=\"btn\">2</button>\n<button type=\"button\" class=\"btn\">3</button>\n```\n\n```html\n<!-- Don't: The second button's tab order is unexpected. -->\n<button type=\"button\" class=\"btn\">1</button>\n<button type=\"button\" class=\"btn\" tabindex=\"1\">2</button>\n<button type=\"button\" class=\"btn\">3</button>\n```\n\n> More on keyboard accessibility:\n>\n> - [Focus Order – Understanding WCAG 2.0](https://www.w3.org/TR/UNDERSTANDING-WCAG20/navigation-mechanisms-focus-order.html)\n> - [Time to revisit accesskey? by Léonie Watson](http://tink.uk/time-to-revisit-accesskey/)\n> - [Flexbox & the keyboard navigation disconnect by Léonie Watson](http://tink.uk/flexbox-the-keyboard-navigation-disconnect/)\n\n### Visual accessibility\n\nBe mindful when using small font size, thin font weight, low contrast colors in designs as it can severely affect usability.\n\nInstead of relying solely on color to communicate information, always combine color with another factor, like shape or position change. This is important because some colors can be hard to tell apart due to color blindness or weak eyesight.\n\n> More on visual accessibility:\n>\n> - [Use of Color – Understanding WCAG 2.0](https://www.w3.org/TR/UNDERSTANDING-WCAG20/visual-audio-contrast-without-color.html)\n> - [Contrast – Understanding WCAG 2.0](http://www.w3.org/TR/UNDERSTANDING-WCAG20/visual-audio-contrast-contrast.html)\n\n### Text and labels\n\nMake sure text-based alternative is always available when using icons, images, and graphs, and that the text by itself presents meaningful information.\n\n```html\n<!-- Do: Link text communicates destination. -->\n<p>Find out more about <a href=\"#url\">GitHub Enterprise pricing</a>.<br></p>\n```\n\n```html\n<!-- Don't: \"Click here\" is not meaningful. -->\n<p>To find out more about GitHub Enterprise pricing, <a href=\"#url\">click here</a>.</p>\n```\n\nUse `title` to add information on top of existing content.\n\n```html\n<a title=\"@octocat's repositories\" href=\"https://github.com/octocat?tab=repositories\">octocat</a>\n```\n\nUse `aria-label` when there is no text.\n\n```html\n<a href=\"https://help.github.com/\"><%= octicon(\"question\", :\"aria-label\" => \"Help\") %></a>\n```\n\n### Link responsibly\n\nNavigating from a list of all the links on a given web page is very common for assistive technology users. We should make sure that the link text itself is meaningful and unique, and there should be as few duplicated references as possible.\n\n> More on link responsibly:\n>\n> - [Link Purpose – Understanding WCAG 2.0](https://www.w3.org/TR/UNDERSTANDING-WCAG20/navigation-mechanisms-refs.html)\n\n### Dynamic content\n\nWhen using JavaScript to change the content on the page, always make sure that screen reader users are informed about the change. This can be done with `aria-live`, or focus management.\n\n> More on dynamic content:\n>\n> - [ARIA Live Regions – MDN](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Live_Regions)\n\n### Focus management\n\nFocus management is useful for informing users about updated content, and for making sure users land on the next useful section after performing an action. This means using scripts to change user’s currently focused element, and when focus changes, screen readers will read out change.\n\n### Accessible forms\n\nIt is common for assistive technology users to jump straight to a form when using a website, so make sure most relevant information is in the form and is labelled properly. Labels and inputs should be associated with the `label[for]` and `input[id]`, and help texts should either be part of the label or be associated with `aria-describedby`.\n\n```html\n<!-- Do: Click \"Email\" label to focus on the input, and help text is read out by screen readers when focusing on the input. -->\n<label for=\"test_input\">Email</label><br>\n<input id=\"test_input\" aria-describedby=\"test_input_help_good\" class=\"width-full my-1\" type=\"email\">\n<div id=\"test_input_help_good\" class=\"f6\">Please enter an email ending with @github.com.</div>\n```\n\n```html\n<!-- Don't: Input and label are not associated, and help text is not read out by screen reader when focusing on the input. -->\n<label>Email</label><br>\n<input type=\"email\" class=\"width-full my-1\">\n<div id=\"test_input_help_bad\" class=\"f6\">Please enter an email ending with @github.com.</div>\n```\n\n## Development tools\n\n### Linting\n\nWe currently run basic linting [against positive `tabindex`](https://github.com/github/github/blob/8546895623677abc70f61951642f32c16de231a1/test/fast/linting/accessible_tabindex_test.rb) and [anchor links with `href=\"#\"`](https://github.com/github/github/blob/8546895623677abc70f61951642f32c16de231a1/test/rubocop/cop/rails/link_href.rb).\n\nWe do client side scanning of inaccessible elements in development environment. The inaccessible elements will be styled with red borders with an onclick alert and console warnings.\n\n### External tools\n\n- Google Chrome provides an [Accessibility Developer Tools extension](https://chrome.google.com/webstore/detail/accessibility-developer-t/fpkknkljclfencbdbgkenhalefipecmb). Once installed, go to Audits tab in developer tools, tick Accessibility. It scans the page for violations and suggests solutions.\n\n- If you're working on a design that uses color to communicate something, grab the [Chromatic Vision Simulator app](https://itunes.apple.com/tw/app/chromatic-vision-simulator/id389310222?mt=8), this will let you use your iPhone camera to see what a colorblind person would see.\n\n- Check out [the Web Accessibility showcase on GitHub](https://github.com/showcases/web-accessibility). GitHubbers are free to  add more projects to the showcase.\n\n## Manual testing\n\n### Screen reader\n\nTo use VoiceOver, the built-in screen reader for Mac, just hit <kbd>⌘</kbd> + <kbd>F5</kbd>. This will start voice narration and display most of the spoken information in a text box.\n\nUse <kbd>alt</kbd> + <kbd>control</kbd> + <kbd>left/right</kbd> to navigate a web page. <kbd>alt</kbd> + <kbd>control</kbd> + <kbd>space</kbd> to click on an element. For more help with VoiceOver, check out the built-in tutorial in `System Preferences > Accessibility > VoiceOver > Open VoiceOver Training`.\n\nKeep in mind that behaviors in different screen readers can differ when navigating the same web page; just like designing for different browsers, when it comes to accessibility, it is not just the implementation of the browsers that can be different, but also the ones of assistive softwares.\n\n## Internal resources\n\n1. You can mention these teams when looking for help:\n\n  - [@github/accessibility](https://github.com/orgs/github/teams/accessibility): GitHubbers interested in accessibility related topics and work on website accessibility issues.\n  - [@github/colorblind](https://github.com/orgs/github/teams/colorblind): GitHubbers who are interested in accessibility for colorblindness.\n\n2. Go to #accessibility Slack channel to ask questions or discuss accessibility issues.\n3. Check [github/accessibility repository](https://github.com/github/accessibility) for information on events or learning resources.\n\n## User support\n\nAccessibility is a priority for us, if you ever encounter accessibility related issues when using github.com, please don’t hesitate to reach out to us via [the contact page](https://github.com/contact) or email us at [support@github.com](mailto:support@github.com), we will try our best to assist.\n\nFor information about the accessibility compliance of GitHub products, please refer to our [VPAT report, outlining §508 accessibility information for GitHub.com, GitHub Enterprise, and GitHub Desktop](https://government.github.com/accessibility/).\n"
  },
  "principles/index": {
    "title": "Principles",
    "path": "principles/index",
    "content": "\nThe CSS styleguide enables us to create a consistent user experience across GitHub, manage CSS bloat, and make our CSS easier to maintain. These principles should serve as guidelines for how we write and use CSS.\n\n{:toc}\n\n\n## Styleguide driven design and development\n\nEvery time new CSS is added it increases our CSS bloat, CSS maintenance, and can add to inconsistencies in the user experience of our site. If we follow a practice of designing with styles in the styleguide first and try to implement our designs with only styles in the style guide first, we reduce the risk of deviating away from these styles.\n\n_If new styles are needed:_\n* Use global variables where appropriate, such as spacing, typography, and color variables.\n* Write styles in a way that can be folded back into the global style guide should it become a common pattern, i.e. following our principles for naming conventions, components, objects, and utilities as listed below.\n\n\n## Obvious and transparent\n\nMany designers and developers will edit and add to our CSS. Write CSS in a way that make it obvious and transparent what the CSS does, and support with comments wherever needed.\n\n**Class names:**\n\n* Use class names that make it easy to understand what styles are being applied.\n* Keep naming conventions consistent so that it's easier to internalize and understand class names. For components follow the [BEM-style syntax](#bem-style-naming-and-structure) described below.\n* Don't use class names that suggest the styles do one thing, but instead have hidden properties.\n* Use presentational or functional class names and avoid tying class names for global styles to as specific page or feature.\n\n```scss\n// Do\n.bg-white { background-color: #fff; }\n\n.box {\n  border-radius: 3px;\n  border: 1px solid #ddd;\n}\n\n// Don't\n.bg-white {\n  color: #111;\n  background-color: #fff;\n  border: #ccc;\n}\n\n.teams-side-panel {\n  width: 330px;\n  border-radius: 3px;\n  border: 1px solid #ddd;\n}\n```\n\n\n**Sass:**\n\n* Choose verbose over clever. A little duplication is worthwhile if it adds clarity.\n* Don't prioritize being DRY if  it means it's hard to read and understand, creates dependencies, or hides what the code is really doing.\n*  Avoid overusing pre-processor features that make the code less approachable. Keep it CSS'y and limit the use of Sass features like nesting, variables, functions. For more detail on this check out our [Sass guidelines and lint rules](/css/principles/scss).\n\n\n## Components\n\nComponents make it easier to mark up a set of elements that are commonly grouped together with similar visual styles. Their base styles are shared and variants are added with modifier classes, so usually components are comprised of multiple classes. Most importantly, components should be highly reusable across the site, rather than built for specific pages or features. To achieve this:\n\n* **Separate structure and skin:** This means to define repeating visual features (like background and border styles) as separate “skins” that you can mix-and-match with your various components to achieve a large amount of visual variety without much code.\n* **Separate container and content:** Essentially, this means “rarely use location-dependent styles”. A component should look the same no matter where you put it.\n\n```scss\n// structure\n.flash {...}\n\n// skin\n.flash-error {...}\n```\n\n## Objects\n\nObjects help us with common layout patterns but aren't concerned with thematic styles. Examples include the table object, the grid, and the media object. Objects essentially provide some scaffolding for layouts and should be able to be used with other objects, components, and utilities.\n\nExample:\n\n```html\n<div class=\"TableObject\">\n  <div class=\"TableObject-item TableObject-item--primary\">\n    <input class=\"input-block\" type=\"text\" placeholder=\"Long flexible input form\">\n  </div>\n  <div class=\"TableObject-item\">\n    <button class=\"btn ml-3\" type=\"button\">Button</button>\n  </div>\n</div>\n```\n\n## BEM-style naming and structure\n\nComponents and objects should follow the [Block Element Modifier](http://csswizardry.com/2013/01/mindbemding-getting-your-head-round-bem-syntax/) (BEM) model in terms of structure. We've chosen to use a modified form of BEM syntax using [PascalCase](https://en.wikipedia.org/wiki/PascalCase) for the block name, hyphens and lowercase or elements, and double-hyphens and lowercase for modifiers. When a Block class requires two words use PascalCase, for example `ProgressBar`.\n\n* **Block**: A block includes all of the base styles you want shared across every variation of a component. Minimal thematic styling should be applied to blocks, particularly when variations of a component include visual variations. Apply additional styles with modifers rather than overriding base styles.\n* **Element**: An element is part of a component. Elements should work together with other elements and can have modifiers. Element styles should not override block styles - this often results in applying more styles directly to elements rather than having styles flow down from the parent level.\n* **Modifier**: A modifier is a variation that can be applied to the base component or to an element within the component. Modifiers shouldn't override block styles, they should add onto them.\n\n```scss\n// block\n.Box {...}\n\n// elements\n.Box-header {...}\n.Box-body {...}\n.Box-footer {...}\n\n// modifiers\n.Box--blue {...}\n.Box--red {...}\n.Box-header--large {...}\n```\n\n## Property order\nFor base styles, components, and objects, follow the following property order.\n\n```scss\n.element {\n  // 1. Positioning\n  // 2. Box model (display, float, width, etc)\n  // 3. Typography (font, line-height, text-*)\n  // 4. Visuals (background, border, opacity)\n  // 5. Misc (CSS3 properties)\n}\n```\n\n\n## Utilities\nUtilities provide the building blocks for layout and handle a range common use cases that help us avoid writing custom styles. When we need to add some margin or padding, rather than adding a new selector specific to that use case, we can use utilities. This helps us reduce the number of unique property-value pairs, and helps us keep more consistent styles across the site.\n\n* Utilities should do one job well and one job only, are immutable, and on occasion are an acceptable approach to overriding component styles.\n* Utility class-names should be transparent and clearly describe the job they do.\n\nExamples:\n\n```scss\n.text-white { color: #fff !important; }\n\n.bg-gray-light { background-color: #ddd !important; }\n\n.mr-1 { margin-right: $spacer !important; }\n\n.d-inline-block { display: inline-block !important; }\n\n.rounded { border-radius: 3px !important; }\n```\n\n\n\n## Feature-specific Sass\n\nIt's inevitable that we'll need to write some custom styles for new features on occasion. This should only be done when implementing the design cannot be achieved with utility or component styles. Follow these guidelines when writing custom Sass:\n\n* Don't override global component and utility styles.\n* Name-space to the feature at the beginning of the classname and follow with the element description.\n* Write custom styles in a way that may be folded back into the styleguide should the pattern become useful across the site, i.e. follow BEM structure for building components.\n\n```scss\n// Do\n// Custom background for Git Merge ad\n.git-merge-box {\n  padding: $spacer-6;\n  background-color: #222;\n  border-radius: 3px;\n}\n\n// Don't\n.git-merge-box {\n  .boxed-group {\n    padding: 48px;\n    background-color: #222;\n  }\n}\n```\n\n\n## Inline styles\n\nInline styles are performant and deal with one off use cases that don't need to live in CSS. Sometimes it will make more sense to add an inline style than write a new line of CSS that will live on in our codebase longer than the markup will.\n\nThe most common use case is for applying widths and heights to images. Other use cases might be to apply a custom width to a div to work with it's content.\n\n```html\n<!-- Image width and height -->\n<img width=\"20\" height=\"20\" src=\"https://github.com/github.png\">\n\n<!-- Custom width for a div that is not a repeated pattern -->\n<div class=\"d-table-cell py-3 pr-3\" style=\"width: 72px\">\n```\n\n## Further reading\n\nThere's a lot happening in the world of front-end web development! To help you understand our principles better, we've put together a list articles that reflect our thinking and influenced our decisions.\n\n**[About HTML semantics and front-end architecture](http://nicolasgallagher.com/about-html-semantics-front-end-architecture/)**<br/>\nThis article contains a collection of thoughts on HTML semantics, components and approaches to front-end architecture, class naming patterns, and HTTP compression. Many of the concepts covered here have been adopted as best practices in modern front-end development. This is a must read!\n\n**[BEMantic: DRY Like You Mean It](https://medium.com/@stowball/bemantic-dry-like-you-mean-it-133ea3843d98#.snpgwck6f)**<br/>\nA case for taking an object oriented approach to writing CSS using Sass and BEM.\n\n**[The media object saves hundreds of lines of code](http://www.stubbornella.org/content/2010/06/25/the-media-object-saves-hundreds-of-lines-of-code/)**<br/>\nThe media object&mdash;a block with an image on the left and content on the right&mdash;is an extremely common pattern on web pages. This article explores ways to write a flexible and versatile media object, and is a great example of how an object oriented CSS approach can help you write more reusable code.\n\n**[OOCSS wiki](https://github.com/stubbornella/oocss/wiki)**<br/>\nThe Object Oriented CSS framework is a collection of code that’s built using the OOCSS approach. The OOCSS approach is a way of writing CSS that’s fast, maintainable, and standards-based. This framework can help you get started.\n\n**[The Importance of !important: Forcing Immutability in CSS](http://csswizardry.com/2016/05/the-importance-of-important/)**<br/>\nThis article is a case for using the `!important` flag in CSS, and describes the best ways to use it.\n\n**[The Specificity Graph](http://csswizardry.com/2014/10/the-specificity-graph/)**<br/>\nThis is a guide to organizing your project's CSS selectors by specificity. Using the specificity graph, you can plot the health of a project's CSS and identify areas with higher-than-ideal specificity.\n\n**[CSS Guidelines](http://cssguidelin.es/)**<br/>\nHigh-level advice and guidelines for writing sane, manageable, scalable CSS.\n\n**[WTF, HTML and CSS?](http://wtfhtmlcss.com/)**<br/>\nA curated list of commonly frustrating HTML and CSS quandaries, miscues, and dilemmas.\n\n**[Solved by flexbox](https://philipwalton.github.io/solved-by-flexbox/)**<br/>\nA showcase of problems once hard or impossible to solve with CSS alone, now made trivially easy with Flexbox.\n"
  },
  "utilities/colors": {
    "title": "Colors",
    "path": "utilities/colors",
    "content": "\nimport colors from 'primer-colors'\nimport {Box} from '@primer/components'\nconst Swatch = props => <Box mt={2} height={60} {...props} />\n\nUse color utilities to apply color to the background of elements, text, and borders.\n\n* [Background colors](#background-colors)\n* [Text colors](#text-colors)\n* [Link colors](#link-colors)\n* [Border colors](#border-colors)\n\n## Background colors\n\nBackground colors are most commonly used for filling large blocks of content or areas with a color. When selecting a background color, make sure the foreground color contrast passes a minimum WCAG accessibility rating of [level AA](https://www.w3.org/TR/UNDERSTANDING-WCAG20/visual-audio-contrast-contrast.html). Meeting these standards ensures that content is accessible by everyone, regardless of disability or user device. You can [check your color combination with this demo site](http://jxnblk.com/colorable/demos/text/). For more information, read our [accessibility standards](../principles/accessibility).\n\n### Gray\n\n<div class=\"container-lg clearfix mb-4\">\n  <div class=\"col-3 float-left pr-4\">\n    <div class=\"h4\">.bg-gray</div>\n    <code>{colors.gray[1]}, $bg-gray</code>\n    <Swatch className=\"bg-gray\" />\n  </div>\n  <div class=\"col-9 float-left\">\n    <div class=\"container-lg clearfix\">\n      <div class=\"col-6 float-left\">\n        <div class=\"h4\">.bg-gray-dark</div>\n        <code>{colors.gray[9]}, $bg-gray-dark</code>\n        <Swatch className=\"bg-gray-dark border-right-0\" />\n      </div>\n      <div class=\"col-6 float-left\">\n        <div class=\"h4\">.bg-gray-light</div>\n        <code>{colors.gray[0]}, $bg-gray-light</code>\n        <Swatch className=\"bg-gray-light\" />\n      </div>\n    </div>\n  </div>\n</div>\n\n### Blue\n\n<div class=\"container-lg clearfix mb-4\">\n  <div class=\"col-3 float-left pr-4\">\n    <div class=\"h4\">.bg-blue</div>\n    <code>{colors.blue[5]}, $bg-blue</code>\n    <Swatch className=\"bg-blue\" />\n  </div>\n  <div class=\"col-9 float-left\">\n    <div class=\"container-lg clearfix\">\n      <div class=\"h4\">.bg-blue-light</div>\n      <code>{colors.blue[0]}, $bg-blue-light</code>\n      <Swatch className=\"bg-blue-light\" />\n    </div>\n  </div>\n</div>\n\n### Yellow\n\n<div class=\"container-lg clearfix mb-4\">\n  <div class=\"col-3 float-left pr-4\">\n    <div class=\"h4\">.bg-yellow</div>\n    <code>{colors.yellow[5]}, $bg-yellow</code>\n    <Swatch className=\"bg-yellow\" />\n  </div>\n  <div class=\"col-9 float-left\">\n    <div class=\"container-lg clearfix\">\n      <div class=\"h4\">.bg-yellow-light</div>\n      <code>{colors.yellow[2]}, $bg-yellow-light</code>\n      <Swatch className=\"bg-yellow-light\" />\n    </div>\n  </div>\n</div>\n\n### Red\n\n<div class=\"container-lg clearfix mb-4\">\n  <div class=\"col-3 float-left pr-4\">\n    <div class=\"h4\">.bg-red</div>\n    <code>{colors.red[5]}, $bg-red</code>\n    <Swatch className=\"bg-red\" />\n  </div>\n  <div class=\"col-9 float-left\">\n    <div class=\"container-lg clearfix\">\n      <div class=\"h4\">.bg-red-light</div>\n      <code>{colors.red[1]}, $bg-red-light</code>\n      <Swatch className=\"bg-red-light\" />\n    </div>\n  </div>\n</div>\n\n### Green\n\n<div class=\"container-lg clearfix mb-4\">\n  <div class=\"col-3 float-left pr-4\">\n    <div class=\"h4\">.bg-green</div>\n    <code>{colors.green[5]}, $bg-green</code>\n    <Swatch className=\"bg-green\" />\n  </div>\n  <div class=\"col-9 float-left\">\n    <div class=\"container-lg clearfix\">\n      <div class=\"h4\">.bg-green-light</div>\n      <code>{colors.green[1]}, $bg-green-light</code>\n      <Swatch className=\"bg-green-light\" />\n    </div>\n  </div>\n</div>\n\n\n### Purple\n\n<div class=\"container-lg clearfix mb-4\">\n  <div class=\"col-3 float-left pr-4\">\n    <div class=\"h4\">.bg-purple</div>\n    <code>{colors.purple[5]}, $bg-purple</code>\n    <Swatch className=\"bg-purple\" />\n  </div>\n  <div class=\"col-9 float-left\">\n    <div class=\"container-lg clearfix\">\n      <div class=\"h4\">.bg-purple-light</div>\n      <code>{colors.purple[0]}, $bg-purple-light</code>\n      <Swatch className=\"bg-purple-light\" />\n    </div>\n  </div>\n</div>\n\n## Text colors\n\nUse text color utilities to set text or [Octicons](https://octicons.github.com) to a specific color. Color contrast must pass a minimum WCAG accessibility rating of [level AA](https://www.w3.org/TR/UNDERSTANDING-WCAG20/visual-audio-contrast-contrast.html). This ensures that viewers who cannot see the full color spectrum are able to read the text. To customize outside of the suggested combinations below, we recommend using this [color contrast testing tool](http://jxnblk.com/colorable/demos/text/). For more information, read our [accessibility standards](../principles/accessibility).\n\nThese are our most common text with background color combinations. They don't all pass accessibility standards currently, but will be updated in the future. **Any of the combinations with a warning icon must be used with caution**.\n\n### Text color inheritance\n\nYou can set the color inheritance on an element by using the `text-inherit` class.\n\n```html\n<div class=\"text-purple\">\n  This text is purple, <a href=\"#\" class=\"text-inherit\">including the link</a>\n</div>\n```\n\n### Text on white background\n\n```html\n<div class=\"text-blue mb-2\">\n  .text-blue on white\n</div>\n<div class=\"text-gray-dark mb-2\">\n  .text-gray-dark on white\n</div>\n<div class=\"text-gray mb-2\">\n  .text-gray on white\n</div>\n<div class=\"text-red mb-2\">\n  .text-red on white\n</div>\n<div class=\"text-orange mb-2\">\n  .text-orange on white\n</div>\n<span class=\"float-left text-red tooltipped tooltipped-n\" aria-label=\"Does not meet accessibility standards\"><%= octicon(\"alert\") %></span>\n<div class=\"text-orange-light mb-2\">\n  .text-orange-light on white\n</div>\n<span class=\"float-left text-red tooltipped tooltipped-n\" aria-label=\"Does not meet accessibility standards\"><%= octicon(\"alert\") %></span>\n<div class=\"text-green mb-2 ml-4\">\n  .text-green on white\n</div>\n<div class=\"text-purple mb-2\">\n  .text-purple on white\n</div>\n```\n\n### Text on colored backgrounds\n\n```html\n<div class=\"text-white bg-blue mb-2\">\n  .text-white on .bg-blue\n</div>\n<div class=\"bg-blue-light mb-2\">\n  .text-gray-dark on .bg-blue-light\n</div>\n<div class=\"text-white bg-red mb-2\">\n  .text-white on .bg-red\n</div>\n<div class=\"text-red bg-red-light mb-2\">\n  .text-red on .bg-red-light\n</div>\n<div class=\"bg-green-light mb-2\">\n  .text-gray-dark on .bg-green-light\n</div>\n<div class=\"bg-yellow mb-2\">\n  .text-gray-dark on .bg-yellow\n</div>\n<div class=\"bg-yellow-light mb-2\">\n  .text-gray-dark on .bg-yellow-light\n</div>\n<div class=\"text-white bg-purple mb-2\">\n  .text-white on .bg-purple\n</div>\n<div class=\"text-white bg-gray-dark mb-2\">\n  .text-white on .bg-gray-dark\n</div>\n<div class=\"bg-gray\">\n  .text-gray-dark on .bg-gray\n</div>\n```\n\n## Link colors\n\nBase link styles turn links blue and apply an underline on hover. You can override the base link styles with text color utilities and the following link utilities. **Bear in mind that link styles are easier for more people to see and interact with when the changes in styles do not rely on color alone.**\n\nUse `link-gray` to turn the link color to `$text-gray` and remain hover on blue.\n\n```html\n<a class=\"link-gray\" href=\"#url\">link-gray</a>\n```\n\nUse `link-gray-dark` to turn the link color to `$text-gray-dark` and remain hover on blue.\n\n```html\n<a class=\"link-gray-dark\"  href=\"#url\">link-gray-dark</a>\n```\n\nUse `.muted-link` to turn the link light gray in color, and blue on hover or focus with no underline.\n\n```html\n<a class=\"muted-link\" href=\"#url\">muted-link</a>\n```\n\nUse `link-hover-blue` to make any text color used with links to turn blue on hover. This is useful when you want only part of a link to turn blue on hover.\n\n```html\n<a class=\"text-gray-dark no-underline\" href=\"#url\">\n  A link with only part of it is <span class=\"link-hover-blue\">blue on hover</span>.\n</a>\n```\n\n## Border colors\n\nBorder colors are documented on the [border utilities page](../utilities/borders#border-width-style-and-color-utilities).\n"
  },
  "utilities/layout": {
    "title": "Layout",
    "path": "utilities/layout",
    "content": "\nChange the document layout with display, float, alignment, and other utilities.\n\n{:toc}\n\n## Display\nAdjust the display of an element with `.d-block`, `.d-none`, `.d-inline`, `.d-inline-block`, `.d-table`, `.d-table-cell` utilities.\n\n```html\n<div class=\"d-inline border\">\n  .d-inline\n  <div class=\"d-inline-block border\">\n    .d-inline-block\n  </div>\n  <span class=\"d-block border\">.d-block</span>\n  <div class=\"d-table border\">\n    <div class=\"d-table-cell border\">\n      .d-table-cell\n    </div>\n  </div>\n  <div class=\"d-table-cell border\">\n    .d-table-cell\n  </div>\n  <div class=\"d-none\">\n    .d-none\n  </div>\n</div>\n```\n\n### The HTML `hidden` attribute\n\nAs of [Primer v10.10.0](https://github.com/primer/css/releases/v10.10.0), `primer-base` includes a rule that sets `display: none !important` for any element with the [`hidden` attribute][hidden]. You can safely use the `hidden` attribute with display utilities, but we suggest:\n\n1. Use the `hidden` attribute (and corresponding JavaScript property) if you're going to programmatically show and hide content.\n1. Use `d-none` and/or its responsive variants (`d-sm-block`, `d-lg-none`) to conditionally show content at different screen sizes.\n\nRather than toggling the `d-none` class in JavaScript, you should toggle the `hidden` property on an element. This means that you won't have to restore any more specific display utility (`d-inline` or `d-flex`, for instance) just to work around the order in which they're listed in the stylesheet.\n\n```js\n// Good:\nelement.hidden = !visible\n\n// Bad:\nelement.classList.toggle('d-none', !visible)\nelement.classList.toggle('d-inline', visible)\n```\n\n### `display:table` wrapping issues\n\nThere are known issues with using `display:table` and wrapping long strings, particularly in Firefox. You may need to use `table-fixed` on elements with `d-table` and apply column widths to table cells, which you can do with our [column width styles](/css/objects/grid#column-widths).\n\n```html\n<div class=\"d-table table-fixed width-full\">\n  <div class=\"d-table-cell border\">\n    .d-table-cell\n  </div>\n  <div class=\"d-table-cell col-10 border\">\n    d-table-cell .col-10\n  </div>\n</div>\n```\n\n### Responsive display\nA selection of display utilities are able to be applied or changed per [breakpoint](/css/objects/grid#breakpoints). `.d-block`, `.d-none`, `.d-inline`, and `.d-inline-block` are available as responsive utilities using the following formula: `d-[breakpoint]-[property]`. For example: `d-md-inline-block`. Each responsive display utility is applied to the specified breakpoint and up.\n\nIn the following example, the `ul` element switches from `display: block` on mobile to  `display: inline-block` at the `md` breakpoint, while the list items remain inline.\n\n```html\n<h5 class=\"d-md-inline-block\">.d-md-inline-block</h5>\n<ul class=\"d-md-inline-block border\">\n  <li class=\"d-inline border\">.d-inline</li>\n  <li class=\"d-inline border\">.d-inline</li>\n</ul>\n```\n\n### Responsive hide\nHide utilities are able to be applied or changed per breakpoint using the following formula:<br /> `hide-[breakpoint]`, for example: `hide-sm`. Hide utilities act differently from other responsive styles and are applied to each **breakpoint-range only**.\n\n| Shorthand | Range |\n| --- | --- |\n| -sm | 0—544px |\n| -md | 544px—768px |\n| -lg | 768px—1004px |\n| -xl | 1004px and above |\n\n```html\n<div>\n  <h3>Potato update</h3>\n  <span class=\"hide-sm hide-md\">Opened by <a href=\"#url\">broccolini</a></span>\n  <span class=\"d-md-none\">Updated</span> 3 hours ago\n</div>\n```\n\n### Text direction\n`.direction-ltr` or `.direction-rtl` can be used to change the text direction. This is especially helpful when paired with `.d-table`, `.d-table-cell`, and `.v-align-middle` to create equal height, vertically centered, alternating content.\n\n## Visibility\nAdjust the visibility of an element with `.v-hidden` and `.v-visible`.\n\n## Overflow\nAdjust element overflow with `.overflow-hidden`, `.overflow-scroll`, and `.overflow-auto`. `.overflow-hidden` can also be used to create a new [block formatting context](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Block_formatting_context) or clear floats.\n\nOverflow utilities can also target x- and y-axes independently via:\n\n* `.overflow-x-auto`\n* `.overflow-x-hidden`\n* `.overflow-x-scroll`\n* `.overflow-y-auto`\n* `.overflow-y-hidden`\n* `.overflow-y-scroll`\n\n## Floats\nUse `.float-left` and `.float-right` to set floats, and `.clearfix` to clear.\n```html\n<div class=\"clearfix border border-gray\">\n  <div class=\"float-left border border-gray\">\n    .float-left\n  </div>\n  <div class=\"float-right border border-gray\">\n    .float-right\n  </div>\n</div>\n```\n### Responsive floats\nFloat utilities can be applied or changed per [breakpoint](/css/objects/grid#breakpoints). This can be useful for responsive layouts when you want an element to be full width on mobile but floated at a larger breakpoint.\n\nEach responsive float utility is applied to the specified breakpoint and up, using the following formula:  `float-[breakpoint]-[property]`. For example: `float-md-left`. Remember to use `.clearfix` to clear.\n\n```html\n<div class=\"clearfix border border-gray\">\n  <div class=\"float-md-left border border-gray\">\n    .float-md-left\n  </div>\n  <div class=\"float-md-right border border-gray\">\n    .float-md-right\n  </div>\n</div>\n```\n\n## Alignment\nAdjust the alignment of an element with `.v-align-baseline`, `.v-align-top`, `.v-align-middle` or `.v-align-bottom`. The vertical-align property only applies to inline or table-cell boxes.\n\n```html\n<div class=\"d-table border border-gray\">\n  <div class=\"d-table-cell\"><h1>Potatoes</h1></div>\n  <div class=\"d-table-cell v-align-baseline\">.v-align-baseline</div>\n  <div class=\"d-table-cell v-align-top\">.v-align-top</div>\n  <div class=\"d-table-cell v-align-middle\">.v-align-middle</div>\n  <div class=\"d-table-cell v-align-bottom\">.v-align-bottom</div>\n</div>\n```\n\nUse `v-align-text-top` or `v-align-text-bottom` to adjust the alignment of an element with the top or bottom of the parent element's font.\n\n```html\n<div class=\"border border-gray\">\n  <h1 class=\"mr-1\">Potatoes\n    <span class=\"f4 v-align-text-top mr-1\">.v-align-text-top</span>\n    <span class=\"f4 v-align-text-bottom mr-1\">.v-align-text-bottom</span>\n  </h1>\n</div>\n```\n\n## Width and height\n\nUse `.width-fit` to set max-width 100%.\n\n```html\n<div class=\"one-fourth column\">\n  <img class=\"width-fit bg-gray\" src=\"https://github.com/github.png\" alt=\"width fitted octocat\" />\n</div>\n```\n\nUse `.width-full` to set width to 100%.\n\n```html\n<div class=\"d-table width-full\">\n  <div class=\"d-table-cell\">\n    <input class=\"form-control width-full\" type=\"text\" value=\"Full width form field\" aria-label=\"Sample full width form field\">\n  </div>\n</div>\n```\n\nUse `.height-fit` to set max-height 100%.\n\n```html\n<div class=\"one-fourth column\" style=\"height: 100px; overflow: auto;\">\n  <div class=\"p-3 height-fit border\">\n    Bacon ipsum dolor amet meatball flank beef tail pig boudin ham hock chicken capicola. Shoulder ham spare ribs turducken pork tongue. Bresaola corned beef sausage jowl ribeye kielbasa tenderloin andouille leberkas tongue. Ribeye tri-tip tenderloin pig, chuck ground round chicken tongue corned beef biltong.\n  </div>\n</div>\n```\n\nUse `.height-full` to set height to 100%.\n\n```erb\n<div class=\"d-table border border-gray\">\n  <div class=\"d-table-cell height-full v-align-middle pl-3\">\n    <%= octicon \"three-bars\" %>\n  </div>\n  <div class=\"p-3\">\n    Bacon ipsum dolor amet meatball flank beef tail pig boudin ham hock chicken capicola. Shoulder ham spare ribs turducken pork tongue. Bresaola corned beef sausage jowl ribeye kielbasa tenderloin andouille leberkas tongue. Ribeye tri-tip tenderloin pig, chuck ground round chicken tongue corned beef biltong.\n  </div>\n</div>\n```\n\n## Position\nPosition utilities can be used to alter the default document flow. **Be careful when using positioning, it's often unnecessary and commonly misused.**\n\nUse `.position-relative` to create a new stacking context.\n\n_Note how the other elements are displayed as if \"Two\" were in its normal position and taking up space._\n\n```html\n<div class=\"d-inline-block float-left bg-blue text-white m-3\" style=\"width:100px; height:100px;\">\n  One\n</div>\n<div class=\"d-inline-block float-left position-relative bg-blue text-white m-3\" style=\"width:100px; height:100px; top:12px; left:12px;\">\n  Two\n</div>\n<div class=\"d-inline-block float-left bg-blue text-white m-3\" style=\"width:100px; height:100px;\">\n  Three\n</div>\n<div class=\"d-inline-block float-left bg-blue text-white m-3\" style=\"width:100px; height:100px;\">\n  Four\n</div>\n```\n\nUse `.position-absolute` to take elements out of the normal document flow.\n\n```html\n<div class=\"position-relative\" style=\"height:116px;\">\n  <button type=\"button\" class=\"btn mb-1\">Button</button>\n  <div class=\"position-absolute border border-gray p-2\">\n    <a href=\"#url\" class=\"d-block p-1\">Mashed potatoes</a>\n    <a href=\"#url\" class=\"d-block p-1\">Fries</a>\n  </div>\n</div>\n```\n\nUse `.position-fixed` to position an element relative to the viewport. **Be careful when using fixed positioning. It is tricky to use and can lead to unwanted side effects.**\n\n_Note: fixed positioning has been disabled here for demonstration only._\n\n```html\n<div class=\"position-fixed bg-gray-light border-bottom border-gray p-3\">\n  .position-fixed\n</div>\n```\n\nUse `top-0`, `right-0`, `bottom-0`, and `left-0` with `position-absolute`, `position-fixed`, or `position-relative` to further specify an elements position.\n\n```html\n<div style=\"height: 64px;\">\n  <div class=\"border position-absolute top-0 left-0\">\n    .top-0 .left-0\n  </div>\n  <div class=\"border position-absolute top-0 right-0\">\n    .top-0 .right-0\n  </div>\n  <div class=\"border position-absolute bottom-0 right-0\">\n    .bottom-0 .right-0\n  </div>\n  <div class=\"border position-absolute bottom-0 left-0\">\n    .bottom-0 .left-0\n  </div>\n</div>\n```\n\nTo fill an entire width or height, use opposing directions.\n\n_Note: fixed positioning has been disabled here for demonstration only._\n\n```html\n<div class=\"position-fixed left-0 right-0 p-3 bg-gray-dark text-white\">\n  .position-fixed .left-0 .right-0\n</div>\n```\n\n### Responsive position\n\nPosition utilities can be applied or changed per breakpoint in responsive layouts. Each responsive position utility is applied to the specified breakpoint and up, using the following formula: `position-[breakpoint]-[property]`. For example: `position-md-absolute`.\n\n```html\n<div style=\"height: 64px;\">\n  <div class=\"border position-md-absolute top-0 right-0\">\n    .position-md-absolute .top-0 .right-0\n  </div>\n</div>\n```\n\n### Screen reader only\n\nUse `.sr-only` to position an element outside of the viewport for screen reader access only. **Even though the element can't be seen, make sure it still has a sensible tab order.**\n\n```html\n<div class=\"js-details-container Details\">\n  <button type=\"button\" class=\"btn\">Tab once from this button, and press enter</button>\n  <button type=\"button\" class=\"sr-only js-details-target\">\n    Screen reader only button\n  </button>\n  <div class=\"Details-content--hidden\">\n    Button activated!\n  </div>\n</div>\n```\n\n## The media object\n\nCreate a media object with utilities.\n\n```html\n<div class=\"clearfix p-3 border\">\n  <div class=\"float-left p-3 mr-3 bg-gray\">\n    Image\n  </div>\n  <div class=\"overflow-hidden\">\n    <p><b>Body</b> Bacon ipsum dolor amet shankle rump tenderloin pork chop meatball strip steak bresaola doner sirloin capicola biltong shank pig. Alcatra frankfurter ham hock, ribeye prosciutto hamburger kevin brisket chuck burgdoggen short loin.</p>\n  </div>\n</div>\n```\nCreate a double-sided media object for a container with a flexible center.\n\n```html\n<div class=\"clearfix p-3 border border-gray\">\n  <div class=\"float-left p-3 mr-3 bg-gray\">\n    Image\n  </div>\n  <div class=\"float-right p-3 ml-3 bg-gray\">\n    Image\n  </div>\n  <div class=\"overflow-hidden\">\n    <p><b>Body</b> Bacon ipsum dolor amet shankle rump tenderloin pork chop meatball strip steak bresaola doner sirloin capicola biltong shank pig. Alcatra frankfurter ham hock, ribeye prosciutto hamburger kevin brisket chuck burgdoggen short loin.</p>\n  </div>\n</div>\n```\n\nYou can also create a media object with [flexbox utilities](./flexbox#media-object) instead of floats which can be useful for changing the vertical alignment.\n\n[hidden]: https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/hidden\n"
  },
  "utilities/flexbox": {
    "title": "Flexbox",
    "path": "utilities/flexbox",
    "content": "\nFlex utilities can be used to apply `flexbox` behaviors to elements by using utility classes.\n\n{:toc}\n\n## Required reading\n\nBefore using these utilities, **you should be familiar with CSS3 Flexible Box spec**. If you are not, check out MDN's guide:\n\n:book: **[Using CSS Flexible Boxes](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flexible_Box_Layout/Using_CSS_flexible_boxes)**\n\n## Flex container\n\nUse these classes to make an element lay out its content using the flexbox model. Each **direct** child of the flex container will become a flex item.\n\n#### CSS\n\n```css\n.d-flex { display: flex; }\n.d-inline-flex { display: inline-flex; }\n```\n\n#### Classes\n\n| Class | Description |\n| --- | --- |\n| `.d-flex` | The element behaves like a block and lays out its content using the flexbox model. |\n| `.d-inline-flex` | The element behaves like an inline element and lays out its content using the flexbox model. |\n\n#### Example using `.d-flex`\n\n```html\n<!-- flex container -->\n<div class=\"border d-flex\">\n  <div class=\"p-5 border bg-gray-light\">flex item 1</div>\n  <div class=\"p-5 border bg-gray-light\">flex item 2</div>\n  <div class=\"p-5 border bg-gray-light\">flex item 3</div>\n</div>\n```\n\n#### Example using `.d-inline-flex`\n\n```html\n<!-- inline-flex container -->\n<div class=\"border d-inline-flex\">\n  <div class=\"p-5 border bg-gray-light\">flex item 1</div>\n  <div class=\"p-5 border bg-gray-light\">flex item 2</div>\n  <div class=\"p-5 border bg-gray-light\">flex item 3</div>\n</div>\n```\n\n## Flex direction\n\nUse these classes to define the orientation of the main axis (`row` or `column`). By default, flex items will display in a row. Use `.flex-column` to change the direction of the main axis to vertical.\n\n#### CSS\n\n```css\n.flex-row         { flex-direction: row; }\n.flex-row-reverse { flex-direction: row-reverse; }\n.flex-column      { flex-direction: column; }\n```\n\n#### Classes\n\n| Class | Description |\n| --- | --- |\n| `.flex-row` | The main axis runs left to right (default). |\n| `.flex-row-reverse` | The main axis runs right to left. |\n| `.flex-column` | The main axis runs top to bottom. |\n\n#### Example using `.flex-column`\n\n```html\n<div class=\"border d-flex flex-column\">\n  <div class=\"p-5 border bg-gray-light\">Item 1</div>\n  <div class=\"p-5 border bg-gray-light\">Item 2</div>\n  <div class=\"p-5 border bg-gray-light\">Item 3</div>\n</div>\n```\n\n#### Example using `.flex-row`\n\nThis example uses the responsive variant `.flex-md-row` to override `.flex-column` Learn more about responsive flexbox utilities **[here](#responsive-flex-utilities)**.\n\n```html\n<div class=\"border d-flex flex-column flex-md-row\">\n  <div class=\"p-5 border bg-gray-light\">Item 1</div>\n  <div class=\"p-5 border bg-gray-light\">Item 2</div>\n  <div class=\"p-5 border bg-gray-light\">Item 3</div>\n</div>\n```\n\n#### Example using `.flex-row-reverse`\n\nThis example uses the responsive variant `.flex-md-row-reverse` to override `.flex-column` Learn more about responsive flexbox utilities **[here](#responsive-flex-utilities)**.\n\n```html\n<div class=\"border d-flex flex-column flex-md-row-reverse\">\n  <div class=\"p-5 border bg-gray-light\">Item 1</div>\n  <div class=\"p-5 border bg-gray-light\">Item 2</div>\n  <div class=\"p-5 border bg-gray-light\">Item 3</div>\n</div>\n```\n\n## Flex wrap\n\nYou can choose whether flex items are forced into a single line or wrapped onto multiple lines.\n\n#### CSS\n\n```css\n.flex-wrap     { flex-wrap: wrap; }\n.flex-nowrap   { flex-wrap: nowrap; }\n```\n\n#### Classes\n\n| Class | Description |\n| --- | --- |\n| `.flex-wrap` | Flex items will break onto multiple lines (default) |\n| `.flex-nowrap` | Flex items are laid out in a single line, even if they overflow |\n\n#### `flex-wrap` example\n\n```html\n<div class=\"border d-flex flex-wrap\">\n  <div class=\"p-5 px-6 border bg-gray-light\">1</div>\n  <div class=\"p-5 px-6 border bg-gray-light\">2</div>\n  <div class=\"p-5 px-6 border bg-gray-light\">3</div>\n  <div class=\"p-5 px-6 border bg-gray-light\">4</div>\n  <div class=\"p-5 px-6 border bg-gray-light\">5</div>\n  <div class=\"p-5 px-6 border bg-gray-light\">6</div>\n  <div class=\"p-5 px-6 border bg-gray-light\">7</div>\n  <div class=\"p-5 px-6 border bg-gray-light\">8</div>\n  <div class=\"p-5 px-6 border bg-gray-light\">9</div>\n</div>\n```\n\n#### `flex-nowrap` example\n\n```html\n<div class=\"border d-flex flex-nowrap\">\n  <div class=\"p-5 px-6 border bg-gray-light\">1</div>\n  <div class=\"p-5 px-6 border bg-gray-light\">2</div>\n  <div class=\"p-5 px-6 border bg-gray-light\">3</div>\n  <div class=\"p-5 px-6 border bg-gray-light\">4</div>\n  <div class=\"p-5 px-6 border bg-gray-light\">5</div>\n  <div class=\"p-5 px-6 border bg-gray-light\">6</div>\n  <div class=\"p-5 px-6 border bg-gray-light\">7</div>\n  <div class=\"p-5 px-6 border bg-gray-light\">8</div>\n  <div class=\"p-5 px-6 border bg-gray-light\">9</div>\n</div>\n```\n\n## Justify content\n\nUse these classes to distribute space between and around flex items along the **main axis** of the container.\n\n#### CSS\n\n```CSS\n.flex-justify-start    { justify-content: flex-start; }\n.flex-justify-end      { justify-content: flex-end; }\n.flex-justify-center   { justify-content: center; }\n.flex-justify-between  { justify-content: space-between; }\n.flex-justify-around   { justify-content: space-around; }\n```\n\n#### Classes\n\n| Class | Default behavior |\n| --- | --- |\n| `.flex-justify-start` | Justify all items to the left |\n| `.flex-justify-end` | Justify all items to the right |\n| `.flex-justify-center` | Justify items to the center of the container |\n| `.flex-justify-between` | Distribute items evenly. First item is on the start line, last item is on the end line. |\n| `.flex-justify-around` | Distribute items evenly with equal space around them |\n\n#### flex-justify-start\n\nUse `.flex-justify-start` to align items to the start line. By default this will be on the left side of the container. If you are using `.flex-column`, the end line will be at the top of the container.\n\n```html\n<div class=\"border d-flex flex-justify-start\">\n  <div class=\"p-5 border bg-gray-light\">1</div>\n  <div class=\"p-5 border bg-gray-light\">2</div>\n  <div class=\"p-5 border bg-gray-light\">3</div>\n</div>\n```\n\n#### flex-justify-end\n\nUse `.flex-justify-end` to align items to the end line. By default this will be on the right side of the container. If you are using `.flex-column`, the end line will be at the bottom of the container.\n\n```html\n<div class=\"border d-flex flex-justify-end\">\n <div class=\"p-5 border bg-gray-light\">1</div>\n <div class=\"p-5 border bg-gray-light\">2</div>\n <div class=\"p-5 border bg-gray-light\">3</div>\n</div>\n```\n\n#### flex-justify-center\n\nUse `.flex-justify-center` to align items in the middle of the container.\n\n```html\n<div class=\"border d-flex flex-justify-center\">\n <div class=\"p-5 border bg-gray-light\">1</div>\n <div class=\"p-5 border bg-gray-light\">2</div>\n <div class=\"p-5 border bg-gray-light\">3</div>\n</div>\n```\n\n#### flex-justify-between\n\nUse `.flex-justify-between` to distribute items evenly in the container. The first items will be on the start line and the last item will be on the end line.\n\n```html\n<div class=\"border d-flex flex-justify-between\">\n <div class=\"p-5 border bg-gray-light\">1</div>\n <div class=\"p-5 border bg-gray-light\">2</div>\n <div class=\"p-5 border bg-gray-light\">3</div>\n</div>\n```\n\n#### flex-justify-around\n\nUse `.flex-justify-around` to distribute items evenly, with an equal amount of space around them. Visually the spaces won't look equal, since each item has the same unit of space around it. For example, the first item only has one unit of space between it and the start line, but it has two units of space between it and the next item.\n\n```html\n<div class=\"border d-flex flex-justify-around\">\n <div class=\"p-5 border bg-gray-light\">1</div>\n <div class=\"p-5 border bg-gray-light\">2</div>\n <div class=\"p-5 border bg-gray-light\">3</div>\n</div>\n```\n\n## Align items\n\nUse these classes to align items on the **cross axis**.\n\nThe cross axis runs perpendicular to the main axis. By default the main axis runs horizontally, so your items will align vertically on the cross axis. If you use [flex-column](#flex-direction) to make the main axis run vertically, your items will be aligned horizontally.\n\n#### CSS\n\n```css\n.flex-items-start      { align-items: flex-start; }\n.flex-items-end        { align-items: flex-end; }\n.flex-items-center     { align-items: center; }\n.flex-items-baseline   { align-items: baseline; }\n.flex-items-stretch    { align-items: stretch; }\n```\n\n#### Classes\n\n| Class | Behavior |\n| --- | --- |\n| `.flex-items-start` | Align items to the start of the cross axis  |\n| `.flex-items-end` | Align items to the end of the cross axis |\n| `.flex-items-center` | Align items to the center of the cross axis |\n| `.flex-items-baseline` | Align items along their baselines |\n| `.flex-items-stretch` | Stretch items from start of cross axis to end of cross axis |\n\n#### flex-items-start\n\n```html\n<div  style=\"min-height: 150px;\" class=\"border d-flex flex-items-start\">\n  <div class=\"p-5 border bg-gray-light\">1</div>\n  <div class=\"p-5 border bg-gray-light\">2</div>\n  <div class=\"p-5 border bg-gray-light\">3</div>\n  <div class=\"p-5 border bg-gray-light\">4</div>\n</div>\n```\n\n#### flex-items-end\n\n```html\n<div  style=\"min-height: 150px;\" class=\"border d-flex flex-items-end\">\n  <div class=\"p-5 border bg-gray-light\">1</div>\n  <div class=\"p-5 border bg-gray-light\">2</div>\n  <div class=\"p-5 border bg-gray-light\">3</div>\n  <div class=\"p-5 border bg-gray-light\">4</div>\n</div>\n```\n\n#### flex-items-center\n\n```html\n<div  style=\"min-height: 150px;\" class=\"border d-flex flex-items-center\">\n  <div class=\"p-5 border bg-gray-light\">1</div>\n  <div class=\"p-5 border bg-gray-light\">2</div>\n  <div class=\"p-5 border bg-gray-light\">3</div>\n  <div class=\"p-5 border bg-gray-light\">4</div>\n</div>\n```\n\n#### flex-items-baseline\n\nWith `.flex-items-baseline`, items will be aligned along their baselines even if they have different font sizes.\n\n```html\n<div  style=\"min-height: 150px;\" class=\"border d-flex flex-items-baseline\">\n  <div class=\"p-5 border bg-gray-light f1\">1</div>\n  <div class=\"p-5 border bg-gray-light\">2</div>\n  <div class=\"p-5 border bg-gray-light f3\">3</div>\n  <div class=\"p-5 border bg-gray-light\">4</div>\n</div>\n```\n\n#### flex-items-stretch\n\n```html\n<div  style=\"min-height: 150px;\" class=\"border d-flex flex-items-stretch\">\n  <div class=\"p-5 border bg-gray-light\">1</div>\n  <div class=\"p-5 border bg-gray-light\">2</div>\n  <div class=\"p-5 border bg-gray-light\">3</div>\n  <div class=\"p-5 border bg-gray-light\">4</div>\n</div>\n```\n\n## Align content\n\nWhen the main axis wraps, this creates multiple main axis lines and adds extra space in the cross axis. Use these classes to align the lines of the main axis on the cross axis.\n\n#### CSS\n\n```css\n.flex-content-start    { align-content: flex-start; }\n.flex-content-end      { align-content: flex-end; }\n.flex-content-center   { align-content: center; }\n.flex-content-between  { align-content: space-between; }\n.flex-content-around   { align-content: space-around; }\n.flex-content-stretch  { align-content: stretch; }\n```\n\n#### Classes\n\n| Class | Description |\n| --- | --- |\n| `.flex-content-start` | Align content to the start of the cross axis  |\n| `.flex-content-end` | Align content to the end of the cross axis |\n| `.flex-content-center` | Align content to the center of the cross axis |\n| `.flex-content-between` | Distribute content evenly. First line is on the start of the cross axis, last line is on the end of the cross axis.  |\n| `.flex-content-around` | Stretch items from the start of the cross axis to the end of the cross axis. |\n| `.flex-content-stretch` | Lines stretch to occupy available space.  |\n\n#### flex-content-start\n\n```html\n<div style=\"min-height: 300px;\" class=\"border d-flex flex-wrap flex-content-start\">\n  <div class=\"p-5 border bg-gray-light\">1</div>\n  <div class=\"p-5 border bg-gray-light\">2</div>\n  <div class=\"p-5 border bg-gray-light\">3</div>\n  <div class=\"p-5 border bg-gray-light\">4</div>\n  <div class=\"p-5 border bg-gray-light\">5</div>\n  <div class=\"p-5 border bg-gray-light\">6</div>\n  <div class=\"p-5 border bg-gray-light\">7</div>\n  <div class=\"p-5 border bg-gray-light\">8</div>\n  <div class=\"p-5 border bg-gray-light\">9</div>\n  <div class=\"p-5 border bg-gray-light\">10</div>\n  <div class=\"p-5 border bg-gray-light\">11</div>\n  <div class=\"p-5 border bg-gray-light\">12</div>\n</div>\n```\n\n#### flex-content-end\n\n```html\n<div style=\"min-height: 300px;\" class=\"border d-flex flex-wrap flex-content-end\">\n  <div class=\"p-5 border bg-gray-light\">1</div>\n  <div class=\"p-5 border bg-gray-light\">2</div>\n  <div class=\"p-5 border bg-gray-light\">3</div>\n  <div class=\"p-5 border bg-gray-light\">4</div>\n  <div class=\"p-5 border bg-gray-light\">5</div>\n  <div class=\"p-5 border bg-gray-light\">6</div>\n  <div class=\"p-5 border bg-gray-light\">7</div>\n  <div class=\"p-5 border bg-gray-light\">8</div>\n  <div class=\"p-5 border bg-gray-light\">9</div>\n  <div class=\"p-5 border bg-gray-light\">10</div>\n  <div class=\"p-5 border bg-gray-light\">11</div>\n  <div class=\"p-5 border bg-gray-light\">12</div>\n</div>\n```\n\n#### flex-content-center\n\n```html\n<div style=\"min-height: 300px;\" class=\"border d-flex flex-wrap flex-content-center\">\n  <div class=\"p-5 border bg-gray-light\">1</div>\n  <div class=\"p-5 border bg-gray-light\">2</div>\n  <div class=\"p-5 border bg-gray-light\">3</div>\n  <div class=\"p-5 border bg-gray-light\">4</div>\n  <div class=\"p-5 border bg-gray-light\">5</div>\n  <div class=\"p-5 border bg-gray-light\">6</div>\n  <div class=\"p-5 border bg-gray-light\">7</div>\n  <div class=\"p-5 border bg-gray-light\">8</div>\n  <div class=\"p-5 border bg-gray-light\">9</div>\n  <div class=\"p-5 border bg-gray-light\">10</div>\n  <div class=\"p-5 border bg-gray-light\">11</div>\n  <div class=\"p-5 border bg-gray-light\">12</div>\n</div>\n```\n\n#### flex-content-between\n\n```html\n<div style=\"min-height: 300px;\" class=\"border d-flex flex-wrap flex-content-between\">\n  <div class=\"p-5 border bg-gray-light\">1</div>\n  <div class=\"p-5 border bg-gray-light\">2</div>\n  <div class=\"p-5 border bg-gray-light\">3</div>\n  <div class=\"p-5 border bg-gray-light\">4</div>\n  <div class=\"p-5 border bg-gray-light\">5</div>\n  <div class=\"p-5 border bg-gray-light\">6</div>\n  <div class=\"p-5 border bg-gray-light\">7</div>\n  <div class=\"p-5 border bg-gray-light\">8</div>\n  <div class=\"p-5 border bg-gray-light\">9</div>\n  <div class=\"p-5 border bg-gray-light\">10</div>\n  <div class=\"p-5 border bg-gray-light\">11</div>\n  <div class=\"p-5 border bg-gray-light\">12</div>\n</div>\n```\n\n#### flex-content-around\n\n```html\n<div style=\"min-height: 300px;\" class=\"border d-flex flex-wrap flex-content-around\">\n  <div class=\"p-5 border bg-gray-light\">1</div>\n  <div class=\"p-5 border bg-gray-light\">2</div>\n  <div class=\"p-5 border bg-gray-light\">3</div>\n  <div class=\"p-5 border bg-gray-light\">4</div>\n  <div class=\"p-5 border bg-gray-light\">5</div>\n  <div class=\"p-5 border bg-gray-light\">6</div>\n  <div class=\"p-5 border bg-gray-light\">7</div>\n  <div class=\"p-5 border bg-gray-light\">8</div>\n  <div class=\"p-5 border bg-gray-light\">9</div>\n  <div class=\"p-5 border bg-gray-light\">10</div>\n  <div class=\"p-5 border bg-gray-light\">11</div>\n  <div class=\"p-5 border bg-gray-light\">12</div>\n</div>\n```\n\n#### flex-content-stretch\n\n```html\n<div style=\"min-height: 300px;\" class=\"border d-flex flex-wrap flex-content-stretch\">\n  <div class=\"p-5 border bg-gray-light\">1</div>\n  <div class=\"p-5 border bg-gray-light\">2</div>\n  <div class=\"p-5 border bg-gray-light\">3</div>\n  <div class=\"p-5 border bg-gray-light\">4</div>\n  <div class=\"p-5 border bg-gray-light\">5</div>\n  <div class=\"p-5 border bg-gray-light\">6</div>\n  <div class=\"p-5 border bg-gray-light\">7</div>\n  <div class=\"p-5 border bg-gray-light\">8</div>\n  <div class=\"p-5 border bg-gray-light\">9</div>\n  <div class=\"p-5 border bg-gray-light\">10</div>\n  <div class=\"p-5 border bg-gray-light\">11</div>\n  <div class=\"p-5 border bg-gray-light\">12</div>\n</div>\n```\n\n## Flex\n\nUse this class to specify the ability of a flex item to alter its dimensions to fill available space.\n\n```CSS\n.flex-auto    { flex: 1 1 auto; }\n```\n\n| Class | Description |\n| --- | --- |\n| `.flex-auto` | Sets default values for  `flex-grow` (1), `flex-shrink` (1) and `flex-basis` (auto)  |\n\n#### flex-auto\n\n```html\n<div class=\"border d-flex\">\n  <div class=\"p-5 border bg-gray-light flex-auto\">.flex-auto</div>\n  <div class=\"p-5 border bg-gray-light flex-auto\">.flex-auto</div>\n  <div class=\"p-5 border bg-gray-light flex-auto\">.flex-auto</div>\n</div>\n```\n\n## Align self\n\nUse these classes to adjust the alignment of an individual flex item on the cross axis. This overrides any `align-items` property applied to the flex container.\n\n#### CSS\n\n```css\n.flex-self-auto        { align-self: auto; }\n.flex-self-start       { align-self: flex-start; }\n.flex-self-end         { align-self: flex-end; }\n.flex-self-center      { align-self: center; }\n.flex-self-baseline    { align-self: baseline; }\n.flex-self-stretch     { align-self: stretch; }\n```\n\n#### Classes\n\n| Class | Description |\n| --- | --- |\n| `.flex-self-auto` | Inherit alignment from parent |\n| `.flex-self-start` | Align to the start of the cross axis  |\n| `.flex-self-end` | Align to the end of the cross axis |\n| `.flex-self-center` | Align to center of cross axis |\n| `.flex-self-baseline` | Align baseline to the start of the cross axis |\n| `.flex-self-stretch` | Stretch item from start of cross axis to end of cross axis. |\n\n#### flex-self-auto\n\n```html\n<div style=\"min-height: 150px;\" class=\"border d-flex\">\n  <div class=\"p-5 border bg-gray-light flex-self-auto\">.flex-self-auto</div>\n  <div class=\"p-5 border bg-gray-light\">&nbsp;</div>\n  <div class=\"p-5 border bg-gray-light\">&nbsp;</div>\n</div>\n```\n\n#### flex-self-start\n\n```html\n<div style=\"min-height: 150px;\" class=\"border d-flex\">\n  <div class=\"p-5 border bg-gray-light flex-self-start\">.flex-self-start</div>\n  <div class=\"p-5 border bg-gray-light\">&nbsp;</div>\n  <div class=\"p-5 border bg-gray-light\">&nbsp;</div>\n</div>\n```\n\n#### flex-self-end\n\n```html\n<div style=\"min-height: 150px;\" class=\"border d-flex\">\n  <div class=\"p-5 border bg-gray-light flex-self-end\">.flex-self-end</div>\n  <div class=\"p-5 border bg-gray-light\">&nbsp;</div>\n  <div class=\"p-5 border bg-gray-light\">&nbsp;</div>\n</div>\n```\n\n#### flex-self-center\n\n```html\n<div style=\"min-height: 150px;\" class=\"border d-flex\">\n  <div class=\"p-5 border bg-gray-light flex-self-center\">.flex-self-center</div>\n  <div class=\"p-5 border bg-gray-light\">&nbsp;</div>\n  <div class=\"p-5 border bg-gray-light\">&nbsp;</div>\n</div>\n```\n\n#### flex-self-baseline\n\n```html\n<div style=\"min-height: 150px;\" class=\"border d-flex flex-items-end\">\n  <div class=\"p-5 border bg-gray-light flex-self-baseline f4\">.flex-self-baseline</div>\n  <div class=\"p-5 border bg-gray-light f1\">item</div>\n  <div class=\"p-5 border bg-gray-light f00\">item</div>\n</div>\n```\n\n#### flex-self-stretch\n\n```html\n<div style=\"min-height: 150px;\" class=\"border d-flex flex-items-start\">\n  <div class=\"p-5 border bg-gray-light flex-self-stretch\">.flex-self-stretch</div>\n  <div class=\"p-5 border bg-gray-light\">&nbsp;</div>\n  <div class=\"p-5 border bg-gray-light\">&nbsp;</div>\n</div>\n```\n\n## Responsive flex utilities\n\nAll flexbox utilities can be adjusted per [breakpoint](/css/objects/grid#breakpoints) using the following formulas:\n\n- `d-[breakpoint]-[property]` for `display`\n- `flex-[breakpoint]-[property]-[behavior]` for various flex properties\n- `flex-[breakpoint]-item-equal` for equal width and equal height flex items\n\nEach responsive style is applied to the specified breakpoint and up.\n\n#### Example classes\n\n```css\n/* Example classes */\n\n.d-sm-flex {}\n.d-md-inline-flex {}\n\n.flex-lg-row {}\n.flex-xl-column {}\n\n.flex-sm-wrap {}\n.flex-lg-nowrap {}\n\n.flex-lg-self-start {}\n\n.flex-md-item-equal {}\n```\n\n#### Example usage\n\nMixing flex properties:\n\n```html\n<div style=\"min-height: 150px;\" class=\"border d-flex flex-items-start flex-md-items-center flex-justify-start flex-lg-justify-between\">\n  <div class=\"p-5 border bg-gray-light flex-md-self-stretch\">.flex-self-stretch</div>\n  <div class=\"p-5 border bg-gray-light\">&nbsp;</div>\n  <div class=\"p-5 border bg-gray-light\">&nbsp;</div>\n</div>\n```\n\nUsing the equal width, equal height utilities:\n\n```html\n<div class=\"border d-flex\">\n  <div class=\"flex-md-item-equal p-3 border bg-gray-light\">Stuff and things</div>\n  <div class=\"flex-md-item-equal p-3 border bg-gray-light\">More stuff<br> on multiple lines</div>\n  <div class=\"flex-md-item-equal p-3 border bg-gray-light\">Hi mom</div>\n</div>\n```\n\n## Example components\n\nThe flex utilities can be used to create a number of components. Here are some examples.\n\n### Media object\n\nYou can use flex utilities to make a simple media object, like this:\n\n```html\n<div class=\"border d-flex flex-items-center p-4\">\n  <div class=\"p-5 border bg-gray-light\">image</div>\n  <p class=\"pl-4 m-0\"><b>Body</b> Bacon ipsum dolor sit amet chuck prosciutto landjaeger ham hock filet mignon shoulder hamburger pig venison.</p>\n</div>\n```\n\n### Responsive media object\n\nHere is an example of a media object that is **vertically centered on large screens**, but converts to a stacked column layout on small screens.\n\n```erb\n<div class=\"border p-3 d-flex flex-column flex-md-row flex-md-items-center\">\n  <div class=\"pr-0 pr-md-3 mb-3 mb-md-0 d-flex flex-justify-center flex-md-justify-start\">\n    <img style=\"max-width:100px; max-height:100px;\" src=\"https://github.com/github.png\" />\n  </div>\n  <div class=\"d-flex text-center text-md-left\">\n    <p><b>Body</b> Bacon ipsum dolor sit amet chuck prosciutto landjaeger ham hock filet mignon shoulder hamburger pig venison.</p>\n  </div>\n  <div class=\"ml-md-3 d-flex flex-justify-center\">\n    <%= octicon \"mark-github\", :height => '32' %>\n  </div>\n</div>\n```\n\n## Flexbox bugs\n\nThis section lists flexbox bugs that affect browsers we currently support (**citation needed**).\n\n**1. Minimum content sizing of flex items not honored:** Some browsers don't respect flex item size. Instead of respecting the minimum content size, items shrink below their minimum size which can create some undesirable results, such as overflowing text. The workaround is to apply `flex-shrink: 0;` to the items using `d-flex`. This can be applied with the `flex-shrink-0` utility. For more information read [philipwalton/flexbugs](https://github.com/philipwalton/flexbugs#1-minimum-content-sizing-of-flex-items-not-honored).\n"
  },
  "components/select-menu": {
    "title": "Select menu",
    "path": "components/select-menu",
    "content": "\nThe select menu provides advanced support for navigation, filtering, and more. Any popover within a select menu can make use of JavaScript-enabled live filtering, selected states, tabbed lists, and keyboard navigation with a bit of markup.\n\n{:toc}\n\n## Basic example\n\nSelect menus should be trigged by a `<button>`. In the markup below, all classes prefixed with `select-menu` and `.js-` are required.\n\n```erb\n<div class=\"select-menu js-menu-container js-select-menu\">\n  <button class=\"btn select-menu-button js-menu-target\" type=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">\n    Choose an item\n  </button>\n  <div class=\"select-menu-modal-holder\">\n    <div class=\"select-menu-modal js-menu-content\">\n      <div class=\"select-menu-list js-navigation-container\">\n        <a href=\"#url\" class=\"select-menu-item selected js-navigation-item\">\n          <%= octicon(\"check\", :class => \"select-menu-item-icon\") %>\n          <span class=\"select-menu-item-text js-select-button-text\">Item 1</span>\n        </a>\n        <a href=\"#url\" class=\"select-menu-item js-navigation-item\">\n          <%= octicon(\"check\", :class => \"select-menu-item-icon\") %>\n          <span class=\"select-menu-item-text js-select-button-text\">Item 2</span>\n        </a>\n        <a href=\"#url\" class=\"select-menu-item js-navigation-item\">\n          <%= octicon(\"check\", :class => \"select-menu-item-icon\") %>\n          <span class=\"select-menu-item-text js-select-button-text\">Item 3</span>\n        </a>\n      </div>\n    </div>\n  </div>\n</div>\n```\n\n## Menu contents\n\nThe contents of a select menu are easily customized with support for headers, footers, tabbed lists, and live filtering.\n\n### Headers\n\nAdd a header to any select menu's popover to house a clear title and a dismiss button.\n\n```erb\n<div class=\"select-menu js-menu-container js-select-menu\">\n  <button class=\"btn select-menu-button js-menu-target\" type=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">\n    Choose an item\n  </button>\n  <div class=\"select-menu-modal-holder\">\n    <div class=\"select-menu-modal js-menu-content\">\n      <div class=\"select-menu-header js-navigation-enable\" tabindex=\"-1\">\n        <button class=\"btn-link close-button js-menu-close\" type=\"button\"><%= octicon(\"x\", :\"aria-label\" => \"Close menu\") %></button>\n        <span class=\"select-menu-title\">Options</span>\n      </div>\n      <div class=\"select-menu-list js-navigation-container\">\n        <a href=\"#url\" class=\"select-menu-item selected js-navigation-item\">\n          <%= octicon(\"check\", :class => \"select-menu-item-icon\") %>\n          <span class=\"select-menu-item-text js-select-button-text\">Item 1</span>\n        </a>\n        <a href=\"#url\" class=\"select-menu-item js-navigation-item\">\n          <%= octicon(\"check\", :class => \"select-menu-item-icon\") %>\n          <span class=\"select-menu-item-text js-select-button-text\">Item 2</span>\n        </a>\n        <a href=\"#url\" class=\"select-menu-item js-navigation-item\">\n          <%= octicon(\"check\", :class => \"select-menu-item-icon\") %>\n          <span class=\"select-menu-item-text js-select-button-text\">Item 3</span>\n        </a>\n      </div>\n    </div>\n  </div>\n</div>\n```\n\n### List items\n\nThe list of items is arguably the most important subcomponent within the menu. Build them out of anchors, buttons, or just about any [interactive content](http://w3c.github.io/html/dom.html#interactive-content). [List items are also customizable](#menu-list-items) with options for avatars, additional icons, and multiple lines of text.\n\n```erb\n<div class=\"select-menu js-menu-container js-select-menu\">\n  <button class=\"btn select-menu-button js-menu-target\" type=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">\n    Choose an item\n  </button>\n  <div class=\"select-menu-modal-holder\">\n    <div class=\"select-menu-modal js-menu-content\">\n      <div class=\"select-menu-list js-navigation-container\">\n        <button type=\"button\" class=\"select-menu-item selected js-navigation-item\">\n          <%= octicon(\"check\", :class => \"select-menu-item-icon\") %>\n          <span class=\"select-menu-item-text js-select-button-text\">Item 1</span>\n        </button>\n        <a href=\"#url\" class=\"select-menu-item js-navigation-item\">\n          <%= octicon(\"check\", :class => \"select-menu-item-icon\") %>\n          <span class=\"select-menu-item-text js-select-button-text\">Item 2</span>\n        </a>\n        <a href=\"#url\" class=\"select-menu-item js-navigation-item\" href=\"#url\">\n          <%= octicon(\"check\", :class => \"select-menu-item-icon\") %>\n          <span class=\"select-menu-item-text js-select-button-text\">Item 3</span>\n        </a>\n      </div>\n    </div>\n  </div>\n</div>\n```\n\n### Filter\n\nEnable live filtering of list items within a `.select-menu-list` with a search input. Only a handful of changes to your menu's markup are required:\n\n- Add the text input, housed in `.select-menu-filters`, before the `.select-menu-list`.\n- Add two attritubes, `data-filterable-for` and `data-filterable-type`, to the `.select-menu-list` to scope the filter to the list.\n\nThere are no required changes for the `.select-menu-item`s.\n\n```erb\n<div class=\"select-menu js-menu-container js-select-menu\">\n  <button class=\"btn select-menu-button js-menu-target\" type=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">\n    <i>Label:</i>\n    <span class=\"js-select-button\">Choose an item</span>\n  </button>\n  <div class=\"select-menu-modal-holder js-menu-content js-navigation-container\">\n    <div class=\"select-menu-modal\">\n      <div class=\"select-menu-header\" tabindex=\"-1\">\n        <button class=\"btn-link close-button js-menu-close\" type=\"button\"><%= octicon(\"x\", :\"aria-label\" => \"Close menu\") %></button>\n        <span class=\"select-menu-title\">Options</span>\n      </div>\n      <div class=\"js-select-menu-deferred-content\">\n        <div class=\"select-menu-filters\">\n          <div class=\"select-menu-text-filter\">\n            <input type=\"text\" id=\"example-filter-field\" class=\"form-control js-filterable-field js-navigation-enable\" placeholder=\"Filter this list\" aria-label=\"Type to filter\" autocomplete=\"off\">\n          </div>\n        </div>\n        <div class=\"select-menu-list\" data-filterable-for=\"example-filter-field\" data-filterable-type=\"substring\">\n          <input hidden=\"checkbox\" name=\"example\" value=\"\">\n          <a href=\"#url\" class=\"select-menu-item js-navigation-item\">\n            <%= octicon(\"check\", :class => \"select-menu-item-icon\") %>\n            <div class=\"select-menu-item-text js-select-button-text\">\n              Test element\n            </div>\n          </a>\n          <a href=\"#url\" class=\"select-menu-item js-navigation-item\">\n            <%= octicon(\"check\", :class => \"select-menu-item-icon\") %>\n            <div class=\"select-menu-item-text js-select-button-text\">\n              Filter to this\n            </div>\n          </a>\n          <a href=\"#url\" class=\"select-menu-item js-navigation-item\">\n            <%= octicon(\"check\", :class => \"select-menu-item-icon\") %>\n            <div class=\"select-menu-item-text js-select-button-text\">\n              More content\n            </div>\n          </a>\n          <a href=\"#url\" class=\"select-menu-item js-navigation-item\">\n            <%= octicon(\"check\", :class => \"select-menu-item-icon\") %>\n            <div class=\"select-menu-item-text js-select-button-text\">\n              Something else\n            </div>\n          </a>\n          <a href=\"#url\" class=\"select-menu-item js-navigation-item\">\n            <%= octicon(\"check\", :class => \"select-menu-item-icon\") %>\n            <div class=\"select-menu-item-text js-select-button-text\">\n              One more thing\n            </div>\n          </a>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n```\n\n### Tabs\n\nSometimes you need two or more lists of items in your select menu, e.g. branches and tags. Select menu lists can be tabbed with the addition of the tab toggles at the top of the menu and a few changes to the `.select-menu-list`.\n\n```erb\n<div class=\"select-menu js-menu-container js-select-menu\">\n  <button class=\"btn select-menu-button js-menu-target\" type=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">\n    <i>Label:</i>\n    <span class=\"js-select-button\">Choose an item</span>\n  </button>\n  <div class=\"select-menu-modal-holder js-menu-content js-navigation-container\">\n    <div class=\"select-menu-modal\">\n      <div class=\"select-menu-header\" tabindex=\"-1\">\n        <button class=\"btn-link close-button js-menu-close\" type=\"button\"><%= octicon(\"x\", :\"aria-label\" => \"Close menu\") %></button>\n        <span class=\"select-menu-title\">Options</span>\n      </div>\n      <div class=\"js-select-menu-deferred-content\">\n        <div class=\"select-menu-filters\">\n          <div class=\"select-menu-tabs\">\n            <ul>\n              <li class=\"select-menu-tab\">\n                <a href=\"#url\" data-tab-filter=\"branches\" data-filter-placeholder=\"Filter for \" class=\"js-select-menu-tab\" aria-current=\"false\">Branches</a>\n              </li>\n              <li class=\"select-menu-tab\">\n                <a href=\"#url\" data-tab-filter=\"tags\" data-filter-placeholder=\"Find a tag…\" class=\"js-select-menu-tab selected\" aria-current=\"true\">Tags</a>\n              </li>\n            </ul>\n          </div>\n        </div>\n        <div class=\"select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket selected\" data-filterable-for=\"example-filter-field\" data-filterable-type=\"substring\" data-tab-filter=\"branches\" role=\"menu\">\n          <input hidden=\"checkbox\" name=\"example\" value=\"\">\n          <a href=\"#url\" class=\"select-menu-item js-navigation-item\">\n            <%= octicon(\"check\", :class => \"select-menu-item-icon\") %>\n            <div class=\"select-menu-item-text js-select-button-text\">\n              Branch 1\n            </div>\n          </a>\n          <a href=\"#url\" class=\"select-menu-item js-navigation-item\">\n            <%= octicon(\"check\", :class => \"select-menu-item-icon\") %>\n            <div class=\"select-menu-item-text js-select-button-text\">\n              Branch 2\n            </div>\n          </a>\n          <a href=\"#url\" class=\"select-menu-item js-navigation-item\">\n            <%= octicon(\"check\", :class => \"select-menu-item-icon\") %>\n            <div class=\"select-menu-item-text js-select-button-text\">\n              Branch 3\n            </div>\n          </a>\n          <a href=\"#url\" class=\"select-menu-item js-navigation-item\">\n            <%= octicon(\"check\", :class => \"select-menu-item-icon\") %>\n            <div class=\"select-menu-item-text js-select-button-text\">\n              Branch 4\n            </div>\n          </a>\n          <a href=\"#url\" class=\"select-menu-item js-navigation-item\">\n            <%= octicon(\"check\", :class => \"select-menu-item-icon\") %>\n            <div class=\"select-menu-item-text js-select-button-text\">\n              Branch 5\n            </div>\n          </a>\n        </div>\n        <div class=\"select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket\" data-filterable-for=\"example-filter-field\" data-filterable-type=\"substring\" data-tab-filter=\"tags\" role=\"menu\">\n          <input hidden=\"checkbox\" name=\"example\" value=\"\">\n          <a href=\"#url\" class=\"select-menu-item js-navigation-item\">\n            <%= octicon(\"check\", :class => \"select-menu-item-icon\") %>\n            <div class=\"select-menu-item-text js-select-button-text\">\n              Tag 1\n            </div>\n          </a>\n          <a href=\"#url\" class=\"select-menu-item js-navigation-item\">\n            <%= octicon(\"check\", :class => \"select-menu-item-icon\") %>\n            <div class=\"select-menu-item-text js-select-button-text\">\n              Tag 2\n            </div>\n          </a>\n          <a href=\"#url\" class=\"select-menu-item js-navigation-item\">\n            <%= octicon(\"check\", :class => \"select-menu-item-icon\") %>\n            <div class=\"select-menu-item-text js-select-button-text\">\n              Tag 3\n            </div>\n          </a>\n          <a href=\"#url\" class=\"select-menu-item js-navigation-item\">\n            <%= octicon(\"check\", :class => \"select-menu-item-icon\") %>\n            <div class=\"select-menu-item-text js-select-button-text\">\n              Tag 4\n            </div>\n          </a>\n          <a href=\"#url\" class=\"select-menu-item js-navigation-item\">\n            <%= octicon(\"check\", :class => \"select-menu-item-icon\") %>\n            <div class=\"select-menu-item-text js-select-button-text\">\n              Tag 5\n            </div>\n          </a>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n```\n\n### Filter and tabs\n\nShow a filter and tabs in a single select menu.\n\n```erb\n<div class=\"select-menu js-menu-container js-select-menu\">\n  <button class=\"btn select-menu-button js-menu-target\" type=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">\n    <i>Label:</i>\n    <span class=\"js-select-button\">Choose an item</span>\n  </button>\n  <div class=\"select-menu-modal-holder js-menu-content js-navigation-container\">\n    <div class=\"select-menu-modal\">\n      <div class=\"select-menu-header\" tabindex=\"-1\">\n        <button class=\"btn-link close-button js-menu-close\" type=\"button\"><%= octicon(\"x\", :\"aria-label\" => \"Close menu\") %></button>\n        <span class=\"select-menu-title\">Options</span>\n      </div>\n      <div class=\"js-select-menu-deferred-content\">\n        <div class=\"select-menu-filters\">\n          <div class=\"select-menu-text-filter\">\n            <input type=\"text\" id=\"example-filter-field-2\" class=\"form-control js-filterable-field js-navigation-enable\" placeholder=\"Filter labels\" aria-label=\"Type or choose a label\" autocomplete=\"off\">\n          </div>\n          <div class=\"select-menu-tabs\">\n            <ul>\n              <li class=\"select-menu-tab\">\n                <a href=\"#url\" data-tab-filter=\"branches\" data-filter-placeholder=\"Filter for \" class=\"js-select-menu-tab\" aria-current=\"false\">Branches</a>\n              </li>\n              <li class=\"select-menu-tab\">\n                <a href=\"#url\" data-tab-filter=\"tags\" data-filter-placeholder=\"Find a tag…\" class=\"js-select-menu-tab selected\" aria-current=\"true\">Tags</a>\n              </li>\n            </ul>\n          </div>\n        </div>\n        <div class=\"select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket selected\" data-filterable-for=\"example-filter-field\" data-filterable-type=\"substring\" data-tab-filter=\"branches\" role=\"menu\">\n          <input hidden=\"checkbox\" name=\"example\" value=\"\">\n          <a href=\"#url\" class=\"select-menu-item js-navigation-item\">\n            <%= octicon(\"check\", :class => \"select-menu-item-icon\") %>\n            <div class=\"select-menu-item-text js-select-button-text\">\n              Branch 1\n            </div>\n          </a>\n          <a href=\"#url\" class=\"select-menu-item js-navigation-item\">\n            <%= octicon(\"check\", :class => \"select-menu-item-icon\") %>\n            <div class=\"select-menu-item-text js-select-button-text\">\n              Branch 2\n            </div>\n          </a>\n          <a href=\"#url\" class=\"select-menu-item js-navigation-item\">\n            <%= octicon(\"check\", :class => \"select-menu-item-icon\") %>\n            <div class=\"select-menu-item-text js-select-button-text\">\n              Branch 3\n            </div>\n          </a>\n          <a href=\"#url\" class=\"select-menu-item js-navigation-item\">\n            <%= octicon(\"check\", :class => \"select-menu-item-icon\") %>\n            <div class=\"select-menu-item-text js-select-button-text\">\n              Branch 4\n            </div>\n          </a>\n          <a href=\"#url\" class=\"select-menu-item js-navigation-item\">\n            <%= octicon(\"check\", :class => \"select-menu-item-icon\") %>\n            <div class=\"select-menu-item-text js-select-button-text\">\n              Branch 5\n            </div>\n          </a>\n        </div>\n        <div class=\"select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket\" data-filterable-for=\"example-filter-field\" data-filterable-type=\"substring\" data-tab-filter=\"tags\" role=\"menu\">\n          <input hidden=\"checkbox\" name=\"example\" value=\"\">\n          <a href=\"#url\" class=\"select-menu-item js-navigation-item\">\n            <%= octicon(\"check\", :class => \"select-menu-item-icon\") %>\n            <div class=\"select-menu-item-text js-select-button-text\">\n              Tag 1\n            </div>\n          </a>\n          <a href=\"#url\" class=\"select-menu-item js-navigation-item\">\n            <%= octicon(\"check\", :class => \"select-menu-item-icon\") %>\n            <div class=\"select-menu-item-text js-select-button-text\">\n              Tag 2\n            </div>\n          </a>\n          <a href=\"#url\" class=\"select-menu-item js-navigation-item\">\n            <%= octicon(\"check\", :class => \"select-menu-item-icon\") %>\n            <div class=\"select-menu-item-text js-select-button-text\">\n              Tag 3\n            </div>\n          </a>\n          <a href=\"#url\" class=\"select-menu-item js-navigation-item\">\n            <%= octicon(\"check\", :class => \"select-menu-item-icon\") %>\n            <div class=\"select-menu-item-text js-select-button-text\">\n              Tag 4\n            </div>\n          </a>\n          <a href=\"#url\" class=\"select-menu-item js-navigation-item\">\n            <%= octicon(\"check\", :class => \"select-menu-item-icon\") %>\n            <div class=\"select-menu-item-text js-select-button-text\">\n              Tag 5\n            </div>\n          </a>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n```\n\n### Blankslate\n\nSometimes a select menu needs to communicate a \"blank slate\" where there's no content in the menu's list. Usually these include a clear call to action to add said content to the list. Swap out the contents of a `.select-menu-list` with the `.select-menu-blankslate` and customize it's contents as needed.\n\n```erb\n<div class=\"select-menu js-menu-container js-select-menu\">\n  <button class=\"btn select-menu-button js-menu-target\" type=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">\n    Choose an item\n  </button>\n  <div class=\"select-menu-modal-holder\">\n    <div class=\"select-menu-modal js-menu-content\">\n      <div class=\"select-menu-header js-navigation-enable\" tabindex=\"-1\">\n        <button class=\"btn-link close-button js-menu-close\" type=\"button\"><%= octicon(\"x\", :\"aria-label\" => \"Close menu\") %></button>\n        <span class=\"select-menu-title\">Options</span>\n      </div>\n      <div class=\"select-menu-list js-navigation-container\">\n        <div class=\"select-menu-blankslate\">\n          <%= octicon(\"check\", :height => 32) %>\n          <h3>Select menu blankslate</h3>\n          <p>Some text here to describe why you're seeing a blankslate and how to go about fixing that up.</p>\n          <button type=\"button\" class=\"btn btn-sm btn-primary mt-3 mb-3\">Deal with it</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n```\n\n## Menu list items\n\nSelect menu list items have a few options available to them for more complex information patterns.\n\n### Multi-line text\n\nSometimes the contents of your select menu list require a heading and a description instead of just a string. Select menus come with some default styles for such situations with the addition of a few classes and wrapping `<span>`s.\n\n```erb\n<div class=\"select-menu js-menu-container js-select-menu\">\n  <button class=\"btn select-menu-button js-menu-target\" type=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">\n    <i>Multi line:</i>\n    <span class=\"js-select-button\">Choose an item</span>\n  </button>\n\n  <div class=\"select-menu-modal-holder\">\n    <div class=\"select-menu-modal subscription-menu-modal js-menu-content\" aria-hidden=\"false\">\n      <div class=\"select-menu-header js-navigation-enable\" tabindex=\"-1\">\n        <button class=\"btn-link close-button js-menu-close\" type=\"button\"><%= octicon(\"x\", :\"aria-label\" => \"Close menu\") %></button>\n        <span class=\"select-menu-title\">Notifications</span>\n      </div>\n      <div class=\"select-menu-list js-navigation-container js-active-navigation-container\" role=\"menu\">\n        <a href=\"#url\" class=\"select-menu-item js-navigation-item selected\" role=\"menuitem\">\n          <%= octicon(\"check\", :class => \"select-menu-item-icon\") %>\n          <div class=\"select-menu-item-text\">\n            <span class=\"select-menu-item-heading\">Not watching</span>\n            <span class=\"description\">Be notified when participating or @mentioned.</span>\n            <span class=\"js-select-button-text hidden-select-button-text\">\n              Watch\n            </span>\n          </div>\n        </a>\n        <a href=\"#url\" class=\"select-menu-item js-navigation-item\" role=\"menuitem\">\n          <%= octicon(\"check\", :class => \"select-menu-item-icon\") %>\n          <div class=\"select-menu-item-text\">\n            <span class=\"select-menu-item-heading\">Watching</span>\n            <span class=\"description\">Be notified of all conversations.</span>\n            <span class=\"js-select-button-text hidden-select-button-text\">\n              Stop watching\n            </span>\n          </div>\n        </a>\n        <a href=\"#url\" class=\"select-menu-item js-navigation-item\" role=\"menuitem\">\n          <%= octicon(\"check\", :class => \"select-menu-item-icon\") %>\n          <div class=\"select-menu-item-text\">\n            <span class=\"select-menu-item-heading\">Ignoring</span>\n            <span class=\"description\">Never be notified.</span>\n            <span class=\"js-select-button-text hidden-select-button-text\">\n              Stop ignoring\n            </span>\n          </div>\n        </a>\n      </div>\n    </div>\n  </div>\n</div>\n```\n\n### With avatars\n\nAdd avatars to a select menu to help indicate when a menu list item represents a user.\n\n```erb\n<div class=\"select-menu js-menu-container js-select-menu\">\n  <button class=\"btn select-menu-button js-menu-target\" type=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">\n    Choose an item\n  </button>\n  <div class=\"select-menu-modal-holder\">\n    <div class=\"select-menu-modal js-menu-content\">\n      <div class=\"select-menu-header js-navigation-enable\" tabindex=\"-1\">\n        <button class=\"btn-link close-button js-menu-close\" type=\"button\"><%= octicon(\"x\", :\"aria-label\" => \"Close menu\") %></button>\n        <span class=\"select-menu-title\">Options</span>\n      </div>\n      <div class=\"select-menu-list js-navigation-container\">\n        <a href=\"#url\" class=\"select-menu-item selected js-navigation-item\">\n          <%= octicon(\"check\", :class => \"select-menu-item-icon\") %>\n          <span class=\"select-menu-item-gravatar\">\n            <%= avatar_for(current_user, 20, :alt => \"\") %>\n          </span>\n          <span class=\"select-menu-item-text js-select-button-text\">\n            probot\n          </span>\n        </a>\n        <a href=\"#url\" class=\"select-menu-item js-navigation-item\">\n          <%= octicon(\"check\", :class => \"select-menu-item-icon\") %>\n          <span class=\"select-menu-item-gravatar\">\n            <%= avatar_for(current_user, 20, :alt => \"\") %>\n          </span>\n          <span class=\"select-menu-item-text js-select-button-text\">\n            probot\n          </span>\n        </a>\n        <a href=\"#url\" class=\"select-menu-item js-navigation-item\">\n          <%= octicon(\"check\", :class => \"select-menu-item-icon\") %>\n          <span class=\"select-menu-item-gravatar\">\n            <%= avatar_for(current_user, 20, :alt => \"\") %>\n          </span>\n          <span class=\"select-menu-item-text js-select-button-text\">\n            probot\n          </span>\n        </a>\n      </div>\n    </div>\n  </div>\n</div>\n```\n\n### With dismiss icon\n\nIndicate how to toggle the selected state on a select menu list item with the addition of a dismiss icon.\n\n```erb\n<div class=\"select-menu js-menu-container js-select-menu\">\n  <button class=\"btn select-menu-button js-menu-target\" type=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">\n    Choose an item\n  </button>\n  <div class=\"select-menu-modal-holder\">\n    <div class=\"select-menu-modal js-menu-content\">\n      <div class=\"select-menu-header js-navigation-enable\" tabindex=\"-1\">\n        <button class=\"btn-link close-button js-menu-close\" type=\"button\"><%= octicon(\"x\", :\"aria-label\" => \"Close menu\") %></button>\n        <span class=\"select-menu-title\">Options</span>\n      </div>\n      <div class=\"select-menu-list js-navigation-container\">\n        <button type=\"button\" class=\"select-menu-item selected js-navigation-item width-full\">\n          <%= octicon(\"check\", :class => \"select-menu-item-icon\") %>\n          <span class=\"select-menu-item-text js-select-button-text\">\n            <%= octicon(\"x\", :\"aria-label\" => \"Click to remove\") %>\n            Item 1\n          </span>\n        </button>\n        <button type=\"button\" class=\"select-menu-item js-navigation-item width-full\">\n          <%= octicon(\"check\", :class => \"select-menu-item-icon\") %>\n          <span class=\"select-menu-item-text js-select-button-text\">\n            <%= octicon(\"x\", :\"aria-label\" => \"Click to remove\") %>\n            Item 2\n          </span>\n        </button>\n        <button type=\"button\" class=\"select-menu-item js-navigation-item width-full\">\n          <%= octicon(\"check\", :class => \"select-menu-item-icon\") %>\n          <span class=\"select-menu-item-text js-select-button-text\">\n            <%= octicon(\"x\", :\"aria-label\" => \"Click to remove\") %>\n            Item 3\n          </span>\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n```\n\n## Menu alignment\n\nBy default select menus are automatically aligned to the top left corner of an element, but you can also customize that with a few utilities or custom display.\n\n### Right aligned menus\n\nWhen select menus are right aligned, you can also right-align the select menu's popover with `.select-menu-modal-right`.\n\n```erb\n<div class=\"select-menu float-right select-menu-modal-right js-menu-container js-select-menu\">\n  <button class=\"btn select-menu-button js-menu-target\" type=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">\n    Choose an item\n  </button>\n  <div class=\"select-menu-modal-holder\">\n    <div class=\"select-menu-modal js-menu-content\">\n      <div class=\"select-menu-header js-navigation-enable\" tabindex=\"-1\">\n        <button class=\"btn-link close-button js-menu-close\" type=\"button\"><%= octicon(\"x\", :\"aria-label\" => \"Close menu\") %></button>\n        <span class=\"select-menu-title\">Options</span>\n      </div>\n      <div class=\"select-menu-list js-navigation-container\">\n        <a href=\"#url\" class=\"select-menu-item selected js-navigation-item\">\n          <%= octicon(\"check\", :class => \"select-menu-item-icon\") %>\n          <span class=\"select-menu-item-text js-select-button-text\">Item 1</span>\n        </a>\n        <a href=\"#url\" class=\"select-menu-item js-navigation-item\">\n          <%= octicon(\"check\", :class => \"select-menu-item-icon\") %>\n          <span class=\"select-menu-item-text js-select-button-text\">Item 2</span>\n        </a>\n        <a href=\"#url\" class=\"select-menu-item js-navigation-item\">\n          <%= octicon(\"check\", :class => \"select-menu-item-icon\") %>\n          <span class=\"select-menu-item-text js-select-button-text\">Item 3</span>\n        </a>\n      </div>\n    </div>\n  </div>\n</div>\n```\n\n## Button options\n\nCustomize the select menu's trigger button by changing the button modifier class, enabling stateful text, and more.\n\n### Style options\n\nSince select menus are powered by JavaScript behaviors, the specific display of your select menu button is up to you and your use case.\n\n```erb\n<div class=\"select-menu js-menu-container js-select-menu\">\n  <button class=\"btn select-menu-button js-menu-target\" type=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">\n    Default button\n  </button>\n\n  <div class=\"select-menu-modal-holder\">\n    <div class=\"select-menu-modal js-menu-content\">\n      <div class=\"select-menu-list js-navigation-container\">\n        <a href=\"#url\" class=\"select-menu-item selected js-navigation-item\">\n          <%= octicon(\"check\", :class => \"select-menu-item-icon\") %>\n          <span class=\"select-menu-item-text js-select-button-text\">Item 1</span>\n        </a>\n        <a href=\"#url\" class=\"select-menu-item js-navigation-item\">\n          <%= octicon(\"check\", :class => \"select-menu-item-icon\") %>\n          <span class=\"select-menu-item-text js-select-button-text\">Item 2</span>\n        </a>\n        <a href=\"#url\" class=\"select-menu-item js-navigation-item\">\n          <%= octicon(\"check\", :class => \"select-menu-item-icon\") %>\n          <span class=\"select-menu-item-text js-select-button-text\">Item 3</span>\n        </a>\n      </div>\n    </div>\n  </div>\n</div>\n```\n\n```erb\n<div class=\"select-menu js-menu-container js-select-menu\">\n  <button class=\"btn btn-primary select-menu-button js-menu-target\" type=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">\n    Primary button\n  </button>\n\n  <div class=\"select-menu-modal-holder\">\n    <div class=\"select-menu-modal js-menu-content\">\n      <div class=\"select-menu-list js-navigation-container\">\n        <a href=\"#url\" class=\"select-menu-item selected js-navigation-item\">\n          <%= octicon(\"check\", :class => \"select-menu-item-icon\") %>\n          <span class=\"select-menu-item-text js-select-button-text\">Item 1</span>\n        </a>\n        <a href=\"#url\" class=\"select-menu-item js-navigation-item\">\n          <%= octicon(\"check\", :class => \"select-menu-item-icon\") %>\n          <span class=\"select-menu-item-text js-select-button-text\">Item 2</span>\n        </a>\n        <a href=\"#url\" class=\"select-menu-item js-navigation-item\">\n          <%= octicon(\"check\", :class => \"select-menu-item-icon\") %>\n          <span class=\"select-menu-item-text js-select-button-text\">Item 3</span>\n        </a>\n      </div>\n    </div>\n  </div>\n</div>\n```\n\n```erb\n<div class=\"select-menu js-menu-container js-select-menu\">\n  <button class=\"btn btn-outline select-menu-button js-menu-target\" type=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">\n    Outline button\n  </button>\n\n  <div class=\"select-menu-modal-holder\">\n    <div class=\"select-menu-modal js-menu-content\">\n      <div class=\"select-menu-list js-navigation-container\">\n        <a href=\"#url\" class=\"select-menu-item selected js-navigation-item\">\n          <%= octicon(\"check\", :class => \"select-menu-item-icon\") %>\n          <span class=\"select-menu-item-text js-select-button-text\">Item 1</span>\n        </a>\n        <a href=\"#url\" class=\"select-menu-item js-navigation-item\">\n          <%= octicon(\"check\", :class => \"select-menu-item-icon\") %>\n          <span class=\"select-menu-item-text js-select-button-text\">Item 2</span>\n        </a>\n        <a href=\"#url\" class=\"select-menu-item js-navigation-item\">\n          <%= octicon(\"check\", :class => \"select-menu-item-icon\") %>\n          <span class=\"select-menu-item-text js-select-button-text\">Item 3</span>\n        </a>\n      </div>\n    </div>\n  </div>\n</div>\n```\n\n```erb\n<div class=\"select-menu js-menu-container js-select-menu\">\n  <button class=\"btn-link select-menu-button js-menu-target\" type=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">\n    Link button\n  </button>\n\n  <div class=\"select-menu-modal-holder\">\n    <div class=\"select-menu-modal js-menu-content\">\n      <div class=\"select-menu-list js-navigation-container\">\n        <a href=\"#url\" class=\"select-menu-item selected js-navigation-item\">\n          <%= octicon(\"check\", :class => \"select-menu-item-icon\") %>\n          <span class=\"select-menu-item-text js-select-button-text\">Item 1</span>\n        </a>\n        <a href=\"#url\" class=\"select-menu-item js-navigation-item\">\n          <%= octicon(\"check\", :class => \"select-menu-item-icon\") %>\n          <span class=\"select-menu-item-text js-select-button-text\">Item 2</span>\n        </a>\n        <a href=\"#url\" class=\"select-menu-item js-navigation-item\">\n          <%= octicon(\"check\", :class => \"select-menu-item-icon\") %>\n          <span class=\"select-menu-item-text js-select-button-text\">Item 3</span>\n        </a>\n      </div>\n    </div>\n  </div>\n</div>\n```\n\n### Stateful text\n\nSelect menu buttons have the option of showing the current selection in the button itself. Wrap the string you intend to update with a `.js-select-button` and the select menu JavaScript will automatically update the contents of that element with the selected item's text.\n\nOpen the select menu below and click different options to see it in action.\n\n```erb\n<div class=\"select-menu js-menu-container js-select-menu\">\n  <button class=\"btn select-menu-button js-menu-target\" type=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">\n    <span class=\"js-select-button\">master</span>\n  </button>\n  <div class=\"select-menu-modal-holder\">\n    <div class=\"select-menu-modal js-menu-content\">\n      <div class=\"select-menu-header js-navigation-enable\" tabindex=\"-1\">\n        <button class=\"btn-link close-button js-menu-close\" type=\"button\"><%= octicon(\"x\", :\"aria-label\" => \"Close menu\") %></button>\n        <span class=\"select-menu-title\">Options</span>\n      </div>\n      <div class=\"select-menu-list js-navigation-container\">\n        <a href=\"#url\" class=\"select-menu-item selected js-navigation-item\">\n          <%= octicon(\"check\", :class => \"select-menu-item-icon\") %>\n          <span class=\"select-menu-item-text js-select-button-text\">master</span>\n        </a>\n        <a href=\"#url\" class=\"select-menu-item js-navigation-item\">\n          <%= octicon(\"check\", :class => \"select-menu-item-icon\") %>\n          <span class=\"select-menu-item-text js-select-button-text\">feature-branch</span>\n        </a>\n        <a href=\"#url\" class=\"select-menu-item js-navigation-item\">\n          <%= octicon(\"check\", :class => \"select-menu-item-icon\") %>\n          <span class=\"select-menu-item-text js-select-button-text\">refactor-component-name</span>\n        </a>\n      </div>\n    </div>\n  </div>\n</div>\n```\n\n### Emphasized text\n\nSometimes you want to spice up your select menu with an emphasized label for the type of content within the menu. For example, you show `Branch:` in front of the current branch on our repository Code page. Within the button, wrap your string in an `<i>` element and you're good to go.\n\nAs shown below, emphasized text works great with the stateful text functionality mentioned above.\n\n```erb\n<div class=\"select-menu js-menu-container js-select-menu\">\n  <button class=\"btn select-menu-button js-menu-target\" type=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">\n    <i>Branch:</i>\n    <span class=\"js-select-button\">master</span>\n  </button>\n  <div class=\"select-menu-modal-holder\">\n    <div class=\"select-menu-modal js-menu-content\">\n      <div class=\"select-menu-header js-navigation-enable\" tabindex=\"-1\">\n        <button class=\"btn-link close-button js-menu-close\" type=\"button\"><%= octicon(\"x\", :\"aria-label\" => \"Close menu\") %></button>\n        <span class=\"select-menu-title\">Options</span>\n      </div>\n      <div class=\"select-menu-list js-navigation-container\">\n        <a href=\"#url\" class=\"select-menu-item selected js-navigation-item\">\n          <%= octicon(\"check\", :class => \"select-menu-item-icon\") %>\n          <span class=\"select-menu-item-text js-select-button-text\">master</span>\n        </a>\n        <a href=\"#url\" class=\"select-menu-item js-navigation-item\">\n          <%= octicon(\"check\", :class => \"select-menu-item-icon\") %>\n          <span class=\"select-menu-item-text js-select-button-text\">feature-branch</span>\n        </a>\n        <a href=\"#url\" class=\"select-menu-item js-navigation-item\">\n          <%= octicon(\"check\", :class => \"select-menu-item-icon\") %>\n          <span class=\"select-menu-item-text js-select-button-text\">refactor-component-name</span>\n        </a>\n      </div>\n    </div>\n  </div>\n</div>\n```\n\n### Button avatars\n\nAdd an avatar to the button, like we do in our context switcher on the logged in dashboard.\n\n```erb\n<div class=\"select-menu js-menu-container js-select-menu\">\n  <button class=\"btn select-menu-button js-menu-target\" type=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">\n    <div class=\"select-menu-button-gravatar js-select-button-gravatar\">\n      <%= avatar_for(current_user, 20, :\"aria-label\" => \"\") %>\n    </div>\n    <span class=\"js-select-button css-truncate css-truncate-target\">probot</span>\n  </button>\n  <div class=\"select-menu-modal-holder\">\n    <div class=\"select-menu-modal js-menu-content\">\n      <div class=\"select-menu-header js-navigation-enable\" tabindex=\"-1\">\n        <button class=\"btn-link close-button js-menu-close\" type=\"button\"><%= octicon(\"x\", :\"aria-label\" => \"Close menu\") %></button>\n        <span class=\"select-menu-title\">Options</span>\n      </div>\n      <div class=\"select-menu-list js-navigation-container\">\n        <a href=\"#url\" class=\"select-menu-item selected js-navigation-item\">\n          <%= octicon(\"check\", :class => \"select-menu-item-icon\") %>\n          <span class=\"select-menu-item-gravatar\">\n            <%= avatar_for(current_user, 20, :\"aria-label\" => \"\") %>\n          </span>\n          <span class=\"select-menu-item-text js-select-button-text\">\n            probot\n          </span>\n        </a>\n        <a href=\"#url\" class=\"select-menu-item js-navigation-item\">\n          <%= octicon(\"check\", :class => \"select-menu-item-icon\") %>\n          <span class=\"select-menu-item-gravatar\">\n            <%= avatar_for(current_user, 20, :\"aria-label\" => \"\") %>\n          </span>\n          <span class=\"select-menu-item-text js-select-button-text\">\n            probot\n          </span>\n        </a>\n        <a href=\"#url\" class=\"select-menu-item js-navigation-item\">\n          <%= octicon(\"check\", :class => \"select-menu-item-icon\") %>\n          <span class=\"select-menu-item-gravatar\">\n            <%= avatar_for(current_user, 20, :\"aria-label\" => \"\") %>\n          </span>\n          <span class=\"select-menu-item-text js-select-button-text\">\n            probot\n          </span>\n        </a>\n      </div>\n    </div>\n  </div>\n</div>\n```\n"
  }
}